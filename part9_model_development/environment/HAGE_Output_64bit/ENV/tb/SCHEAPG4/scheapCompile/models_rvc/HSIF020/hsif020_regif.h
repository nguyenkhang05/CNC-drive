// -----------------------------------------------------------------------------
// $Id: hsif020_regif.h,v 1.7 2020/04/08 07:39:39 quynhnhunguyen Exp $
//
// Copyright(c) 2017-2020 Renesas Electronics Corporation
// Copyright(c) 2017-2020 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.60 2014/10/24 09:42:15 ducduong
//    regif_h.skl 1.30 2014/10/13 03:14:25 sontran
//
// Input file : ../../../input/rhsif/hsif020_regif.txt
////////////////////////////////////////////////////////////////////////////////
// %MODULE HSIF020
// #                   name            offset_size
// %%REG_INSTANCE      reg_def         12
// 
// %REG_CHANNEL reg_def
//     %%TITLE  name        reg_name    wsize       rsize       length  offset  factor_start    factor_end  factor_index    factor_step     access  init    support     callback
//     %%REG    HSIFnMMD    HSIFnMMD    8|16|32     8|16|32     32      0x00    -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnMCT    HSIFnMCT    8|16|32     8|16|32     32      0x08    -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnMST    HSIFnMST    8|16|32     8|16|32     32      0x10    -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnMIST   HSIFnMIST   8|16|32     8|16|32     32      0x18    -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnMRT    HSIFnMRT    8|16|32     8|16|32     32      0x20    -               -           -               -               R|W     0xF3FF  TRUE        -
//     %%REG    HSIFnMWmA   HSIFnMWmA   8|16|32     8|16|32     32      0x40    0               3           -               0x10            R|W     0x0     TRUE        -
//     %%REG    HSIFnMWmS   HSIFnMWmS   8|16|32     8|16|32     32      0x48    0               3           -               0x10            R|W     0x0     TRUE        -
//     %%REG    HSIFnSTMD   HSIFnSTMD   8|16|32     8|16|32     32      0x200   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSTCT   HSIFnSTCT   8|16|32     8|16|32     32      0x208   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSTST   HSIFnSTST   8|16|32     8|16|32     32      0x210   -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnSTSC   HSIFnSTSC   8|16|32     8|16|32     32      0x218   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSTIE   HSIFnSTIE   8|16|32     8|16|32     32      0x220   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSTSA   HSIFnSTSA   8|16|32     8|16|32     32      0x228   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSTBC   HSIFnSTBC   8|16|32     8|16|32     32      0x230   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRMD   HSIFnSRMD   8|16|32     8|16|32     32      0x280   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRCT   HSIFnSRCT   8|16|32     8|16|32     32      0x288   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRST   HSIFnSRST   8|16|32     8|16|32     32      0x290   -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnSRSC   HSIFnSRSC   8|16|32     8|16|32     32      0x298   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRIE   HSIFnSRIE   8|16|32     8|16|32     32      0x2A0   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRDA   HSIFnSRDA   8|16|32     8|16|32     32      0x2A8   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRDS   HSIFnSRDS   8|16|32     8|16|32     32      0x2B0   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRBC   HSIFnSRBC   8|16|32     8|16|32     32      0x2B8   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnSRWP   HSIFnSRWP   8|16|32     8|16|32     32      0x2C0   -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnSRRP   HSIFnSRRP   8|16|32     8|16|32     32      0x2C8   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnAID    HSIFnAID    8|16|32     8|16|32     32      0x300   0               7           -               0x8             R|W     0x0     TRUE        - 
//     %%REG    HSIFnAAD    HSIFnAAD    8|16|32     8|16|32     32      0x340   0               3           -               0x8             R|W     0x0     TRUE        -
//     %%REG    HSIFnARD    HSIFnARD    8|16|32     8|16|32     32      0x360   0               3           -               0x8             R|W     0x0     TRUE        -
//     %%REG    HSIFnAEST   HSIFnAEST   8|16|32     8|16|32     32      0x3E0   -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnAESC   HSIFnAESC   8|16|32     8|16|32     32      0x3E8   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnAEIE   HSIFnAEIE   8|16|32     8|16|32     32      0x3F0   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnMEST   HSIFnMEST   8|16|32     8|16|32     32      0x0E0   -               -           -               -               R       0x0     TRUE        -
//     %%REG    HSIFnMESC   HSIFnMESC   8|16|32     8|16|32     32      0x0E8   -               -           -               -               R|W     0x0     TRUE        -
//     %%REG    HSIFnMEIE   HSIFnMEIE   8|16|32     8|16|32     32      0x0F0   -               -           -               -               R|W     0x0     TRUE        -
// 
// 
// 
// 
// %REG_NAME HSIFnMMD
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    CHCT              0      0      0         R|W     TRUE     R|W
//  
// %REG_NAME HSIFnMCT
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    WARE              0      0     0         R|W      TRUE      -
//     %%BIT    WAWE              1      1     0         R|W      TRUE      -
//     %%BIT    WBRE              4      4     0         R|W      TRUE      -
//     %%BIT    WBWE              5      5     0         R|W      TRUE      -
//     %%BIT    WCRE              8      8     0         R|W      TRUE      -
//     %%BIT    WCWE              9      9     0         R|W      TRUE      -
//     %%BIT    WDRE              12     12    0         R|W      TRUE      -
//     %%BIT    WDWE              13     13    0         R|W      TRUE      R|W    
//                                                                         
// %REG_NAME HSIFnMST                                                      
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AUTS0             0      0     0         R       TRUE      -
//     %%BIT    AUTS1             1      1     0         R       TRUE      R|W
// 
// %REG_NAME HSIFnMIST
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    RARS0             0      0     0         R       TRUE      -
//     %%BIT    AKRS0             1      1     0         R       TRUE      -
//     %%BIT    TERS0             2      2     0         R       TRUE      -
//     %%BIT    RARS1             4      4     0         R       TRUE      -
//     %%BIT    AKRS1             5      5     0         R       TRUE      -
//     %%BIT    TERS1             6      6     0         R       TRUE      -
//     %%BIT    RARS2             8      8     0         R       TRUE      -
//     %%BIT    AKRS2             9      9     0         R       TRUE      -
//     %%BIT    TERS2             10     10    0         R       TRUE      -
//     %%BIT    RARS3             12     12    0         R       TRUE      -
//     %%BIT    AKRS3             13     13    0         R       TRUE      -
//     %%BIT    TERS3             14     14    0         R       TRUE      -
//     %%BIT    STCS              16     16    0         R       TRUE      -
//     %%BIT    SRCS0             17     17    0         R       TRUE      -
//     %%BIT    SRCS1             18     18    0         R       TRUE      -
//     %%BIT    CERS0             20     20    0         R       TRUE      -
//     %%BIT    CERS1             21     21    0         R       TRUE      -
//     %%BIT    CERS2             22     22    0         R       TRUE      -
//     %%BIT    CERS3             23     23    0         R       TRUE      -
//     %%BIT    STES              24     24    0         R       TRUE      -
//     %%BIT    SRES              25     25    0         R       TRUE      -
//     %%BIT    MESS              27     27    0         R       TRUE      -
//     %%BIT    AESS              28     28    0         R       TRUE      R|W
//     %%BIT    DBGS              31     31    0         R       TRUE      -
//                                                               
// %REG_NAME HSIFnMRT
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    RCNT             9      0      0x3FF     R|W     TRUE      -
//     %%BIT    RSCL             15     12     0xF       R|W     TRUE    R|W
// 
// %REG_NAME HSIFnMWmA
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    MWmA             31      2     0         R|W     TRUE      R|W
// 
// %REG_NAME HSIFnMWmS
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    MWmS              31     2     0         R|W     TRUE      R|W
//  
// %REG_NAME HSIFnSTMD
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STPS             16      16     0        R|W     TRUE      -
//     %%BIT    STNK             20      20     0        R|W     TRUE      R|W
//     %%BIT    STTH             14      12     0        R|W     TRUE      -
//     %%BIT    STBL             10      8      0        R|W     TRUE      -
//     %%BIT    STOS             6       4      0        R|W     TRUE      -
// 
// %REG_NAME HSIFnSTCT
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STDE             0      0     0          R|W     TRUE      R|W
// 
// %REG_NAME HSIFnSTST
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STC              0      0     0          R       TRUE      -
//     %%BIT    STE0             2      2     0          R       TRUE      -
//     %%BIT    STE1             4      4     0          R       TRUE      -
//     %%BIT    STE2             5      5     0          R       TRUE      -
//     %%BIT    STE3             20     20    0          R       TRUE      -
//     %%BIT    STE4             23     23    0          R       TRUE      R|W
//     
// %REG_NAME HSIFnSTSC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STCC             0      0     0          R|W     TRUE      -
//     %%BIT    STEC0            2      2     0          R|W     TRUE      -
//     %%BIT    STEC1            4      4     0          R|W     TRUE      -
//     %%BIT    STEC2            5      5     0          R|W     TRUE      -
//     %%BIT    STEC3            20     20    0          R|W     TRUE      -
//     %%BIT    STEC4            23     23    0          R|W     TRUE      R|W
//    
// %REG_NAME HSIFnSTIE
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STCE             0       0     0         R|W     TRUE      -
//     %%BIT    STEE0            2       2     0         R|W     TRUE      -
//     %%BIT    STEE1            4       4     0         R|W     TRUE      -
//     %%BIT    STEE2            5       5     0         R|W     TRUE      -
//     %%BIT    STEE3            20      20    0         R|W     TRUE      -
//     %%BIT    STEE4            23      23    0         R|W     TRUE      R|W
// 
// %REG_NAME HSIFnSTSA
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STSA             31      4     0         R|W     TRUE      R|W
// 
// %REG_NAME HSIFnSTBC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    STBC             24      4     0         R|W     TRUE      R|W
// 
// %REG_NAME HSIFnSRMD
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRPS             16      16     0        R|W     TRUE     -
//     %%BIT    SRMC             20      20     0        R|W     TRUE     R|W
//     %%BIT    SROS             4       4      0        R|W     TRUE     -
// 
// %REG_NAME HSIFnSRCT
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRDE             0       0      0        R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRST
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRC0             0       0      0        R       TRUE     -
//     %%BIT    SRC1             1       1      0        R       TRUE     -
//     %%BIT    SRTA             15      15     0        R       TRUE     -
//     %%BIT    SRE0             20      20     0        R       TRUE     -
//     %%BIT    SRE1             21      21     0        R       TRUE     -
//     %%BIT    SRE2             23      23     0        R       TRUE     -
//     %%BIT    SRA              31      31     0        R       TRUE     R|W
//     
// %REG_NAME HSIFnSRSC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SREC0            20      20     0        R|W     TRUE     -
//     %%BIT    SREC1            21      21     0        R|W     TRUE     -
//     %%BIT    SREC2            23      23     0        R|W     TRUE     -
//     %%BIT    SRAC             31      31     0        R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRIE
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRCE0            0       0      0        R|W     TRUE     -
//     %%BIT    SRCE1            1       1      0        R|W     TRUE     -
//     %%BIT    SREE0            20      20     0        R|W     TRUE     -
//     %%BIT    SREE1            21      21     0        R|W     TRUE     -
//     %%BIT    SREE2            23      23     0        R|W     TRUE     -
//     %%BIT    SRAE             31      31     0        R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRDA
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRDA             31      4     0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRDS
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRDS              24     4     0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRBC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRBC             24      4     0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnSRWP
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRWT             0       0      0        R       TRUE     -
//     %%BIT    SRWP             24      4      0        R       TRUE     R|W
// 
// %REG_NAME HSIFnSRRP
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    SRRT             0       0      0        R|W      TRUE     -
//     %%BIT    SRRP             24      4      0        R|W      TRUE     R|W
//     
// %REG_NAME HSIFnAID
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AID              31      0     0         R|W     TRUE     R|W
//     
// %REG_NAME HSIFnAAD
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AAD              31      0     0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnARD
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    ARD              31      0     0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnAEST
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AEE0             0       0     0         R        TRUE     -
//     %%BIT    AEI0             1       1     0         R        TRUE     -
//     %%BIT    AER0             2       2     0         R        TRUE     -
//     %%BIT    AEW0             3       3     0         R        TRUE     -
//     %%BIT    AEE1             4       4     0         R        TRUE     -
//     %%BIT    AEI1             5       5     0         R        TRUE     -
//     %%BIT    AER1             6       6     0         R        TRUE     -
//     %%BIT    AEW1             7       7     0         R        TRUE     -
//     %%BIT    AEE2             8       8     0         R        TRUE     -
//     %%BIT    AEI2             9       9     0         R        TRUE     -
//     %%BIT    AER2             10      10    0         R        TRUE     -
//     %%BIT    AEW2             11      11    0         R        TRUE     -
//     %%BIT    AEE3             12      12    0         R        TRUE     -
//     %%BIT    AEI3             13      13    0         R        TRUE     -
//     %%BIT    AER3             14      14    0         R        TRUE     -
//     %%BIT    AEW3             15      15    0         R        TRUE     -
//     %%BIT    AES              16      16    0         R        TRUE     -
//     %%BIT    WER0             20      20    0         R        TRUE     -
//     %%BIT    WEW0             21      21    0         R        TRUE     -
//     %%BIT    WER1             22      22    0         R        TRUE     -
//     %%BIT    WEW1             23      23    0         R        TRUE     -
//     %%BIT    WER2             24      24    0         R        TRUE     -
//     %%BIT    WEW2             25      25    0         R        TRUE     -
//     %%BIT    WER3             26      26    0         R        TRUE     -
//     %%BIT    WEW3             27      27    0         R        TRUE     -
//     %%BIT    WES0             28      28    0         R        TRUE     -
//     %%BIT    WES1             29      29    0         R        TRUE     R|W
// 
// %REG_NAME HSIFnAESC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AEEC0            0       0     0         R|W     TRUE     -
//     %%BIT    AEIC0            1       1     0         R|W     TRUE     -
//     %%BIT    AERC0            2       2     0         R|W     TRUE     -
//     %%BIT    AEWC0            3       3     0         R|W     TRUE     -
//     %%BIT    AEEC1            4       4     0         R|W     TRUE     -
//     %%BIT    AEIC1            5       5     0         R|W     TRUE     -
//     %%BIT    AERC1            6       6     0         R|W     TRUE     -
//     %%BIT    AEWC1            7       7     0         R|W     TRUE     -
//     %%BIT    AEEC2            8       8     0         R|W     TRUE     -
//     %%BIT    AEIC2            9       9     0         R|W     TRUE     -
//     %%BIT    AERC2            10      10    0         R|W     TRUE     -
//     %%BIT    AEWC2            11      11    0         R|W     TRUE     -
//     %%BIT    AEEC3            12      12    0         R|W     TRUE     -
//     %%BIT    AEIC3            13      13    0         R|W     TRUE     -
//     %%BIT    AERC3            14      14    0         R|W     TRUE     -
//     %%BIT    AEWC3            15      15    0         R|W     TRUE     -
//     %%BIT    AESC             16      16    0         R|W     TRUE     -
//     %%BIT    WERC0            20      20    0         R|W     TRUE     -
//     %%BIT    WEWC0            21      21    0         R|W     TRUE     -
//     %%BIT    WERC1            22      22    0         R|W     TRUE     -
//     %%BIT    WEWC1            23      23    0         R|W     TRUE     -
//     %%BIT    WERC2            24      24    0         R|W     TRUE     -
//     %%BIT    WEWC2            25      25    0         R|W     TRUE     -
//     %%BIT    WERC3            26      26    0         R|W     TRUE     -
//     %%BIT    WEWC3            27      27    0         R|W     TRUE     -
//     %%BIT    WESC0            28      28    0         R|W     TRUE     -
//     %%BIT    WESC1            29      29    0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnAEIE
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    AEEE0            0       0     0         R|W     TRUE     -
//     %%BIT    AEIE0            1       1     0         R|W     TRUE     -
//     %%BIT    AERE0            2       2     0         R|W     TRUE     -
//     %%BIT    AEWE0            3       3     0         R|W     TRUE     -
//     %%BIT    AEEE1            4       4     0         R|W     TRUE     -
//     %%BIT    AEIE1            5       5     0         R|W     TRUE     -
//     %%BIT    AERE1            6       6     0         R|W     TRUE     -
//     %%BIT    AEWE1            7       7     0         R|W     TRUE     -
//     %%BIT    AEEE2            8       8     0         R|W     TRUE     -
//     %%BIT    AEIE2            9       9     0         R|W     TRUE     -
//     %%BIT    AERE2            10      10    0         R|W     TRUE     -
//     %%BIT    AEWE2            11      11    0         R|W     TRUE     -
//     %%BIT    AEEE3            12      12    0         R|W     TRUE     -
//     %%BIT    AEIE3            13      13    0         R|W     TRUE     -
//     %%BIT    AERE3            14      14    0         R|W     TRUE     -
//     %%BIT    AEWE3            15      15    0         R|W     TRUE     -
//     %%BIT    AESE             16      16    0         R|W     TRUE     -
//     %%BIT    WERE0            20      20    0         R|W     TRUE     -
//     %%BIT    WEWE0            21      21    0         R|W     TRUE     -
//     %%BIT    WERE1            22      22    0         R|W     TRUE     -
//     %%BIT    WEWE1            23      23    0         R|W     TRUE     -
//     %%BIT    WERE2            24      24    0         R|W     TRUE     -
//     %%BIT    WEWE2            25      25    0         R|W     TRUE     -
//     %%BIT    WERE3            26      26    0         R|W     TRUE     -
//     %%BIT    WEWE3            27      27    0         R|W     TRUE     -
//     %%BIT    WESE0            28      28    0         R|W     TRUE     -
//     %%BIT    WESE1            29      29    0         R|W     TRUE     R|W
// 
// %REG_NAME HSIFnMEST
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    PSE3             7      7      0         R       TRUE     -
//     %%BIT    PSE2             6      6      0         R       TRUE     -
//     %%BIT    PSE1             5      5      0         R       TRUE     -
//     %%BIT    PSE0             4      4      0         R       TRUE     -
//     %%BIT    CTE              0      0      0         R       TRUE     -
// 
// %REG_NAME HSIFnMESC
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    PSEC3            7      7      0         R|W     TRUE     -
//     %%BIT    PSEC2            6      6      0         R|W     TRUE     -
//     %%BIT    PSEC1            5      5      0         R|W     TRUE     -
//     %%BIT    PSEC0            4      4      0         R|W     TRUE     -
//     %%BIT    CTEC             0      0      0         R|W     TRUE     -
// 
// %REG_NAME HSIFnMEIE
//     %%TITLE  name             upper  lower  init      access  support  callback
//     %%BIT    PSEE3            7      7      0         R|W     TRUE     -
//     %%BIT    PSEE2            6      6      0         R|W     TRUE     -
//     %%BIT    PSEE1            5      5      0         R|W     TRUE     -
//     %%BIT    PSEE0            4      4      0         R|W     TRUE     -
//     %%BIT    CTEE             0      0      0         R|W     TRUE     -
// 
////////////////////////////////////////////////////////////////////////////////
/// @file hsif020_regif.h
/// @brief Register IF class of model HSIF020
/// $Id: hsif020_regif.h,v 1.7 2020/04/08 07:39:39 quynhnhunguyen Exp $
/// $Date: 2020/04/08 07:39:39 $
/// $Revison$
/// $Author: quynhnhunguyen $
////////////////////////////////////////////////////////////////////////////////
#ifndef __HSIF020_REGIF_H__
#define __HSIF020_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#ifdef REGIF_NOT_USE_SYSTEMC
#include <cassert>
#else
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef USR_CWR_SYSTEMC
#include "scml.h"
#endif

/// Register IF class of HSIF020 model
class Chsif020_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index
    enum eRegIndex {
        emNUM_HSIFnMWmA = 4,
        emNUM_HSIFnMWmS = 4,
        emNUM_HSIFnAID  = 8,
        emNUM_HSIFnAAD  = 4,
        emNUM_HSIFnARD  = 4
    }; ///< Enumeration for register factor index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel = channel;
            this-> is_wr   = is_wr;
            this-> size    = size;
            this-> pre_data= pre_data;
            this-> data    = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel = _channel;
            this->length  = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block = _block;
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Chsif020_regif(std::string name, uint buswidth);
    ~Chsif020_regif();

protected:
    vpcl::re_register *HSIFnMMD ;
    vpcl::re_register *HSIFnMCT ;
    vpcl::re_register *HSIFnMST ;
    vpcl::re_register *HSIFnMIST;
    vpcl::re_register *HSIFnMRT ;
    vpcl::re_register *HSIFnMWmA[4];
    vpcl::re_register *HSIFnMWmS[4];
    vpcl::re_register *HSIFnSTMD;
    vpcl::re_register *HSIFnSTCT;
    vpcl::re_register *HSIFnSTST;
    vpcl::re_register *HSIFnSTSC;
    vpcl::re_register *HSIFnSTIE;
    vpcl::re_register *HSIFnSTSA;
    vpcl::re_register *HSIFnSTBC;
    vpcl::re_register *HSIFnSRMD;
    vpcl::re_register *HSIFnSRCT;
    vpcl::re_register *HSIFnSRST;
    vpcl::re_register *HSIFnSRSC;
    vpcl::re_register *HSIFnSRIE;
    vpcl::re_register *HSIFnSRDA;
    vpcl::re_register *HSIFnSRDS;
    vpcl::re_register *HSIFnSRBC;
    vpcl::re_register *HSIFnSRWP;
    vpcl::re_register *HSIFnSRRP;
    vpcl::re_register *HSIFnAID [8];
    vpcl::re_register *HSIFnAAD [4];
    vpcl::re_register *HSIFnARD [4];
    vpcl::re_register *HSIFnAEST;
    vpcl::re_register *HSIFnAESC;
    vpcl::re_register *HSIFnAEIE;
    vpcl::re_register *HSIFnMEST;
    vpcl::re_register *HSIFnMESC;
    vpcl::re_register *HSIFnMEIE;

    #ifdef USR_CWR_SYSTEMC
    scml2::memory<uint> cwmem;
    scml2::reg<uint> *CW_HSIFnMMD ;
    scml2::reg<uint> *CW_HSIFnMCT ;
    scml2::reg<uint> *CW_HSIFnMST ;
    scml2::reg<uint> *CW_HSIFnMIST;
    scml2::reg<uint> *CW_HSIFnMRT ;
    scml2::reg<uint> *CW_HSIFnMWmA[4];
    scml2::reg<uint> *CW_HSIFnMWmS[4];
    scml2::reg<uint> *CW_HSIFnSTMD;
    scml2::reg<uint> *CW_HSIFnSTCT;
    scml2::reg<uint> *CW_HSIFnSTST;
    scml2::reg<uint> *CW_HSIFnSTSC;
    scml2::reg<uint> *CW_HSIFnSTIE;
    scml2::reg<uint> *CW_HSIFnSTSA;
    scml2::reg<uint> *CW_HSIFnSTBC;
    scml2::reg<uint> *CW_HSIFnSRMD;
    scml2::reg<uint> *CW_HSIFnSRCT;
    scml2::reg<uint> *CW_HSIFnSRST;
    scml2::reg<uint> *CW_HSIFnSRSC;
    scml2::reg<uint> *CW_HSIFnSRIE;
    scml2::reg<uint> *CW_HSIFnSRDA;
    scml2::reg<uint> *CW_HSIFnSRDS;
    scml2::reg<uint> *CW_HSIFnSRBC;
    scml2::reg<uint> *CW_HSIFnSRWP;
    scml2::reg<uint> *CW_HSIFnSRRP;
    scml2::reg<uint> *CW_HSIFnAID [8];
    scml2::reg<uint> *CW_HSIFnAAD [4];
    scml2::reg<uint> *CW_HSIFnARD [4];
    scml2::reg<uint> *CW_HSIFnAEST;
    scml2::reg<uint> *CW_HSIFnAESC;
    scml2::reg<uint> *CW_HSIFnAEIE;
    scml2::reg<uint> *CW_HSIFnMEST;
    scml2::reg<uint> *CW_HSIFnMESC;
    scml2::reg<uint> *CW_HSIFnMEIE;
    #endif

    uint HSIFnMMD_CHCT;
    uint HSIFnMCT_WARE;
    uint HSIFnMCT_WAWE;
    uint HSIFnMCT_WBRE;
    uint HSIFnMCT_WBWE;
    uint HSIFnMCT_WCRE;
    uint HSIFnMCT_WCWE;
    uint HSIFnMCT_WDRE;
    uint HSIFnMCT_WDWE;
    uint HSIFnMST_AUTS0;
    uint HSIFnMST_AUTS1;
    uint HSIFnMIST_RARS0;
    uint HSIFnMIST_AKRS0;
    uint HSIFnMIST_TERS0;
    uint HSIFnMIST_RARS1;
    uint HSIFnMIST_AKRS1;
    uint HSIFnMIST_TERS1;
    uint HSIFnMIST_RARS2;
    uint HSIFnMIST_AKRS2;
    uint HSIFnMIST_TERS2;
    uint HSIFnMIST_RARS3;
    uint HSIFnMIST_AKRS3;
    uint HSIFnMIST_TERS3;
    uint HSIFnMIST_STCS;
    uint HSIFnMIST_SRCS0;
    uint HSIFnMIST_SRCS1;
    uint HSIFnMIST_CERS0;
    uint HSIFnMIST_CERS1;
    uint HSIFnMIST_CERS2;
    uint HSIFnMIST_CERS3;
    uint HSIFnMIST_STES;
    uint HSIFnMIST_SRES;
    uint HSIFnMIST_MESS;
    uint HSIFnMIST_AESS;
    uint HSIFnMIST_DBGS;
    uint HSIFnMRT_RCNT;
    uint HSIFnMRT_RSCL;
    uint HSIFnMWmA_MWmA[4];
    uint HSIFnMWmS_MWmS[4];
    uint HSIFnSTMD_STPS;
    uint HSIFnSTMD_STNK;
    uint HSIFnSTMD_STTH;
    uint HSIFnSTMD_STBL;
    uint HSIFnSTMD_STOS;
    uint HSIFnSTCT_STDE;
    uint HSIFnSTST_STC;
    uint HSIFnSTST_STE0;
    uint HSIFnSTST_STE1;
    uint HSIFnSTST_STE2;
    uint HSIFnSTST_STE3;
    uint HSIFnSTST_STE4;
    uint HSIFnSTSC_STCC;
    uint HSIFnSTSC_STEC0;
    uint HSIFnSTSC_STEC1;
    uint HSIFnSTSC_STEC2;
    uint HSIFnSTSC_STEC3;
    uint HSIFnSTSC_STEC4;
    uint HSIFnSTIE_STCE;
    uint HSIFnSTIE_STEE0;
    uint HSIFnSTIE_STEE1;
    uint HSIFnSTIE_STEE2;
    uint HSIFnSTIE_STEE3;
    uint HSIFnSTIE_STEE4;
    uint HSIFnSTSA_STSA;
    uint HSIFnSTBC_STBC;
    uint HSIFnSRMD_SRPS;
    uint HSIFnSRMD_SRMC;
    uint HSIFnSRMD_SROS;
    uint HSIFnSRCT_SRDE;
    uint HSIFnSRST_SRC0;
    uint HSIFnSRST_SRC1;
    uint HSIFnSRST_SRTA;
    uint HSIFnSRST_SRE0;
    uint HSIFnSRST_SRE1;
    uint HSIFnSRST_SRE2;
    uint HSIFnSRST_SRA;
    uint HSIFnSRSC_SREC0;
    uint HSIFnSRSC_SREC1;
    uint HSIFnSRSC_SREC2;
    uint HSIFnSRSC_SRAC;
    uint HSIFnSRIE_SRCE0;
    uint HSIFnSRIE_SRCE1;
    uint HSIFnSRIE_SREE0;
    uint HSIFnSRIE_SREE1;
    uint HSIFnSRIE_SREE2;
    uint HSIFnSRIE_SRAE;
    uint HSIFnSRDA_SRDA;
    uint HSIFnSRDS_SRDS;
    uint HSIFnSRBC_SRBC;
    uint HSIFnSRWP_SRWT;
    uint HSIFnSRWP_SRWP;
    uint HSIFnSRRP_SRRT;
    uint HSIFnSRRP_SRRP;
    uint HSIFnAID_AID[8];
    uint HSIFnAAD_AAD[4];
    uint HSIFnARD_ARD[4];
    uint HSIFnAEST_AEE0;
    uint HSIFnAEST_AEI0;
    uint HSIFnAEST_AER0;
    uint HSIFnAEST_AEW0;
    uint HSIFnAEST_AEE1;
    uint HSIFnAEST_AEI1;
    uint HSIFnAEST_AER1;
    uint HSIFnAEST_AEW1;
    uint HSIFnAEST_AEE2;
    uint HSIFnAEST_AEI2;
    uint HSIFnAEST_AER2;
    uint HSIFnAEST_AEW2;
    uint HSIFnAEST_AEE3;
    uint HSIFnAEST_AEI3;
    uint HSIFnAEST_AER3;
    uint HSIFnAEST_AEW3;
    uint HSIFnAEST_AES;
    uint HSIFnAEST_WER0;
    uint HSIFnAEST_WEW0;
    uint HSIFnAEST_WER1;
    uint HSIFnAEST_WEW1;
    uint HSIFnAEST_WER2;
    uint HSIFnAEST_WEW2;
    uint HSIFnAEST_WER3;
    uint HSIFnAEST_WEW3;
    uint HSIFnAEST_WES0;
    uint HSIFnAEST_WES1;
    uint HSIFnAESC_AEEC0;
    uint HSIFnAESC_AEIC0;
    uint HSIFnAESC_AERC0;
    uint HSIFnAESC_AEWC0;
    uint HSIFnAESC_AEEC1;
    uint HSIFnAESC_AEIC1;
    uint HSIFnAESC_AERC1;
    uint HSIFnAESC_AEWC1;
    uint HSIFnAESC_AEEC2;
    uint HSIFnAESC_AEIC2;
    uint HSIFnAESC_AERC2;
    uint HSIFnAESC_AEWC2;
    uint HSIFnAESC_AEEC3;
    uint HSIFnAESC_AEIC3;
    uint HSIFnAESC_AERC3;
    uint HSIFnAESC_AEWC3;
    uint HSIFnAESC_AESC;
    uint HSIFnAESC_WERC0;
    uint HSIFnAESC_WEWC0;
    uint HSIFnAESC_WERC1;
    uint HSIFnAESC_WEWC1;
    uint HSIFnAESC_WERC2;
    uint HSIFnAESC_WEWC2;
    uint HSIFnAESC_WERC3;
    uint HSIFnAESC_WEWC3;
    uint HSIFnAESC_WESC0;
    uint HSIFnAESC_WESC1;
    uint HSIFnAEIE_AEEE0;
    uint HSIFnAEIE_AEIE0;
    uint HSIFnAEIE_AERE0;
    uint HSIFnAEIE_AEWE0;
    uint HSIFnAEIE_AEEE1;
    uint HSIFnAEIE_AEIE1;
    uint HSIFnAEIE_AERE1;
    uint HSIFnAEIE_AEWE1;
    uint HSIFnAEIE_AEEE2;
    uint HSIFnAEIE_AEIE2;
    uint HSIFnAEIE_AERE2;
    uint HSIFnAEIE_AEWE2;
    uint HSIFnAEIE_AEEE3;
    uint HSIFnAEIE_AEIE3;
    uint HSIFnAEIE_AERE3;
    uint HSIFnAEIE_AEWE3;
    uint HSIFnAEIE_AESE;
    uint HSIFnAEIE_WERE0;
    uint HSIFnAEIE_WEWE0;
    uint HSIFnAEIE_WERE1;
    uint HSIFnAEIE_WEWE1;
    uint HSIFnAEIE_WERE2;
    uint HSIFnAEIE_WEWE2;
    uint HSIFnAEIE_WERE3;
    uint HSIFnAEIE_WEWE3;
    uint HSIFnAEIE_WESE0;
    uint HSIFnAEIE_WESE1;
    uint HSIFnMEST_PSE3;
    uint HSIFnMEST_PSE2;
    uint HSIFnMEST_PSE1;
    uint HSIFnMEST_PSE0;
    uint HSIFnMEST_CTE;
    uint HSIFnMESC_PSEC3;
    uint HSIFnMESC_PSEC2;
    uint HSIFnMESC_PSEC1;
    uint HSIFnMESC_PSEC0;
    uint HSIFnMESC_CTEC;
    uint HSIFnMEIE_PSEE3;
    uint HSIFnMEIE_PSEE2;
    uint HSIFnMEIE_PSEE1;
    uint HSIFnMEIE_PSEE0;
    uint HSIFnMEIE_CTEE;

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_HSIFnMMD_CHCT(RegCBstr str) = 0;
    virtual void cb_HSIFnMCT_WDWE(RegCBstr str) = 0;
    virtual void cb_HSIFnMST_AUTS1(RegCBstr str) = 0;
    virtual void cb_HSIFnMIST_AESS(RegCBstr str) = 0;
    virtual void cb_HSIFnMRT_RSCL(RegCBstr str) = 0;
    virtual void cb_HSIFnMWmA_MWmA(RegCBstr str) = 0;
    virtual void cb_HSIFnMWmS_MWmS(RegCBstr str) = 0;
    virtual void cb_HSIFnSTMD_STNK(RegCBstr str) = 0;
    virtual void cb_HSIFnSTCT_STDE(RegCBstr str) = 0;
    virtual void cb_HSIFnSTSC_STEC4(RegCBstr str) = 0;
    virtual void cb_HSIFnSTIE_STEE4(RegCBstr str) = 0;
    virtual void cb_HSIFnSTSA_STSA(RegCBstr str) = 0;
    virtual void cb_HSIFnSTBC_STBC(RegCBstr str) = 0;
    virtual void cb_HSIFnSRMD_SRMC(RegCBstr str) = 0;
    virtual void cb_HSIFnSRCT_SRDE(RegCBstr str) = 0;
    virtual void cb_HSIFnSRST_SRA(RegCBstr str) = 0;
    virtual void cb_HSIFnSRSC_SRAC(RegCBstr str) = 0;
    virtual void cb_HSIFnSRIE_SRAE(RegCBstr str) = 0;
    virtual void cb_HSIFnSRDA_SRDA(RegCBstr str) = 0;
    virtual void cb_HSIFnSRDS_SRDS(RegCBstr str) = 0;
    virtual void cb_HSIFnSRBC_SRBC(RegCBstr str) = 0;
    virtual void cb_HSIFnSRWP_SRWP(RegCBstr str) = 0;
    virtual void cb_HSIFnSRRP_SRRP(RegCBstr str) = 0;
    virtual void cb_HSIFnAID_AID(RegCBstr str) = 0;
    virtual void cb_HSIFnAAD_AAD(RegCBstr str) = 0;
    virtual void cb_HSIFnARD_ARD(RegCBstr str) = 0;
    virtual void cb_HSIFnAESC_WESC1(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Chsif020_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Chsif020_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);

    #ifdef USR_CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    void cw_instantiate_reg(scml2::reg<uint> * reg, std::string reg_name, int offset);
    #endif
};
#endif //__HSIF020_REG_DEF_H__
