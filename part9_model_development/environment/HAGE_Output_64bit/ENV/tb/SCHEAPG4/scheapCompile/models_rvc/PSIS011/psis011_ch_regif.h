// -----------------------------------------------------------------------------
// $Id: psis011_ch_regif.h,v 1.6 2017/12/16 09:57:23 chanle Exp $
//
// Copyright(c) 2017 Renesas Electronics Corporation
// Copyright(c) 2017 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.60 2014/10/24 09:42:15 ducduong
//    regif_h.skl 1.30 2014/10/13 03:14:25 sontran
//
// Input file : psis011_ch_regif.txt
////////////////////////////////////////////////////////////////////////////////
// %MODULE psis011_ch
//     #              name     offset_size
//     %%REG_INSTANCE reg_def  8 
// 
// %REG_CHANNEL reg_def                                                       
//     %%TITLE    name            reg_name        wsize   rsize  length offset  access   init   support  callback
//     %%REG      PSI5SPRCF1n    PSI5SPRCF1n         32 8|16|32  32     0x00   R|W      0x0     TRUE     -
//     %%REG      PSI5SPRCF2n    PSI5SPRCF2n         32 8|16|32  32     0x04   R|W      0x0     TRUE     -
//     %%REG      PSI5SPWDEn     PSI5SPWDEn     8|16|32 8|16|32  32     0x08   R|W      0x0     TRUE     -
//     %%REG      PSI5SPWDPn     PSI5SPWDPn       16|32 8|16|32  32     0x0C   R|W      0x0     TRUE     -
//     %%REG      PSI5SPWDEVn    PSI5SPWDEVn         32 8|16|32  32     0x10   R|W      0x0     TRUE     -
//     %%REG      PSI5SPTCDn     PSI5SPTCDn       16|32 8|16|32  32     0x14   R|W      0x0     TRUE     -
//     %%REG      PSI5SPCIEn     PSI5SPCIEn       16|32 8|16|32  32     0x18   R|W      0x0     TRUE     -
//     %%REG      PSI5SPDREn     PSI5SPDREn          32 8|16|32  32     0x1C   R|W      0x0     TRUE     -
//     %%REG      PSI5SPSTPn     PSI5SPSTPn       16|32 8|16|32  32     0x24   R|W      0x0     TRUE     -
//     %%REG      PSI5SPSTEVn    PSI5SPSTEVn         32 8|16|32  32     0x28   R|W      0x0     TRUE     -
//     %%REG      PSI5SPSTSn     PSI5SPSTSn     8|16|32 8|16|32  32     0x2C   R|W      0x0     TRUE     -
// 
//     %%REG      PSI5SPRESn     PSI5SPRESn     -       8|16|32  32     0x30   R        0x0     TRUE     -
//     %%REG      PSI5SPRESCn    PSI5SPRESCn    8|16|32 8|16|32  32     0x34   R|W      0x0     TRUE     -
//     %%REG      PSI5SPTCDTn    PSI5SPTCDTn    -       8|16|32  32     0x38   R        0x0     TRUE     -
//     %%REG      PSI5SPTCDCn    PSI5SPTCDCn    8|16|32 8|16|32  32     0x3C   R|W      0x0     TRUE     -
// 
//     %%REG      PSI5SPDDTPn    PSI5SPDDTPn    8|16|32 8|16|32  32     0x40   R|W      0x0     TRUE     -
//     %%REG      PSI5SPDDDn     PSI5SPDDDn          32 8|16|32  32     0x44   R|W      0x0     TRUE     -
//     %%REG      PSI5SPDDSn     PSI5SPDDSn     -       8|16|32  32     0x48   R        0x0     TRUE     -
//     %%REG      PSI5SPDDSPn    PSI5SPDDSPn    8|16|32 8|16|32  32     0x4C   R|W      0x0     TRUE     -
// 
//     %%REG      PSI5SPCISn     PSI5SPCISn     -       8|16|32  32     0x50   R        0x0     TRUE     -
//     %%REG      PSI5SPCISCn    PSI5SPCISCn      16|32 8|16|32  32     0x54   R|W      0x0     TRUE     -
// 
// %REG_NAME PSI5SPRCF1n                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    PFRMIDLE           27      24      0       R|W     TRUE        -
//     %%BIT    F6PKT              23      21      0       R|W     TRUE        -
//     %%BIT    F5PKT              20      18      0       R|W     TRUE        -
//     %%BIT    F4PKT              17      15      0       R|W     TRUE        -
//     %%BIT    F3PKT              14      12      0       R|W     TRUE        -
//     %%BIT    F2PKT              11      9       0       R|W     TRUE        -
//     %%BIT    F1PKT              8       6       0       R|W     TRUE        -
//     %%BIT    SYSEL              5       5       0       R|W     TRUE        -
//     %%BIT    TSCTS              4       4       0       R|W     TRUE        -
//     %%BIT    TSCS               3       3       0       R|W     TRUE        -
//     %%BIT    TSEN               2       2       0       R|W     TRUE        -
//     %%BIT    RFCPS              1       1       0       R|W     TRUE        -
//     %%BIT    CHEN               0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPRCF2n                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    F6PAYLD            29      25      0       R|W     TRUE        -
//     %%BIT    F5PAYLD            24      20      0       R|W     TRUE        -
//     %%BIT    F4PAYLD            19      15      0       R|W     TRUE        -
//     %%BIT    F3PAYLD            14      10      0       R|W     TRUE        -
//     %%BIT    F2PAYLD            9       5       0       R|W     TRUE        -
//     %%BIT    F1PAYLD            4       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPWDEn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    WDTEB              0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPWDPn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    WDTPRS             11      0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPWDEVn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    WDTEX              23      0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPTCDn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    ATRSCMD            15      11      0       R|W     TRUE        -
//     %%BIT    ACHID              10      8       0       R|W     TRUE        -
//     %%BIT    TRSCMD             7       3       0       R|W     TRUE        -
//     %%BIT    CHID               2       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPCIEn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    IEBCTFN            14      14      0       R|W     TRUE        -
//     %%BIT    IEBDDSFN           13      13      0       R|W     TRUE        -
//     %%BIT    IEBDDSOW           12      12      0       R|W     TRUE        -
//     %%BIT    IEBRFN             11      11      0       R|W     TRUE        -
//     %%BIT    IEBRFEX            10      10      0       R|W     TRUE        -
//     %%BIT    IEBRFLK            9       9       0       R|W     TRUE        -
//     %%BIT    IEBROV             8       8       0       R|W     TRUE        -
//     %%BIT    IEBRWDT            7       7       0       R|W     TRUE        -
//     %%BIT    IEBUTFR            5       5       0       R|W     TRUE        -
//     %%BIT    IEBUTPT            4       4       0       R|W     TRUE        -
//     %%BIT    IEBTRST            3       3       0       R|W     TRUE        -
//     %%BIT    IEBPT              2       2       0       R|W     TRUE        -
//     %%BIT    IEBCRC             1       1       0       R|W     TRUE        W
//     %%BIT    IEBXCRC            0       0       0       R|W     TRUE        -
// 
// %REG_NAME PSI5SPDREn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    DRQETFN            2       2       0       R|W     TRUE        -
//     %%BIT    DRQEWDT            1       1       0       R|W     TRUE        -
//     %%BIT    DRQERFN            0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPSTPn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    STPRS              11      0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPSTEVn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    STEX               23      0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPSTSn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    STSEL              0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPRESn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    RERRF6             5       5       0       R       TRUE        -
//     %%BIT    RERRF5             4       4       0       R       TRUE        -
//     %%BIT    RERRF4             3       3       0       R       TRUE        -
//     %%BIT    RERRF3             2       2       0       R       TRUE        -
//     %%BIT    RERRF2             1       1       0       R       TRUE        -
//     %%BIT    RERRF1             0       0       0       R       TRUE        -
// 
// %REG_NAME PSI5SPRESCn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    RERRCLF6           5       5       0       R|W     TRUE        -
//     %%BIT    RERRCLF5           4       4       0       R|W     TRUE        -
//     %%BIT    RERRCLF4           3       3       0       R|W     TRUE        -
//     %%BIT    RERRCLF3           2       2       0       R|W     TRUE        -
//     %%BIT    RERRCLF2           1       1       0       R|W     TRUE        -
//     %%BIT    RERRCLF1           0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPTCDTn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    TSCD               23      0       0       R       TRUE        -
// 
// %REG_NAME PSI5SPTCDCn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    TSCCLR             0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPDDTPn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    DDSRTYPE           1       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPDDDn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    DDSRDT             23      4       0xFFFFF R|W     TRUE        -
//     %%BIT    DDSRADR            3       0       0xF     R|W     TRUE        W
// 
// %REG_NAME PSI5SPDDSn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    DDSRSTS            0       0       0       R       TRUE        -
// 
// %REG_NAME PSI5SPDDSPn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    DDSRSTP            0       0       0       R|W     TRUE        W
// 
// %REG_NAME PSI5SPCISn                                                           
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    ISTCTFN            14      14      0       R       TRUE        -
//     %%BIT    ISTDDSFN           13      13      0       R       TRUE        -
//     %%BIT    ISTDDSOW           12      12      0       R       TRUE        -
//     %%BIT    ISTRFN             11      11      0       R       TRUE        -
//     %%BIT    ISTRFEX            10      10      0       R       TRUE        -
//     %%BIT    ISTRFLK            9       9       0       R       TRUE        -
//     %%BIT    ISTROV             8       8       0       R       TRUE        -
//     %%BIT    ISTRWDT            7       7       0       R       TRUE        -
//     %%BIT    ISTUTFR            5       5       0       R       TRUE        -
//     %%BIT    ISTUTPT            4       4       0       R       TRUE        -
//     %%BIT    ISTTRST            3       3       0       R       TRUE        -
//     %%BIT    ISTPT              2       2       0       R       TRUE        -
//     %%BIT    ISTCRC             1       1       0       R       TRUE        -
//     %%BIT    ISTXCRC            0       0       0       R       TRUE        -
// 
// %REG_NAME PSI5SPCISCn                                                          
//     %%TITLE  name               upper   lower   init    access  support     callback
//     %%BIT    ISTCCTFN           14      14      0       R|W     TRUE        -
//     %%BIT    ISTCDDSFN          13      13      0       R|W     TRUE        -
//     %%BIT    ISTCDDSOW          12      12      0       R|W     TRUE        -
//     %%BIT    ISTCRFN            11      11      0       R|W     TRUE        -
//     %%BIT    ISTCRFEX           10      10      0       R|W     TRUE        -
//     %%BIT    ISTCRFLK           9       9       0       R|W     TRUE        -
//     %%BIT    ISTCROV            8       8       0       R|W     TRUE        -
//     %%BIT    ISTCRWDT           7       7       0       R|W     TRUE        -
//     %%BIT    ISTCUTFR           5       5       0       R|W     TRUE        -
//     %%BIT    ISTCUTPT           4       4       0       R|W     TRUE        -
//     %%BIT    ISTCTRST           3       3       0       R|W     TRUE        -
//     %%BIT    ISTCPT             2       2       0       R|W     TRUE        -
//     %%BIT    ISTCCRC            1       1       0       R|W     TRUE        W
//     %%BIT    ISTCXCRC           0       0       0       R|W     TRUE        -
////////////////////////////////////////////////////////////////////////////////
/// @file psis011_ch_regif.h
/// @brief Register IF class of model PSIS011_CH
/// $Id: psis011_ch_regif.h,v 1.6 2017/12/16 09:57:23 chanle Exp $
/// $Date: 2017/12/16 09:57:23 $
/// $Revison$
/// $Author: chanle $
////////////////////////////////////////////////////////////////////////////////
#ifndef __PSIS011_CH_REGIF_H__
#define __PSIS011_CH_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#ifdef REGIF_NOT_USE_SYSTEMC
#include <cassert>
#else
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef CWR_SYSTEMC
#include "scml.h"
#endif

/// Register IF class of PSIS011_CH model
class Cpsis011_ch_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel = channel;
            this-> is_wr   = is_wr;
            this-> size    = size;
            this-> pre_data= pre_data;
            this-> data    = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel = _channel;
            this->length  = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block = _block;
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Cpsis011_ch_regif(std::string name, uint buswidth, unsigned int chid = 0);
    ~Cpsis011_ch_regif();

protected:
    vpcl::re_register *PSI5SPRCF1n;
    vpcl::re_register *PSI5SPRCF2n;
    vpcl::re_register *PSI5SPWDEn ;
    vpcl::re_register *PSI5SPWDPn ;
    vpcl::re_register *PSI5SPWDEVn;
    vpcl::re_register *PSI5SPTCDn ;
    vpcl::re_register *PSI5SPCIEn ;
    vpcl::re_register *PSI5SPDREn ;
    vpcl::re_register *PSI5SPSTPn ;
    vpcl::re_register *PSI5SPSTEVn;
    vpcl::re_register *PSI5SPSTSn ;
    vpcl::re_register *PSI5SPRESn ;
    vpcl::re_register *PSI5SPRESCn;
    vpcl::re_register *PSI5SPTCDTn;
    vpcl::re_register *PSI5SPTCDCn;
    vpcl::re_register *PSI5SPDDTPn;
    vpcl::re_register *PSI5SPDDDn ;
    vpcl::re_register *PSI5SPDDSn ;
    vpcl::re_register *PSI5SPDDSPn;
    vpcl::re_register *PSI5SPCISn ;
    vpcl::re_register *PSI5SPCISCn;

    #ifdef CWR_SYSTEMC
    scml2::memory<uint> cwmem;
    scml2::reg<uint> *CW_PSI5SPRCF1n;
    scml2::reg<uint> *CW_PSI5SPRCF2n;
    scml2::reg<uint> *CW_PSI5SPWDEn ;
    scml2::reg<uint> *CW_PSI5SPWDPn ;
    scml2::reg<uint> *CW_PSI5SPWDEVn;
    scml2::reg<uint> *CW_PSI5SPTCDn ;
    scml2::reg<uint> *CW_PSI5SPCIEn ;
    scml2::reg<uint> *CW_PSI5SPDREn ;
    scml2::reg<uint> *CW_PSI5SPSTPn ;
    scml2::reg<uint> *CW_PSI5SPSTEVn;
    scml2::reg<uint> *CW_PSI5SPSTSn ;
    scml2::reg<uint> *CW_PSI5SPRESn ;
    scml2::reg<uint> *CW_PSI5SPRESCn;
    scml2::reg<uint> *CW_PSI5SPTCDTn;
    scml2::reg<uint> *CW_PSI5SPTCDCn;
    scml2::reg<uint> *CW_PSI5SPDDTPn;
    scml2::reg<uint> *CW_PSI5SPDDDn ;
    scml2::reg<uint> *CW_PSI5SPDDSn ;
    scml2::reg<uint> *CW_PSI5SPDDSPn;
    scml2::reg<uint> *CW_PSI5SPCISn ;
    scml2::reg<uint> *CW_PSI5SPCISCn;
    #endif

    uint PSI5SPRCF1n_PFRMIDLE;
    uint PSI5SPRCF1n_F6PKT;
    uint PSI5SPRCF1n_F5PKT;
    uint PSI5SPRCF1n_F4PKT;
    uint PSI5SPRCF1n_F3PKT;
    uint PSI5SPRCF1n_F2PKT;
    uint PSI5SPRCF1n_F1PKT;
    uint PSI5SPRCF1n_SYSEL;
    uint PSI5SPRCF1n_TSCTS;
    uint PSI5SPRCF1n_TSCS;
    uint PSI5SPRCF1n_TSEN;
    uint PSI5SPRCF1n_RFCPS;
    uint PSI5SPRCF1n_CHEN;
    uint PSI5SPRCF2n_F6PAYLD;
    uint PSI5SPRCF2n_F5PAYLD;
    uint PSI5SPRCF2n_F4PAYLD;
    uint PSI5SPRCF2n_F3PAYLD;
    uint PSI5SPRCF2n_F2PAYLD;
    uint PSI5SPRCF2n_F1PAYLD;
    uint PSI5SPWDEn_WDTEB;
    uint PSI5SPWDPn_WDTPRS;
    uint PSI5SPWDEVn_WDTEX;
    uint PSI5SPTCDn_ATRSCMD;
    uint PSI5SPTCDn_ACHID;
    uint PSI5SPTCDn_TRSCMD;
    uint PSI5SPTCDn_CHID;
    uint PSI5SPCIEn_IEBCTFN;
    uint PSI5SPCIEn_IEBDDSFN;
    uint PSI5SPCIEn_IEBDDSOW;
    uint PSI5SPCIEn_IEBRFN;
    uint PSI5SPCIEn_IEBRFEX;
    uint PSI5SPCIEn_IEBRFLK;
    uint PSI5SPCIEn_IEBROV;
    uint PSI5SPCIEn_IEBRWDT;
    uint PSI5SPCIEn_IEBUTFR;
    uint PSI5SPCIEn_IEBUTPT;
    uint PSI5SPCIEn_IEBTRST;
    uint PSI5SPCIEn_IEBPT;
    uint PSI5SPCIEn_IEBCRC;
    uint PSI5SPCIEn_IEBXCRC;
    uint PSI5SPDREn_DRQETFN;
    uint PSI5SPDREn_DRQEWDT;
    uint PSI5SPDREn_DRQERFN;
    uint PSI5SPSTPn_STPRS;
    uint PSI5SPSTEVn_STEX;
    uint PSI5SPSTSn_STSEL;
    uint PSI5SPRESn_RERRF6;
    uint PSI5SPRESn_RERRF5;
    uint PSI5SPRESn_RERRF4;
    uint PSI5SPRESn_RERRF3;
    uint PSI5SPRESn_RERRF2;
    uint PSI5SPRESn_RERRF1;
    uint PSI5SPRESCn_RERRCLF6;
    uint PSI5SPRESCn_RERRCLF5;
    uint PSI5SPRESCn_RERRCLF4;
    uint PSI5SPRESCn_RERRCLF3;
    uint PSI5SPRESCn_RERRCLF2;
    uint PSI5SPRESCn_RERRCLF1;
    uint PSI5SPTCDTn_TSCD;
    uint PSI5SPTCDCn_TSCCLR;
    uint PSI5SPDDTPn_DDSRTYPE;
    uint PSI5SPDDDn_DDSRDT;
    uint PSI5SPDDDn_DDSRADR;
    uint PSI5SPDDSn_DDSRSTS;
    uint PSI5SPDDSPn_DDSRSTP;
    uint PSI5SPCISn_ISTCTFN;
    uint PSI5SPCISn_ISTDDSFN;
    uint PSI5SPCISn_ISTDDSOW;
    uint PSI5SPCISn_ISTRFN;
    uint PSI5SPCISn_ISTRFEX;
    uint PSI5SPCISn_ISTRFLK;
    uint PSI5SPCISn_ISTROV;
    uint PSI5SPCISn_ISTRWDT;
    uint PSI5SPCISn_ISTUTFR;
    uint PSI5SPCISn_ISTUTPT;
    uint PSI5SPCISn_ISTTRST;
    uint PSI5SPCISn_ISTPT;
    uint PSI5SPCISn_ISTCRC;
    uint PSI5SPCISn_ISTXCRC;
    uint PSI5SPCISCn_ISTCCTFN;
    uint PSI5SPCISCn_ISTCDDSFN;
    uint PSI5SPCISCn_ISTCDDSOW;
    uint PSI5SPCISCn_ISTCRFN;
    uint PSI5SPCISCn_ISTCRFEX;
    uint PSI5SPCISCn_ISTCRFLK;
    uint PSI5SPCISCn_ISTCROV;
    uint PSI5SPCISCn_ISTCRWDT;
    uint PSI5SPCISCn_ISTCUTFR;
    uint PSI5SPCISCn_ISTCUTPT;
    uint PSI5SPCISCn_ISTCTRST;
    uint PSI5SPCISCn_ISTCPT;
    uint PSI5SPCISCn_ISTCCRC;
    uint PSI5SPCISCn_ISTCXCRC;

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_PSI5SPRCF1n_CHEN(RegCBstr str) = 0;
    virtual void cb_PSI5SPRCF2n_F1PAYLD(RegCBstr str) = 0;
    virtual void cb_PSI5SPWDEn_WDTEB(RegCBstr str) = 0;
    virtual void cb_PSI5SPWDPn_WDTPRS(RegCBstr str) = 0;
    virtual void cb_PSI5SPWDEVn_WDTEX(RegCBstr str) = 0;
    virtual void cb_PSI5SPTCDn_CHID(RegCBstr str) = 0;
    virtual void cb_PSI5SPCIEn_IEBCRC(RegCBstr str) = 0;
    virtual void cb_PSI5SPDREn_DRQERFN(RegCBstr str) = 0;
    virtual void cb_PSI5SPSTPn_STPRS(RegCBstr str) = 0;
    virtual void cb_PSI5SPSTEVn_STEX(RegCBstr str) = 0;
    virtual void cb_PSI5SPSTSn_STSEL(RegCBstr str) = 0;
    virtual void cb_PSI5SPRESCn_RERRCLF1(RegCBstr str) = 0;
    virtual void cb_PSI5SPTCDCn_TSCCLR(RegCBstr str) = 0;
    virtual void cb_PSI5SPDDTPn_DDSRTYPE(RegCBstr str) = 0;
    virtual void cb_PSI5SPDDDn_DDSRADR(RegCBstr str) = 0;
    virtual void cb_PSI5SPDDSPn_DDSRSTP(RegCBstr str) = 0;
    virtual void cb_PSI5SPCISCn_ISTCCRC(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    unsigned int mChID;
    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Cpsis011_ch_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Cpsis011_ch_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);

    #ifdef CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    void cw_instantiate_reg(scml2::reg<uint> * reg, std::string reg_name, int offset);
    #endif
};
#endif //__PSIS011_CH_REG_DEF_H__
