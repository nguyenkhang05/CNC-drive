// -----------------------------------------------------------------------------
// $Id: pic1a_regif.h,v 1.2 2014/12/31 06:33:45 dungvannguyen Exp $
//
// Copyright(c) 2010-2014 Renesas Electronics Corporation
// Copyright(c) 2010-2014 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.60 2014/10/24 09:42:15 ducduong
//    regif_h.skl 1.30 2014/10/13 03:14:25 sontran
//
// Input file : pic1a_regif.txt
////////////////////////////////////////////////////////////////////////////////
// %MODULE PIC1A
//     #                   name            offset_size
//     %%REG_INSTANCE      reg_def         8
// 
// %REG_CHANNEL reg_def
//     %%TITLE  name            reg_name        wsize    rsize    length  offset  factor_start  factor_end  factor_index  factor_step  access  init  support  callback
//     %%REG    PIC0EN          PIC0EN          8|16|32  8|16|32  8       0x00    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0SST         PIC0SST         8|16|32  8|16|32  8       0x04    -             -           -             -            W       0     TRUE     W
//     %%REG    PIC0SSER0       PIC0SSER0       16|32    8|16|32  16      0x10    -             -           -             -            W|R     0     TRUE     -
//     %%REG    PIC0SSER1       PIC0SSER1       16|32    8|16|32  16      0x14    -             -           -             -            W|R     0     TRUE     -
//     %%REG    PIC0SSER2       PIC0SSER2       16|32    8|16|32  16      0x18    -             -           -             -            W|R     0     TRUE     -
//     %%REG    PIC0SSER3       PIC0SSER3       16|32    8|16|32  16      0x1C    -             -           -             -            W|R     0     TRUE     -
//     %%REG    PIC0INI0        PIC0INI0        8|16|32  8|16|32  8       0x20    0             1           -             0x0C         W       0     TRUE     W
//     %%REG    PIC0INI1        PIC0INI1        8|16|32  8|16|32  8       0x24    0             1           -             0x0C         W       0     TRUE     W
//     %%REG    PIC0INI2        PIC0INI2        8|16|32  8|16|32  8       0x28    0             1           -             0x0C         W       0     TRUE     W
//     %%REG    PIC0WNGMK       PIC0WNGMK       8|16|32  8|16|32  8       0x38    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0WNGS        PIC0WNGS        8|16|32  8|16|32  8       0x40    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0WNGF        PIC0WNGF        8|16|32  8|16|32  8       0x48    0             1           -             0x04         W|R     0     TRUE     -
//     %%REG    PIC0WNGFCLR     PIC0WNGFCLR     8|16|32  8|16|32  8       0x50    0             1           -             0x04         W       0     TRUE     W
//     %%REG    PIC0RTO         PIC0RTO         16|32    8|16|32  16      0x58    0             1           -             0x04         W|R     0     TRUE     -
//     %%REG    PIC0LHSEL       PIC0LHSEL       8|16|32  8|16|32  8       0x60    0             1           -             0x08         W|R     0     TRUE     W
//     %%REG    PIC0TSGOUTCTR   PIC0TSGOUTCTR   8|16|32  8|16|32  8       0x64    0             1           -             0x08         W|R     0     TRUE     W
//     %%REG    PIC0HALLSEL     PIC0HALLSEL     8|16|32  8|16|32  8       0x74    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0TAUDSEL     PIC0TAUDSEL     32       8|16|32  32      0x78    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0HIZCEN      PIC0HIZCEN      8|16|32  8|16|32  8       0x80    0             3           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0SATTSEL40   PIC0SATTSEL40   8|16|32  8|16|32  8       0xA8    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0DGFTSSEL40  PIC0DGFTSSEL40  8|16|32  8|16|32  8       0xB0    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0ENCSEL40    PIC0ENCSEL40    8|16|32  8|16|32  8       0xB8    0             1           -             0x04         W|R     0     TRUE     W
//     %%REG    PIC0REG20       PIC0REG20       32       8|16|32  32      0xC0    0             1           -             0x14         W|R     0     TRUE     W
//     %%REG    PIC0REG21       PIC0REG21       32       8|16|32  32      0xC4    0             1           -             0x14         W|R     0     TRUE     W
//     %%REG    PIC0REG22       PIC0REG22       32       8|16|32  32      0xC8    0             1           -             0x14         W|R     0     TRUE     W
//     %%REG    PIC0REG23       PIC0REG23       32       8|16|32  32      0xCC    0             1           -             0x14         W|R     0     TRUE     W
//     %%REG    PIC0REG24       PIC0REG24       16|32    8|16|32  16      0xD0    0             1           -             0x14         W|R     0     TRUE     W
//     %%REG    PIC0REG30       PIC0REG30       32       8|16|32  32      0xE8    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0REG31       PIC0REG31       32       8|16|32  32      0xEC    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0REG32       PIC0REG32       16|32    8|16|32  16      0xF0    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0REG33       PIC0REG33       8|16|32  8|16|32  8       0xF4    -             -           -             -            W|R     0     TRUE     W
//     %%REG    PIC0REG5        PIC0REG5        16|32    8|16|32  16      0xF8    0             1           -             0x04         W|R     0     TRUE     W
// 
// %REG_NAME PIC0EN
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0EN0     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0SST
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    SYNCTRG     0      0      0     W       TRUE     W
// 
// %REG_NAME PIC0SSER0
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0SSER0n  15     0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0SSER1
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0SSER1n  15     0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0SSER2
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0SSER215     15     15      0     W|R     TRUE     -
//     %%BIT    PIC0SSER214     14     14      0     W|R     TRUE     -
//     %%BIT    PIC0SSER213     13     13      0     W|R     TRUE     -
//     %%BIT    PIC0SSER212     12     12      0     W|R     TRUE     -
//     %%BIT    PIC0SSER211     11     11      0     W|R     TRUE     -
//     %%BIT    PIC0SSER210     10     10      0     W|R     TRUE     -
//     %%BIT    PIC0SSER209     9      9       0     W|R     TRUE     -
//     %%BIT    PIC0SSER208     8      8       0     W|R     TRUE     -
//     %%BIT    PIC0SSER207     7      7       0     W|R     TRUE     -
//     %%BIT    PIC0SSER206     6      6       0     W|R     TRUE     -
//     %%BIT    PIC0SSER205     5      5       0     W|R     TRUE     -
//     %%BIT    PIC0SSER204     4      4       0     W|R     TRUE     -
//     %%BIT    PIC0SSER203     3      3       0     W|R     TRUE     -
//     %%BIT    PIC0SSER202     2      2       0     W|R     TRUE     -
//     %%BIT    PIC0SSER201     1      1       0     W|R     TRUE     -
//     %%BIT    PIC0SSER200     0      0       0     W|R     TRUE     -
// 
// %REG_NAME PIC0SSER3
//     %%TITLE  name         upper  lower  init  access  support  callback
//     %%BIT    PIC0SSER303  3      3      0     W|R     TRUE     -
//     %%BIT    PIC0SSER302  2      2      0     W|R     TRUE     -
//     %%BIT    PIC0SSER301  1      1      0     W|R     TRUE     -
//     %%BIT    PIC0SSER300  0      0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0INI0
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0INI07   7      7      0     W       TRUE     -
//     %%BIT    PIC0INI06   6      6      0     W       TRUE     -
//     %%BIT    PIC0INI05   5      5      0     W       TRUE     -
//     %%BIT    PIC0INI04   4      4      0     W       TRUE     -
//     %%BIT    PIC0INI03   3      3      0     W       TRUE     -
//     %%BIT    PIC0INI02   2      2      0     W       TRUE     -
//     %%BIT    PIC0INI01   1      1      0     W       TRUE     -
//     %%BIT    PIC0INI00   0      0      0     W       TRUE     W
// 
// %REG_NAME PIC0INI1
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0INI102  2      2      0     W       TRUE     -
//     %%BIT    PIC0INI101  1      1      0     W       TRUE     -
//     %%BIT    PIC0INI100  0      0      0     W       TRUE     W
// 
// %REG_NAME PIC0INI2
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0INI22   2      2      0     W       TRUE     -
//     %%BIT    PIC0INI21   1      1      0     W       TRUE     -
//     %%BIT    PIC0INI20   0      0      0     W       TRUE     W
// 
// %REG_NAME PIC0WNGMK
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    WNGMK2      2      2      0     W|R     TRUE     -
//     %%BIT    WNGMK1      1      1      0     W|R     TRUE     -
//     %%BIT    WNGMK0      0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0WNGS
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0WNGS5   5      5      0     W|R     TRUE     -
//     %%BIT    PIC0WNGS4   4      4      0     W|R     TRUE     -
//     %%BIT    PIC0WNGS3   3      3      0     W|R     TRUE     -
//     %%BIT    PIC0WNGS2   2      2      0     W|R     TRUE     -
//     %%BIT    PIC0WNGS1   1      1      0     W|R     TRUE     -
//     %%BIT    PIC0WNGS0   0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0WNGF
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0WNGF2   2      2      0     W|R     TRUE     -
//     %%BIT    PIC0WNGF1   1      1      0     W|R     TRUE     -
//     %%BIT    PIC0WNGF0   0      0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0WNGFCLR
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    WNGFCLR2    2      2      0     W       TRUE     -
//     %%BIT    WNGFCLR1    1      1      0     W       TRUE     -
//     %%BIT    WNGFCLR0    0      0      0     W       TRUE     W
// 
// %REG_NAME PIC0RTO
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    RTOTRO5     11     11     0     W|R     TRUE     -
//     %%BIT    RTOTME5     10     10     0     W|R     TRUE     -
//     %%BIT    RTOTRO4     9      9      0     W|R     TRUE     -
//     %%BIT    RTOTME4     8      8      0     W|R     TRUE     -
//     %%BIT    RTOTRO3     7      7      0     W|R     TRUE     -
//     %%BIT    RTOTME3     6      6      0     W|R     TRUE     -
//     %%BIT    RTOTRO2     5      5      0     W|R     TRUE     -
//     %%BIT    RTOTME2     4      4      0     W|R     TRUE     -
//     %%BIT    RTOTRO1     3      3      0     W|R     TRUE     -
//     %%BIT    RTOTME1     2      2      0     W|R     TRUE     -
//     %%BIT    RTOTRO0     1      1      0     W|R     TRUE     -
//     %%BIT    RTOTME0     0      0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0LHSEL
//     %%TITLE  name        upper  lower  init  access  support  callback
//     %%BIT    PIC0LHSEL6  6      6      0     W|R     TRUE     -
//     %%BIT    PIC0LHSEL5  5      5      0     W|R     TRUE     -
//     %%BIT    PIC0LHSEL4  4      4      0     W|R     TRUE     -
//     %%BIT    PIC0LHSEL3  3      3      0     W|R     TRUE     -
//     %%BIT    PIC0LHSEL2  2      2      0     W|R     TRUE     -
//     %%BIT    PIC0LHSEL1  1      1      0     W|R     TRUE     W
// 
// %REG_NAME PIC0TSGOUTCTR
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0TSGOUTCTR6  6      6      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR5  5      5      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR4  4      4      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR3  3      3      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR2  2      2      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR1  1      1      0     W|R     TRUE     -
//     %%BIT    PIC0TSGOUTCTR0  0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0HALLSEL
//     %%TITLE  name          upper  lower  init  access  support  callback
//     %%BIT    PIC0HALLSEL1  1      1      0     W|R     TRUE     -
//     %%BIT    PIC0HALLSEL0  0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0TAUDSEL
//     %%TITLE  name              upper  lower  init  access  support  callback
//     %%BIT    PIC0TAUDIN143     31     31     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN142     30     30     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN141     29     29     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN140     28     28     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN123     27     27     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN122     26     26     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN121     25     25     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN120     24     24     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN103     23     23     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN102     22     22     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN101     21     21     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN100     20     20     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN83      19     19     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN82      18     18     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN81      17     17     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN80      16     16     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN63      15     15     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN62      14     14     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN61      13     13     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN60      12     12     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN43      11     11     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN42      10     10     0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN41      9      9      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN40      8      8      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN23      7      7      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN22      6      6      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN21      5      5      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN20      4      4      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN03      3      3      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN02      2      2      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN01      1      1      0     W|R     TRUE     -
//     %%BIT    PIC0TAUDIN00      0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0HIZCEN
//     %%TITLE  name          upper  lower  init  access  support  callback
//     %%BIT    PIC0HIZCEN7   7      7      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN6   6      6      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN5   5      5      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN4   4      4      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN3   3      3      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN2   2      2      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN1   1      1      0     W|R     TRUE     -
//     %%BIT    PIC0HIZCEN0   0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0SATTSEL40
//     %%TITLE  name              upper  lower  init  access  support  callback
//     %%BIT    PIC0SATTSEL407    7      7      0     W|R     TRUE     -
//     %%BIT    PIC0SATTSEL403_0  3      0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0DGFTSSEL40
//     %%TITLE  name               upper  lower  init  access  support  callback
//     %%BIT    PIC0DGFTSSEL407    7      7      0     W|R     TRUE     -
//     %%BIT    PIC0DGFTSSEL403_0  3      0      0     W|R     TRUE     -
// 
// %REG_NAME PIC0ENCSEL40
//     %%TITLE  name             upper  lower  init  access  support  callback
//     %%BIT    PIC0ENCSEL407    7      7      0     W|R     TRUE     -
//     %%BIT    PIC0ENCSEL403_0  3      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG20
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG2028     28     28     0     W|R     TRUE     -
//     %%BIT    PIC0REG2025_24  25     24     0     W|R     TRUE     -
//     %%BIT    PIC0REG2020     20     20     0     W|R     TRUE     -
//     %%BIT    PIC0REG2018     18     18     0     W|R     TRUE     -
//     %%BIT    PIC0REG2017     17     17     0     W|R     TRUE     -
//     %%BIT    PIC0REG2016     16     16     0     W|R     TRUE     -
//     %%BIT    PIC0REG2013_12  13     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG2011_10  11     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG2009_08  9      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG2005     5      5      0     W|R     TRUE     -
//     %%BIT    PIC0REG2004     4      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG2003     3      3      0     W|R     TRUE     -
//     %%BIT    PIC0REG2002     2      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG2001     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG2000     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG21
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG2127_26  27     26     0     W|R     TRUE     -
//     %%BIT    PIC0REG2125_24  25     24     0     W|R     TRUE     -
//     %%BIT    PIC0REG2123_22  23     22     0     W|R     TRUE     -
//     %%BIT    PIC0REG2121_20  21     20     0     W|R     TRUE     -
//     %%BIT    PIC0REG2119_18  19     18     0     W|R     TRUE     -
//     %%BIT    PIC0REG2117_16  17     16     0     W|R     TRUE     -
//     %%BIT    PIC0REG2111_10  11     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG2109_08  9      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG2107_06  7      6      0     W|R     TRUE     -
//     %%BIT    PIC0REG2105_04  5      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG2103_02  3      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG2101_00  1      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG22
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG2230     30     30     0     W|R     TRUE     -
//     %%BIT    PIC0REG2229     29     29     0     W|R     TRUE     -
//     %%BIT    PIC0REG2228     28     28     0     W|R     TRUE     -
//     %%BIT    PIC0REG2227_26  27     26     0     W|R     TRUE     -
//     %%BIT    PIC0REG2225_24  25     24     0     W|R     TRUE     -
//     %%BIT    PIC0REG2223_22  23     22     0     W|R     TRUE     -
//     %%BIT    PIC0REG2221_20  21     20     0     W|R     TRUE     -
//     %%BIT    PIC0REG2219_18  19     18     0     W|R     TRUE     -
//     %%BIT    PIC0REG2217_16  17     16     0     W|R     TRUE     -
//     %%BIT    PIC0REG2213     13     13     0     W|R     TRUE     -
//     %%BIT    PIC0REG2212     12     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG2211     11     11     0     W|R     TRUE     -
//     %%BIT    PIC0REG2210     10     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG2209     9      9      0     W|R     TRUE     -
//     %%BIT    PIC0REG2208     8      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG2207     7      7      0     W|R     TRUE     -
//     %%BIT    PIC0REG2206     6      6      0     W|R     TRUE     -
//     %%BIT    PIC0REG2205     5      5      0     W|R     TRUE     -
//     %%BIT    PIC0REG2204     4      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG2203     3      3      0     W|R     TRUE     -
//     %%BIT    PIC0REG2202     2      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG2201     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG2200     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG23
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG2322_20  22     20     0     W|R     TRUE     -
//     %%BIT    PIC0REG2318_16  18     16     0     W|R     TRUE     -
//     %%BIT    PIC0REG2314_12  14     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG2310_08  10     8      0     W|R     TRUE     -
//     %%BIT    PIC0REG2306_04  6      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG2302_00  2      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG24
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG2415     15     15     0     W|R     TRUE     -
//     %%BIT    PIC0REG2414     14     14     0     W|R     TRUE     -
//     %%BIT    PIC0REG2413     13     13     0     W|R     TRUE     -
//     %%BIT    PIC0REG2412     12     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG2411     11     11     0     W|R     TRUE     -
//     %%BIT    PIC0REG2410     10     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG2409     9      9      0     W|R     TRUE     -
//     %%BIT    PIC0REG2408     8      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG2407     7      7      0     W|R     TRUE     -
//     %%BIT    PIC0REG2406     6      6      0     W|R     TRUE     -
//     %%BIT    PIC0REG2405     5      5      0     W|R     TRUE     -
//     %%BIT    PIC0REG2404     4      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG2403     3      3      0     W|R     TRUE     -
//     %%BIT    PIC0REG2402     2      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG2401     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG2400     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG30
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG3024     24     24     0     W|R     TRUE     -
//     %%BIT    PIC0REG3023     23     23     0     W|R     TRUE     -
//     %%BIT    PIC0REG3022     22     22     0     W|R     TRUE     -
//     %%BIT    PIC0REG3021     21     21     0     W|R     TRUE     -
//     %%BIT    PIC0REG3020_19  20     19     0     W|R     TRUE     -
//     %%BIT    PIC0REG3018     18     18     0     W|R     TRUE     -
//     %%BIT    PIC0REG3017_16  17     16     0     W|R     TRUE     -
//     %%BIT    PIC0REG3015_12  15     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG3011_10  11     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG3009_08  9      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG3007_06  7      6      0     W|R     TRUE     -
//     %%BIT    PIC0REG3005_02  5      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG3001     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG3000     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG31
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG3126     26     26     0     W|R     TRUE     -
//     %%BIT    PIC0REG3125     25     25     0     W|R     TRUE     -
//     %%BIT    PIC0REG3124     24     24     0     W|R     TRUE     -
//     %%BIT    PIC0REG3123     23     23     0     W|R     TRUE     -
//     %%BIT    PIC0REG3122_21  22     21     0     W|R     TRUE     -
//     %%BIT    PIC0REG3120     20     20     0     W|R     TRUE     -
//     %%BIT    PIC0REG3119_18  19     18     0     W|R     TRUE     -
//     %%BIT    PIC0REG3117_15  17     15     0     W|R     TRUE     -
//     %%BIT    PIC0REG3114     14     14     0     W|R     TRUE     -
//     %%BIT    PIC0REG3113_12  13     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG3111     11     11     0     W|R     TRUE     -
//     %%BIT    PIC0REG3110_09  10     9      0     W|R     TRUE     -
//     %%BIT    PIC0REG3108_06  8      6      0     W|R     TRUE     -
//     %%BIT    PIC0REG3105_04  5      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG3103     3      3      0     W|R     TRUE     -
//     %%BIT    PIC0REG3102_01  2      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG3100     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG32
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG3213     13     13     0     W|R     TRUE     -
//     %%BIT    PIC0REG3212     12     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG3211_10  11     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG3209     9      9      0     W|R     TRUE     -
//     %%BIT    PIC0REG3208     8      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG3205     5      5      0     W|R     TRUE     -
//     %%BIT    PIC0REG3204     4      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG3203_02  3      2      0     W|R     TRUE     -
//     %%BIT    PIC0REG3201     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG3200     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG33
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG3301     1      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG3300     0      0      0     W|R     TRUE     W
// 
// %REG_NAME PIC0REG5
//     %%TITLE  name            upper  lower  init  access  support  callback
//     %%BIT    PIC0REG514      14     14     0     W|R     TRUE     -
//     %%BIT    PIC0REG513      13     13     0     W|R     TRUE     -
//     %%BIT    PIC0REG512      12     12     0     W|R     TRUE     -
//     %%BIT    PIC0REG510      10     10     0     W|R     TRUE     -
//     %%BIT    PIC0REG508      8      8      0     W|R     TRUE     -
//     %%BIT    PIC0REG507      7      7      0     W|R     TRUE     -
//     %%BIT    PIC0REG506_05   6      5      0     W|R     TRUE     -
//     %%BIT    PIC0REG504      4      4      0     W|R     TRUE     -
//     %%BIT    PIC0REG503      3      3      0     W|R     TRUE     -
//     %%BIT    PIC0REG502_01   2      1      0     W|R     TRUE     -
//     %%BIT    PIC0REG500      0      0      0     W|R     TRUE     W
////////////////////////////////////////////////////////////////////////////////
/// @file pic1a_regif.h
/// @brief Register IF class of model PIC1A
/// $Id: pic1a_regif.h,v 1.2 2014/12/31 06:33:45 dungvannguyen Exp $
/// $Date: 2014/12/31 06:33:45 $
/// $Revison$
/// $Author: dungvannguyen $
////////////////////////////////////////////////////////////////////////////////
#ifndef __PIC1A_REGIF_H__
#define __PIC1A_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#ifdef REGIF_NOT_USE_SYSTEMC
#include <cassert>
#else
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef CWR_SYSTEMC
#include "scml.h"
#endif

/// Register IF class of PIC1A model
class Cpic1a_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index
    enum eRegIndex {
        emNUM_PIC0INI0       = 2,
        emNUM_PIC0INI1       = 2,
        emNUM_PIC0INI2       = 2,
        emNUM_PIC0WNGMK      = 2,
        emNUM_PIC0WNGS       = 2,
        emNUM_PIC0WNGF       = 2,
        emNUM_PIC0WNGFCLR    = 2,
        emNUM_PIC0RTO        = 2,
        emNUM_PIC0LHSEL      = 2,
        emNUM_PIC0TSGOUTCTR  = 2,
        emNUM_PIC0TAUDSEL    = 2,
        emNUM_PIC0HIZCEN     = 4,
        emNUM_PIC0SATTSEL40  = 2,
        emNUM_PIC0DGFTSSEL40 = 2,
        emNUM_PIC0ENCSEL40   = 2,
        emNUM_PIC0REG20      = 2,
        emNUM_PIC0REG21      = 2,
        emNUM_PIC0REG22      = 2,
        emNUM_PIC0REG23      = 2,
        emNUM_PIC0REG24      = 2,
        emNUM_PIC0REG5       = 2
    }; ///< Enumeration for register factor index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel = channel;
            this-> is_wr   = is_wr;
            this-> size    = size;
            this-> pre_data= pre_data;
            this-> data    = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel = _channel;
            this->length  = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block = _block;
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Cpic1a_regif(std::string name, uint buswidth);
    ~Cpic1a_regif();

protected:
    vpcl::re_register *PIC0EN        ;
    vpcl::re_register *PIC0SST       ;
    vpcl::re_register *PIC0SSER0     ;
    vpcl::re_register *PIC0SSER1     ;
    vpcl::re_register *PIC0SSER2     ;
    vpcl::re_register *PIC0SSER3     ;
    vpcl::re_register *PIC0INI0      [2];
    vpcl::re_register *PIC0INI1      [2];
    vpcl::re_register *PIC0INI2      [2];
    vpcl::re_register *PIC0WNGMK     [2];
    vpcl::re_register *PIC0WNGS      [2];
    vpcl::re_register *PIC0WNGF      [2];
    vpcl::re_register *PIC0WNGFCLR   [2];
    vpcl::re_register *PIC0RTO       [2];
    vpcl::re_register *PIC0LHSEL     [2];
    vpcl::re_register *PIC0TSGOUTCTR [2];
    vpcl::re_register *PIC0HALLSEL   ;
    vpcl::re_register *PIC0TAUDSEL   [2];
    vpcl::re_register *PIC0HIZCEN    [4];
    vpcl::re_register *PIC0SATTSEL40 [2];
    vpcl::re_register *PIC0DGFTSSEL40[2];
    vpcl::re_register *PIC0ENCSEL40  [2];
    vpcl::re_register *PIC0REG20     [2];
    vpcl::re_register *PIC0REG21     [2];
    vpcl::re_register *PIC0REG22     [2];
    vpcl::re_register *PIC0REG23     [2];
    vpcl::re_register *PIC0REG24     [2];
    vpcl::re_register *PIC0REG30     ;
    vpcl::re_register *PIC0REG31     ;
    vpcl::re_register *PIC0REG32     ;
    vpcl::re_register *PIC0REG33     ;
    vpcl::re_register *PIC0REG5      [2];

    #ifdef CWR_SYSTEMC
    scml2::memory<uint> cwmem;
    scml2::reg<uint>      *CW_PIC0EN_       ;
    scml2::reg<uint>      *CW_PIC0SST_      ;
    scml2::reg<uint>      *CW_PIC0SSER0_    ;
    scml2::reg<uint>      *CW_PIC0SSER1_    ;
    scml2::reg<uint>      *CW_PIC0SSER2_    ;
    scml2::reg<uint>      *CW_PIC0SSER3_    ;
    scml2::reg<uint>      *CW_PIC0INI0_     [2];
    scml2::reg<uint>      *CW_PIC0INI1_     [2];
    scml2::reg<uint>      *CW_PIC0INI2_     [2];
    scml2::reg<uint>      *CW_PIC0WNGMK_    [2];
    scml2::reg<uint>      *CW_PIC0WNGS_     [2];
    scml2::reg<uint>      *CW_PIC0WNGF_     [2];
    scml2::reg<uint>      *CW_PIC0WNGFCLR_  [2];
    scml2::reg<uint>      *CW_PIC0RTO_      [2];
    scml2::reg<uint>      *CW_PIC0LHSEL_    [2];
    scml2::reg<uint>      *CW_PIC0TSGOUTCTR_[2];
    scml2::reg<uint>      *CW_PIC0HALLSEL_  ;
    scml2::reg<uint>      *CW_PIC0HIZCEN_   [4];
    scml2::reg<uint>      *CW_PIC0SATTSEL40_[2];
    scml2::reg<uint>      *CW_PIC0DGFTSSEL40_[2];
    scml2::reg<uint>      *CW_PIC0ENCSEL40_ [2];
    scml2::reg<uint>      *CW_PIC0REG24_    [2];
    scml2::reg<uint>      *CW_PIC0REG32_    ;
    scml2::reg<uint>      *CW_PIC0REG33_    ;
    scml2::reg<uint>      *CW_PIC0REG5_     [2];
    scml2::bitfield<uint> *CW_PIC0EN        ;
    scml2::bitfield<uint> *CW_PIC0SST       ;
    scml2::bitfield<uint> *CW_PIC0SSER0     ;
    scml2::bitfield<uint> *CW_PIC0SSER1     ;
    scml2::bitfield<uint> *CW_PIC0SSER2     ;
    scml2::bitfield<uint> *CW_PIC0SSER3     ;
    scml2::bitfield<uint> *CW_PIC0INI0      [2];
    scml2::bitfield<uint> *CW_PIC0INI1      [2];
    scml2::bitfield<uint> *CW_PIC0INI2      [2];
    scml2::bitfield<uint> *CW_PIC0WNGMK     [2];
    scml2::bitfield<uint> *CW_PIC0WNGS      [2];
    scml2::bitfield<uint> *CW_PIC0WNGF      [2];
    scml2::bitfield<uint> *CW_PIC0WNGFCLR   [2];
    scml2::bitfield<uint> *CW_PIC0RTO       [2];
    scml2::bitfield<uint> *CW_PIC0LHSEL     [2];
    scml2::bitfield<uint> *CW_PIC0TSGOUTCTR [2];
    scml2::bitfield<uint> *CW_PIC0HALLSEL   ;
    scml2::reg<uint>      *CW_PIC0TAUDSEL   [2];
    scml2::bitfield<uint> *CW_PIC0HIZCEN    [4];
    scml2::bitfield<uint> *CW_PIC0SATTSEL40 [2];
    scml2::bitfield<uint> *CW_PIC0DGFTSSEL40[2];
    scml2::bitfield<uint> *CW_PIC0ENCSEL40  [2];
    scml2::reg<uint>      *CW_PIC0REG20     [2];
    scml2::reg<uint>      *CW_PIC0REG21     [2];
    scml2::reg<uint>      *CW_PIC0REG22     [2];
    scml2::reg<uint>      *CW_PIC0REG23     [2];
    scml2::bitfield<uint> *CW_PIC0REG24     [2];
    scml2::reg<uint>      *CW_PIC0REG30     ;
    scml2::reg<uint>      *CW_PIC0REG31     ;
    scml2::bitfield<uint> *CW_PIC0REG32     ;
    scml2::bitfield<uint> *CW_PIC0REG33     ;
    scml2::bitfield<uint> *CW_PIC0REG5      [2];
    #endif

    uint PIC0EN_PIC0EN0   ;
    uint PIC0SST_SYNCTRG  ;
    uint PIC0SSER0_PIC0SSER0n;
    uint PIC0SSER1_PIC0SSER1n;
    uint PIC0SSER2_PIC0SSER215;
    uint PIC0SSER2_PIC0SSER214;
    uint PIC0SSER2_PIC0SSER213;
    uint PIC0SSER2_PIC0SSER212;
    uint PIC0SSER2_PIC0SSER211;
    uint PIC0SSER2_PIC0SSER210;
    uint PIC0SSER2_PIC0SSER209;
    uint PIC0SSER2_PIC0SSER208;
    uint PIC0SSER2_PIC0SSER207;
    uint PIC0SSER2_PIC0SSER206;
    uint PIC0SSER2_PIC0SSER205;
    uint PIC0SSER2_PIC0SSER204;
    uint PIC0SSER2_PIC0SSER203;
    uint PIC0SSER2_PIC0SSER202;
    uint PIC0SSER2_PIC0SSER201;
    uint PIC0SSER2_PIC0SSER200;
    uint PIC0SSER3_PIC0SSER303;
    uint PIC0SSER3_PIC0SSER302;
    uint PIC0SSER3_PIC0SSER301;
    uint PIC0SSER3_PIC0SSER300;
    uint PIC0INI0_PIC0INI07[2];
    uint PIC0INI0_PIC0INI06[2];
    uint PIC0INI0_PIC0INI05[2];
    uint PIC0INI0_PIC0INI04[2];
    uint PIC0INI0_PIC0INI03[2];
    uint PIC0INI0_PIC0INI02[2];
    uint PIC0INI0_PIC0INI01[2];
    uint PIC0INI0_PIC0INI00[2];
    uint PIC0INI1_PIC0INI102[2];
    uint PIC0INI1_PIC0INI101[2];
    uint PIC0INI1_PIC0INI100[2];
    uint PIC0INI2_PIC0INI22[2];
    uint PIC0INI2_PIC0INI21[2];
    uint PIC0INI2_PIC0INI20[2];
    uint PIC0WNGMK_WNGMK2 [2];
    uint PIC0WNGMK_WNGMK1 [2];
    uint PIC0WNGMK_WNGMK0 [2];
    uint PIC0WNGS_PIC0WNGS5[2];
    uint PIC0WNGS_PIC0WNGS4[2];
    uint PIC0WNGS_PIC0WNGS3[2];
    uint PIC0WNGS_PIC0WNGS2[2];
    uint PIC0WNGS_PIC0WNGS1[2];
    uint PIC0WNGS_PIC0WNGS0[2];
    uint PIC0WNGF_PIC0WNGF2[2];
    uint PIC0WNGF_PIC0WNGF1[2];
    uint PIC0WNGF_PIC0WNGF0[2];
    uint PIC0WNGFCLR_WNGFCLR2[2];
    uint PIC0WNGFCLR_WNGFCLR1[2];
    uint PIC0WNGFCLR_WNGFCLR0[2];
    uint PIC0RTO_RTOTRO5  [2];
    uint PIC0RTO_RTOTME5  [2];
    uint PIC0RTO_RTOTRO4  [2];
    uint PIC0RTO_RTOTME4  [2];
    uint PIC0RTO_RTOTRO3  [2];
    uint PIC0RTO_RTOTME3  [2];
    uint PIC0RTO_RTOTRO2  [2];
    uint PIC0RTO_RTOTME2  [2];
    uint PIC0RTO_RTOTRO1  [2];
    uint PIC0RTO_RTOTME1  [2];
    uint PIC0RTO_RTOTRO0  [2];
    uint PIC0RTO_RTOTME0  [2];
    uint PIC0LHSEL_PIC0LHSEL6[2];
    uint PIC0LHSEL_PIC0LHSEL5[2];
    uint PIC0LHSEL_PIC0LHSEL4[2];
    uint PIC0LHSEL_PIC0LHSEL3[2];
    uint PIC0LHSEL_PIC0LHSEL2[2];
    uint PIC0LHSEL_PIC0LHSEL1[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR6[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR5[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR4[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR3[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR2[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR1[2];
    uint PIC0TSGOUTCTR_PIC0TSGOUTCTR0[2];
    uint PIC0HALLSEL_PIC0HALLSEL1;
    uint PIC0HALLSEL_PIC0HALLSEL0;
    uint PIC0TAUDSEL_PIC0TAUDIN143[2];
    uint PIC0TAUDSEL_PIC0TAUDIN142[2];
    uint PIC0TAUDSEL_PIC0TAUDIN141[2];
    uint PIC0TAUDSEL_PIC0TAUDIN140[2];
    uint PIC0TAUDSEL_PIC0TAUDIN123[2];
    uint PIC0TAUDSEL_PIC0TAUDIN122[2];
    uint PIC0TAUDSEL_PIC0TAUDIN121[2];
    uint PIC0TAUDSEL_PIC0TAUDIN120[2];
    uint PIC0TAUDSEL_PIC0TAUDIN103[2];
    uint PIC0TAUDSEL_PIC0TAUDIN102[2];
    uint PIC0TAUDSEL_PIC0TAUDIN101[2];
    uint PIC0TAUDSEL_PIC0TAUDIN100[2];
    uint PIC0TAUDSEL_PIC0TAUDIN83[2];
    uint PIC0TAUDSEL_PIC0TAUDIN82[2];
    uint PIC0TAUDSEL_PIC0TAUDIN81[2];
    uint PIC0TAUDSEL_PIC0TAUDIN80[2];
    uint PIC0TAUDSEL_PIC0TAUDIN63[2];
    uint PIC0TAUDSEL_PIC0TAUDIN62[2];
    uint PIC0TAUDSEL_PIC0TAUDIN61[2];
    uint PIC0TAUDSEL_PIC0TAUDIN60[2];
    uint PIC0TAUDSEL_PIC0TAUDIN43[2];
    uint PIC0TAUDSEL_PIC0TAUDIN42[2];
    uint PIC0TAUDSEL_PIC0TAUDIN41[2];
    uint PIC0TAUDSEL_PIC0TAUDIN40[2];
    uint PIC0TAUDSEL_PIC0TAUDIN23[2];
    uint PIC0TAUDSEL_PIC0TAUDIN22[2];
    uint PIC0TAUDSEL_PIC0TAUDIN21[2];
    uint PIC0TAUDSEL_PIC0TAUDIN20[2];
    uint PIC0TAUDSEL_PIC0TAUDIN03[2];
    uint PIC0TAUDSEL_PIC0TAUDIN02[2];
    uint PIC0TAUDSEL_PIC0TAUDIN01[2];
    uint PIC0TAUDSEL_PIC0TAUDIN00[2];
    uint PIC0HIZCEN_PIC0HIZCEN7[4];
    uint PIC0HIZCEN_PIC0HIZCEN6[4];
    uint PIC0HIZCEN_PIC0HIZCEN5[4];
    uint PIC0HIZCEN_PIC0HIZCEN4[4];
    uint PIC0HIZCEN_PIC0HIZCEN3[4];
    uint PIC0HIZCEN_PIC0HIZCEN2[4];
    uint PIC0HIZCEN_PIC0HIZCEN1[4];
    uint PIC0HIZCEN_PIC0HIZCEN0[4];
    uint PIC0SATTSEL40_PIC0SATTSEL407[2];
    uint PIC0SATTSEL40_PIC0SATTSEL403_0[2];
    uint PIC0DGFTSSEL40_PIC0DGFTSSEL407[2];
    uint PIC0DGFTSSEL40_PIC0DGFTSSEL403_0[2];
    uint PIC0ENCSEL40_PIC0ENCSEL407[2];
    uint PIC0ENCSEL40_PIC0ENCSEL403_0[2];
    uint PIC0REG20_PIC0REG2028[2];
    uint PIC0REG20_PIC0REG2025_24[2];
    uint PIC0REG20_PIC0REG2020[2];
    uint PIC0REG20_PIC0REG2018[2];
    uint PIC0REG20_PIC0REG2017[2];
    uint PIC0REG20_PIC0REG2016[2];
    uint PIC0REG20_PIC0REG2013_12[2];
    uint PIC0REG20_PIC0REG2011_10[2];
    uint PIC0REG20_PIC0REG2009_08[2];
    uint PIC0REG20_PIC0REG2005[2];
    uint PIC0REG20_PIC0REG2004[2];
    uint PIC0REG20_PIC0REG2003[2];
    uint PIC0REG20_PIC0REG2002[2];
    uint PIC0REG20_PIC0REG2001[2];
    uint PIC0REG20_PIC0REG2000[2];
    uint PIC0REG21_PIC0REG2127_26[2];
    uint PIC0REG21_PIC0REG2125_24[2];
    uint PIC0REG21_PIC0REG2123_22[2];
    uint PIC0REG21_PIC0REG2121_20[2];
    uint PIC0REG21_PIC0REG2119_18[2];
    uint PIC0REG21_PIC0REG2117_16[2];
    uint PIC0REG21_PIC0REG2111_10[2];
    uint PIC0REG21_PIC0REG2109_08[2];
    uint PIC0REG21_PIC0REG2107_06[2];
    uint PIC0REG21_PIC0REG2105_04[2];
    uint PIC0REG21_PIC0REG2103_02[2];
    uint PIC0REG21_PIC0REG2101_00[2];
    uint PIC0REG22_PIC0REG2230[2];
    uint PIC0REG22_PIC0REG2229[2];
    uint PIC0REG22_PIC0REG2228[2];
    uint PIC0REG22_PIC0REG2227_26[2];
    uint PIC0REG22_PIC0REG2225_24[2];
    uint PIC0REG22_PIC0REG2223_22[2];
    uint PIC0REG22_PIC0REG2221_20[2];
    uint PIC0REG22_PIC0REG2219_18[2];
    uint PIC0REG22_PIC0REG2217_16[2];
    uint PIC0REG22_PIC0REG2213[2];
    uint PIC0REG22_PIC0REG2212[2];
    uint PIC0REG22_PIC0REG2211[2];
    uint PIC0REG22_PIC0REG2210[2];
    uint PIC0REG22_PIC0REG2209[2];
    uint PIC0REG22_PIC0REG2208[2];
    uint PIC0REG22_PIC0REG2207[2];
    uint PIC0REG22_PIC0REG2206[2];
    uint PIC0REG22_PIC0REG2205[2];
    uint PIC0REG22_PIC0REG2204[2];
    uint PIC0REG22_PIC0REG2203[2];
    uint PIC0REG22_PIC0REG2202[2];
    uint PIC0REG22_PIC0REG2201[2];
    uint PIC0REG22_PIC0REG2200[2];
    uint PIC0REG23_PIC0REG2322_20[2];
    uint PIC0REG23_PIC0REG2318_16[2];
    uint PIC0REG23_PIC0REG2314_12[2];
    uint PIC0REG23_PIC0REG2310_08[2];
    uint PIC0REG23_PIC0REG2306_04[2];
    uint PIC0REG23_PIC0REG2302_00[2];
    uint PIC0REG24_PIC0REG2415[2];
    uint PIC0REG24_PIC0REG2414[2];
    uint PIC0REG24_PIC0REG2413[2];
    uint PIC0REG24_PIC0REG2412[2];
    uint PIC0REG24_PIC0REG2411[2];
    uint PIC0REG24_PIC0REG2410[2];
    uint PIC0REG24_PIC0REG2409[2];
    uint PIC0REG24_PIC0REG2408[2];
    uint PIC0REG24_PIC0REG2407[2];
    uint PIC0REG24_PIC0REG2406[2];
    uint PIC0REG24_PIC0REG2405[2];
    uint PIC0REG24_PIC0REG2404[2];
    uint PIC0REG24_PIC0REG2403[2];
    uint PIC0REG24_PIC0REG2402[2];
    uint PIC0REG24_PIC0REG2401[2];
    uint PIC0REG24_PIC0REG2400[2];
    uint PIC0REG30_PIC0REG3024;
    uint PIC0REG30_PIC0REG3023;
    uint PIC0REG30_PIC0REG3022;
    uint PIC0REG30_PIC0REG3021;
    uint PIC0REG30_PIC0REG3020_19;
    uint PIC0REG30_PIC0REG3018;
    uint PIC0REG30_PIC0REG3017_16;
    uint PIC0REG30_PIC0REG3015_12;
    uint PIC0REG30_PIC0REG3011_10;
    uint PIC0REG30_PIC0REG3009_08;
    uint PIC0REG30_PIC0REG3007_06;
    uint PIC0REG30_PIC0REG3005_02;
    uint PIC0REG30_PIC0REG3001;
    uint PIC0REG30_PIC0REG3000;
    uint PIC0REG31_PIC0REG3126;
    uint PIC0REG31_PIC0REG3125;
    uint PIC0REG31_PIC0REG3124;
    uint PIC0REG31_PIC0REG3123;
    uint PIC0REG31_PIC0REG3122_21;
    uint PIC0REG31_PIC0REG3120;
    uint PIC0REG31_PIC0REG3119_18;
    uint PIC0REG31_PIC0REG3117_15;
    uint PIC0REG31_PIC0REG3114;
    uint PIC0REG31_PIC0REG3113_12;
    uint PIC0REG31_PIC0REG3111;
    uint PIC0REG31_PIC0REG3110_09;
    uint PIC0REG31_PIC0REG3108_06;
    uint PIC0REG31_PIC0REG3105_04;
    uint PIC0REG31_PIC0REG3103;
    uint PIC0REG31_PIC0REG3102_01;
    uint PIC0REG31_PIC0REG3100;
    uint PIC0REG32_PIC0REG3213;
    uint PIC0REG32_PIC0REG3212;
    uint PIC0REG32_PIC0REG3211_10;
    uint PIC0REG32_PIC0REG3209;
    uint PIC0REG32_PIC0REG3208;
    uint PIC0REG32_PIC0REG3205;
    uint PIC0REG32_PIC0REG3204;
    uint PIC0REG32_PIC0REG3203_02;
    uint PIC0REG32_PIC0REG3201;
    uint PIC0REG32_PIC0REG3200;
    uint PIC0REG33_PIC0REG3301;
    uint PIC0REG33_PIC0REG3300;
    uint PIC0REG5_PIC0REG514[2];
    uint PIC0REG5_PIC0REG513[2];
    uint PIC0REG5_PIC0REG512[2];
    uint PIC0REG5_PIC0REG510[2];
    uint PIC0REG5_PIC0REG508[2];
    uint PIC0REG5_PIC0REG507[2];
    uint PIC0REG5_PIC0REG506_05[2];
    uint PIC0REG5_PIC0REG504[2];
    uint PIC0REG5_PIC0REG503[2];
    uint PIC0REG5_PIC0REG502_01[2];
    uint PIC0REG5_PIC0REG500[2];

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_PIC0EN_PIC0EN0(RegCBstr str) = 0;
    virtual void cb_PIC0SST_SYNCTRG(RegCBstr str) = 0;
    virtual void cb_PIC0INI0_PIC0INI00(RegCBstr str) = 0;
    virtual void cb_PIC0INI1_PIC0INI100(RegCBstr str) = 0;
    virtual void cb_PIC0INI2_PIC0INI20(RegCBstr str) = 0;
    virtual void cb_PIC0WNGMK_WNGMK0(RegCBstr str) = 0;
    virtual void cb_PIC0WNGS_PIC0WNGS0(RegCBstr str) = 0;
    virtual void cb_PIC0WNGFCLR_WNGFCLR0(RegCBstr str) = 0;
    virtual void cb_PIC0LHSEL_PIC0LHSEL1(RegCBstr str) = 0;
    virtual void cb_PIC0TSGOUTCTR_PIC0TSGOUTCTR0(RegCBstr str) = 0;
    virtual void cb_PIC0HALLSEL_PIC0HALLSEL0(RegCBstr str) = 0;
    virtual void cb_PIC0TAUDSEL_PIC0TAUDIN00(RegCBstr str) = 0;
    virtual void cb_PIC0HIZCEN_PIC0HIZCEN0(RegCBstr str) = 0;
    virtual void cb_PIC0ENCSEL40_PIC0ENCSEL403_0(RegCBstr str) = 0;
    virtual void cb_PIC0REG20_PIC0REG2000(RegCBstr str) = 0;
    virtual void cb_PIC0REG21_PIC0REG2101_00(RegCBstr str) = 0;
    virtual void cb_PIC0REG22_PIC0REG2200(RegCBstr str) = 0;
    virtual void cb_PIC0REG23_PIC0REG2302_00(RegCBstr str) = 0;
    virtual void cb_PIC0REG24_PIC0REG2400(RegCBstr str) = 0;
    virtual void cb_PIC0REG30_PIC0REG3000(RegCBstr str) = 0;
    virtual void cb_PIC0REG31_PIC0REG3100(RegCBstr str) = 0;
    virtual void cb_PIC0REG32_PIC0REG3200(RegCBstr str) = 0;
    virtual void cb_PIC0REG33_PIC0REG3300(RegCBstr str) = 0;
    virtual void cb_PIC0REG5_PIC0REG500(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Cpic1a_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Cpic1a_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);

    #ifdef CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    void cw_instantiate_reg(scml2::reg<uint> * reg, std::string reg_name, int offset);
    #endif
};
#endif //__PIC1A_REG_DEF_H__
