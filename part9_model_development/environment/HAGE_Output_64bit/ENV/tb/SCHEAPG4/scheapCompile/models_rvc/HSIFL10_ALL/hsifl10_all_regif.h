// -----------------------------------------------------------------------------
// $Id: hsifl10_all_regif.h,v 1.5 2020/03/16 02:13:01 quynhnhunguyen Exp $
//
// Copyright(c) 2017-2020 Renesas Electronics Corporation
// Copyright(c) 2017-2020 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.60 2014/10/24 09:42:15 ducduong
//    regif_h.skl 1.30 2014/10/13 03:14:25 sontran
//
// Input file : /home/truongvv2/RHSIF/GenSrc/hsifl10_all_input/hsifl10_all_regif.txt
////////////////////////////////////////////////////////////////////////////////
// %MODULE HSIFL10_ALL
// 
// %%REG_INSTANCE  reg_def 8
// 
// %REG_CHANNEL reg_def
//     %%TITLE     name             reg_name        wsize     rsize     length      offset      access      init           factor_start    factor_end      factor_step     support     callback
//     %%REG       RHSIFMDCR        RHSIFMDCR       32          8|16|32   32          0x0         R|W         0x00010100     -               -               -               TRUE        -
//     %%REG       RHSIFSMCR        RHSIFSMCR       32        8|16|32   32          0x4         R|W         0x00000000     -               -               -               TRUE        -
//     %%REG       RHSIFPCR         RHSIFPCR        32        8|16|32   32          0x8         R|W         0x00000001     -               -               -               TRUE        -
//     %%REG       RHSIFSPCR        RHSIFSPCR       32        8|16|32   32          0xC         R|W         0x00000000     -               -               -               TRUE        -
//     %%REG       RHSIFTMDCR       RHSIFTMDCR      32        8|16|32   32          0x10        R|W         0x00000000     -               -               -               TRUE        -    
//     %%REG       RHSIFL1SR        RHSIFL1SR       -         8|16|32   32          0x18        R           0x00010101     -               -               -               TRUE        -
//     %%REG       RHSIFLTXFRMRL1   RHSIFLTXFRMRL1  -         8|16|32   32          0x30        R           0x00000000     -               -               -               TRUE        -
//     %%REG       RHSIFLRXFRMRL1   RHSIFLRXFRMRL1  -         8|16|32   32          0x34        R           0x00000000     -               -               -               TRUE        -
//     %%REG       RHSIFLTXFRMRL2   RHSIFLTXFRMRL2  -         8|16|32   32          0x38        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFLRXFRMRL2   RHSIFLRXFRMRL2  -         8|16|32   32          0x3C        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXRXCR      RHSIFTXRXCR     32        8|16|32   32          0x50        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFICCR        RHSIFICCR       32        8|16|32   32          0x60        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFCCR         RHSIFCCR        32        8|16|32   32          0x70        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXCMPST     RHSIFTXCMPST    -         8|16|32   32          0x80        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXCMPSC     RHSIFTXCMPSC    32        8|16|32   32          0x84        R|W1:0      0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXCMPIE     RHSIFTXCMPIE    32        8|16|32   32          0x88        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXERRST     RHSIFTXERRST    -         8|16|32   32          0x90        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXERRSC     RHSIFTXERRSC    32        8|16|32   32          0x94        R|W1:0      0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFTXERRIE     RHSIFTXERRIE    32        8|16|32   32          0x98        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXCMPST     RHSIFRXCMPST    -         8|16|32   32          0xA0        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXCMPSC     RHSIFRXCMPSC    32        8|16|32   32          0xA4        R|W1:0      0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXCMPIE     RHSIFRXCMPIE    32        8|16|32   32          0xA8        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXERRST     RHSIFRXERRST    -         8|16|32   32          0xB0        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXERRSC     RHSIFRXERRSC    32        8|16|32   32          0xB4        R|W1:0      0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXERRIE     RHSIFRXERRIE    32        8|16|32   32          0xB8        R|W         0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXICST      RHSIFRXICST     -         8|16|32   32          0xC0        R           0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXICSC      RHSIFRXICSC     32        8|16|32   32          0xC4        R|W1:0      0x00000000     -               -               -               TRUE        -
//        %%REG       RHSIFRXICIE      RHSIFRXICIE     32        8|16|32   32          0xC8        R|W         0x00000000     -               -               -               TRUE        -
// 
// 
// %REG_NAME RHSIFMDCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       CTSEN       16      16      1       R|W     TRUE        W
//        %%BIT       CTSV          8       8       1       R|W     TRUE        -
//     %%BIT       CLKSEL      1       1       0       R|W     TRUE        -
//     %%BIT       MST         0       0       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFPCR
//      %%TITLE     name        upper   lower   init    access  support     callback
//      %%BIT       PLLSTBY     0       0       1       R|W     TRUE        -
//     
// %REG_NAME RHSIFSMCR
//      %%TITLE     name        upper   lower   init    access  support     callback
//      %%BIT       SLP         0       0       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFSPCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       FMBR        25      24      0       R|W     TRUE        W
//        %%BIT       TXSP        8       8       0       R|W     TRUE        -
//     %%BIT       RXSP        0       0       0       R|W     TRUE        -
//     
// %REG_NAME RHSIFTMDCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       CKTM        9       9       0       R|W     TRUE        -
//        %%BIT       CKTMSEL     8       8       0       R|W     TRUE        -
//     %%BIT       TXLPBK      1       1       0       R|W     TRUE        -
//     %%BIT       RXLPBK      0       0       0       R|W     TRUE        W
// 
// %REG_NAME RHSIFL1SR
//      %%TITLE     name        upper   lower   init    access  support     callback
//      %%BIT       RCTS        16      16      1       R       TRUE        -
//      %%BIT       TFFUL       9       9       0       R       TRUE        -
//      %%BIT       TFEMP       8       8       1       R       TRUE        -
//      %%BIT       RFFUL       1       1       0       R       TRUE        -
//      %%BIT       RFEMP       0       0       1       R       TRUE        -
// 
// %REG_NAME RHSIFLTXFRMRL1
//     %%TITLE     name        upper   lower   init    access  support     callback
//     %%BIT       TL1E        16      16      0       R       TRUE        -
//     %%BIT       TL1P        15      8       0       R       TRUE        -
//     %%BIT       TL1H        7       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFLRXFRMRL1
//      %%TITLE     name        upper   lower   init    access  support     callback
//      %%BIT       RL1E        16      16      0       R       TRUE        -
//      %%BIT       RL1P        15      8       0       R       TRUE        -
//      %%BIT       RL1H        7       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFLTXFRMRL2
//     %%TITLE     name        upper   lower   init    access  support     callback
//     %%BIT       T2L2H       31      16      0       R       TRUE        -
//     %%BIT       T2L1H       7       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFLRXFRMRL2
//     %%TITLE     name        upper   lower   init    access  support     callback
//     %%BIT       R2L2H       31      16      0       R       TRUE        -
//     %%BIT       R2L1H       7       0       0       R       TRUE        -
//     
// %REG_NAME RHSIFTXRXCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TXEN        16      16      0       R|W     TRUE        -
//     %%BIT       RXEN        0       0       0       R|W     TRUE        -
//     
// %REG_NAME RHSIFICCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       ITRG        16      16      0       R|W     TRUE        W
//     %%BIT       PLD         7       0       0       R|W     TRUE        -
//     
// %REG_NAME RHSIFCCR
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       CTRG        16      16      0       R|W     TRUE        W
//     %%BIT       CTS         8       8       0       R|W     TRUE        -
//     %%BIT       PLD         7       0       0       R|W     TRUE        -
//     
// %REG_NAME RHSIFTXCMPST
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TCL2        16      16      0       R         TRUE        -
//        %%BIT       TCCT        8       8       0       R         TRUE        -
//     %%BIT       TCIC        0       0       0       R         TRUE        -
//     
// %REG_NAME RHSIFTXCMPSC
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TCCL2       16      16      0       R|W1:0  TRUE        W
//        %%BIT       TCCCT       8       8       0       R|W1:0  TRUE        -
//     %%BIT       TCCIC       0       0       0       R|W1:0  TRUE        -
// 
// %REG_NAME RHSIFTXCMPIE
//     %%TITLE     name        upper   lower   init    access  support     callback
//     %%BIT       TCEL2       16      16      0       R|W     TRUE        -
//     %%BIT       TCECT       8       8       0       R|W     TRUE        -
//     %%BIT       TCEIC       0       0       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFTXERRST
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TERSZ       31      31      0       R       TRUE        -
//        %%BIT       TERSZI5     20      20      0       R       TRUE        -
//        %%BIT       TERSZI4     19      19      0       R       TRUE        -
//        %%BIT       TERCTF      15      15      0       R       TRUE        -
//        %%BIT       TERCTE      14      14      0       R       TRUE        -
//        %%BIT       TERCTD      13      13      0       R       TRUE        -
//        %%BIT       TERCTC      12      12      0       R       TRUE        -
//        %%BIT       TERCTB      11      11      0       R       TRUE        -
//        %%BIT       TERCTA      10      10      0       R       TRUE        -
//        %%BIT       TERCT9      9       9       0       R       TRUE        -
//        %%BIT       TERCT8      8       8       0       R       TRUE        -
//        %%BIT       TERCT2      2       2       0       R       TRUE        -
//     %%BIT       TERCT1      1       1       0       R       TRUE        -
// 
// %REG_NAME RHSIFTXERRSC
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TERCSZ      31      31      0       R|W1:0  TRUE        W
//        %%BIT       TERCSZI5    20      20      0       R|W1:0  TRUE        -
//        %%BIT       TERCSZI4    19      19      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTF     15      15      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTE     14      14      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTD     13      13      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTC     12      12      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTB     11      11      0       R|W1:0  TRUE        -
//        %%BIT       TERCCTA     10      10      0       R|W1:0  TRUE        -
//        %%BIT       TERCCT9     9       9       0       R|W1:0  TRUE        -
//        %%BIT       TERCCT8     8       8       0       R|W1:0  TRUE        -
//        %%BIT       TERCCT2     2       2       0       R|W1:0  TRUE        -
//     %%BIT       TERCCT1     1       1       0       R|W1:0  TRUE        -
// 
// %REG_NAME RHSIFTXERRIE
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       TERESZ      31      31      0       R|W     TRUE        -
//        %%BIT       TERESZI5    20      20      0       R|W     TRUE        -
//        %%BIT       TERESZI4    19      19      0       R|W     TRUE        -
//        %%BIT       TERECTF     15      15      0       R|W     TRUE        -
//        %%BIT       TERECTE     14      14      0       R|W     TRUE        -
//        %%BIT       TERECTD     13      13      0       R|W     TRUE        -
//        %%BIT       TERECTC     12      12      0       R|W     TRUE        -
//        %%BIT       TERECTB     11      11      0       R|W     TRUE        -
//        %%BIT       TERECTA     10      10      0       R|W     TRUE        -
//        %%BIT       TERECT9     9       9       0       R|W     TRUE        -
//        %%BIT       TERECT8     8       8       0       R|W     TRUE        -
//        %%BIT       TERECT2     2       2       0       R|W     TRUE        -
//     %%BIT       TERECT1     1       1       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFRXCMPST
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RCL2        16      16      0       R       TRUE        -
//        %%BIT       RCCT        8       8       0       R       TRUE        -
//        %%BIT       RCIC        0       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFRXCMPSC
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RCCL2       16      16      0       R|W1:0  TRUE        W
//        %%BIT       RCCCT       8       8       0       R|W1:0  TRUE        -
//        %%BIT       RCCIC       0       0       0       R|W1:0  TRUE        -
// 
// %REG_NAME RHSIFRXCMPIE
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RCEL2       16      16      0       R|W     TRUE        -
//        %%BIT       RCECT       8       8       0       R|W     TRUE        -
//        %%BIT       RCEIC       0       0       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFRXERRST
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RERSZ       31      31      0       R       TRUE        -
//        %%BIT       RERSZI5     20      20      0       R       TRUE        -
//        %%BIT       RERSZI4     19      19      0       R       TRUE        -
//        %%BIT       RERCTF      15      15      0       R       TRUE        -
//        %%BIT       RERCTE      14      14      0       R       TRUE        -
//        %%BIT       RERCTD      13      13      0       R       TRUE        -
//        %%BIT       RERCTC      12      12      0       R       TRUE        -
//        %%BIT       RERCTB      11      11      0       R       TRUE        -
//        %%BIT       RERCTA      10      10      0       R       TRUE        -
//        %%BIT       RERCT9      9       9       0       R       TRUE        -
//        %%BIT       RERCT8      8       8       0       R       TRUE        -
//        %%BIT       RERCT2      2       2       0       R       TRUE        -
//     %%BIT       RERCT1      1       1       0       R       TRUE        -
//        %%BIT       RERIPV      0       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFRXERRSC
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RERCSZ      31      31      0       R|W1:0  TRUE        W
//        %%BIT       RERCSZI5    20      20      0       R|W1:0  TRUE        -
//        %%BIT       RERCSZI4    19      19      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTF     15      15      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTE     14      14      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTD     13      13      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTC     12      12      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTB     11      11      0       R|W1:0  TRUE        -
//        %%BIT       RERCCTA     10      10      0       R|W1:0  TRUE        -
//        %%BIT       RERCCT9     9       9       0       R|W1:0  TRUE        -
//        %%BIT       RERCCT8     8       8       0       R|W1:0  TRUE        -
//        %%BIT       RERCCT2     2       2       0       R|W1:0  TRUE        -
//     %%BIT       RERCCT1     1       1       0       R|W1:0  TRUE        -
//        %%BIT       RERCIPV     0       0       0       R|W1:0  TRUE        -
// 
// %REG_NAME RHSIFRXERRIE
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RERESZ      31      31      0       R|W     TRUE        -
//        %%BIT       RERESZI5    20      20      0       R|W     TRUE        -
//        %%BIT       RERESZI4    19      19      0       R|W     TRUE        -
//        %%BIT       RERECTF     15      15      0       R|W     TRUE        -
//        %%BIT       RERECTE     14      14      0       R|W     TRUE        -
//        %%BIT       RERECTD     13      13      0       R|W     TRUE        -
//        %%BIT       RERECTC     12      12      0       R|W     TRUE        -
//        %%BIT       RERECTB     11      11      0       R|W     TRUE        -
//        %%BIT       RERECTA     10      10      0       R|W     TRUE        -
//        %%BIT       RERECT9     9       9       0       R|W     TRUE        -
//        %%BIT       RERECT8     8       8       0       R|W     TRUE        -
//        %%BIT       RERECT2     2       2       0       R|W     TRUE        -
//     %%BIT       RERECT1     1       1       0       R|W     TRUE        -
//        %%BIT       REREIPV     0       0       0       R|W     TRUE        -
// 
// %REG_NAME RHSIFRXICST
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RIPA        16      16      0       R       TRUE        -
//        %%BIT       RITOL       11      11      0       R       TRUE        -
//        %%BIT       RITOF       10      10      0       R       TRUE        -
//        %%BIT       RITON       9       9       0       R       TRUE        -
//        %%BIT       RIDT        8       8       0       R       TRUE        -
//        %%BIT       RIET        7       7       0       R       TRUE        -
//        %%BIT       RIFT        6       6       0       R       TRUE        -
//        %%BIT       RIST        5       5       0       R       TRUE        -
//        %%BIT       RIFR        4       4       0       R       TRUE        -
//        %%BIT       RISR        3       3       0       R       TRUE        -
//        %%BIT       RIPSTP      2       2       0       R       TRUE        -
//        %%BIT       RIPSRT      1       1       0       R       TRUE        -
//     %%BIT       RIPG        0       0       0       R       TRUE        -
// 
// %REG_NAME RHSIFRXICSC
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RICPA       16      16      0       R|W1:0  TRUE        W
//        %%BIT       RICTOL      11      11      0       R|W1:0  TRUE        -
//        %%BIT       RICTOF      10      10      0       R|W1:0  TRUE        -
//        %%BIT       RICTON      9       9       0       R|W1:0  TRUE        -
//        %%BIT       RICDT       8       8       0       R|W1:0  TRUE        -
//        %%BIT       RICET       7       7       0       R|W1:0  TRUE        -
//        %%BIT       RICFT       6       6       0       R|W1:0  TRUE        -
//        %%BIT       RICST       5       5       0       R|W1:0  TRUE        -
//        %%BIT       RICFR       4       4       0       R|W1:0  TRUE        -
//        %%BIT       RICSR       3       3       0       R|W1:0  TRUE        -
//        %%BIT       RICPSTP     2       2       0       R|W1:0  TRUE        -
//        %%BIT       RICPSRT     1       1       0       R|W1:0  TRUE        -
//     %%BIT       RICPG       0       0       0       R|W1:0  TRUE        -
// 
// %REG_NAME RHSIFRXICIE
//     %%TITLE     name        upper   lower   init    access  support     callback
//        %%BIT       RIEPA        16      16      0       R|W    TRUE        -
//        %%BIT       RIETOL       11      11      0       R|W    TRUE        -
//        %%BIT       RIETOF       10      10      0       R|W    TRUE        -
//        %%BIT       RIETON       9       9       0       R|W    TRUE        -
//        %%BIT       RIEDT        8       8       0       R|W    TRUE        -
//        %%BIT       RIEET        7       7       0       R|W    TRUE        -
//        %%BIT       RIEFT        6       6       0       R|W    TRUE        -
//        %%BIT       RIEST        5       5       0       R|W    TRUE        -
//        %%BIT       RIEFR        4       4       0       R|W    TRUE        -
//        %%BIT       RIESR        3       3       0       R|W    TRUE        -
//        %%BIT       RIEPSTP      2       2       0       R|W    TRUE        -
//        %%BIT       RIEPSRT      1       1       0       R|W    TRUE        -
//     %%BIT       RIEPG        0       0       0       R|W    TRUE        -
////////////////////////////////////////////////////////////////////////////////
/// @file hsifl10_all_regif.h
/// @brief Register IF class of model HSIFL10_ALL
/// $Id: hsifl10_all_regif.h,v 1.5 2020/03/16 02:13:01 quynhnhunguyen Exp $
/// $Date: 2020/03/16 02:13:01 $
/// $Revison$
/// $Author: quynhnhunguyen $
////////////////////////////////////////////////////////////////////////////////
#ifndef __HSIFL10_ALL_REGIF_H__
#define __HSIFL10_ALL_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#ifdef REGIF_NOT_USE_SYSTEMC
#include <cassert>
#else
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef USR_CWR_SYSTEMC
#include "scml.h"
#endif

/// Register IF class of HSIFL10_ALL model
class Chsifl10_all_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel = channel;
            this-> is_wr   = is_wr;
            this-> size    = size;
            this-> pre_data= pre_data;
            this-> data    = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel = _channel;
            this->length  = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block = _block;
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Chsifl10_all_regif(std::string name, uint buswidth);
    ~Chsifl10_all_regif();

protected:
    vpcl::re_register *RHSIFMDCR     ;
    vpcl::re_register *RHSIFSMCR     ;
    vpcl::re_register *RHSIFPCR      ;
    vpcl::re_register *RHSIFSPCR     ;
    vpcl::re_register *RHSIFTMDCR    ;
    vpcl::re_register *RHSIFL1SR     ;
    vpcl::re_register *RHSIFLTXFRMRL1;
    vpcl::re_register *RHSIFLRXFRMRL1;
    vpcl::re_register *RHSIFLTXFRMRL2;
    vpcl::re_register *RHSIFLRXFRMRL2;
    vpcl::re_register *RHSIFTXRXCR   ;
    vpcl::re_register *RHSIFICCR     ;
    vpcl::re_register *RHSIFCCR      ;
    vpcl::re_register *RHSIFTXCMPST  ;
    vpcl::re_register *RHSIFTXCMPSC  ;
    vpcl::re_register *RHSIFTXCMPIE  ;
    vpcl::re_register *RHSIFTXERRST  ;
    vpcl::re_register *RHSIFTXERRSC  ;
    vpcl::re_register *RHSIFTXERRIE  ;
    vpcl::re_register *RHSIFRXCMPST  ;
    vpcl::re_register *RHSIFRXCMPSC  ;
    vpcl::re_register *RHSIFRXCMPIE  ;
    vpcl::re_register *RHSIFRXERRST  ;
    vpcl::re_register *RHSIFRXERRSC  ;
    vpcl::re_register *RHSIFRXERRIE  ;
    vpcl::re_register *RHSIFRXICST   ;
    vpcl::re_register *RHSIFRXICSC   ;
    vpcl::re_register *RHSIFRXICIE   ;

    #ifdef USR_CWR_SYSTEMC
    scml2::memory<uint> cwmem;
    scml2::reg<uint> *CW_RHSIFMDCR     ;
    scml2::reg<uint> *CW_RHSIFSMCR     ;
    scml2::reg<uint> *CW_RHSIFPCR      ;
    scml2::reg<uint> *CW_RHSIFSPCR     ;
    scml2::reg<uint> *CW_RHSIFTMDCR    ;
    scml2::reg<uint> *CW_RHSIFL1SR     ;
    scml2::reg<uint> *CW_RHSIFLTXFRMRL1;
    scml2::reg<uint> *CW_RHSIFLRXFRMRL1;
    scml2::reg<uint> *CW_RHSIFLTXFRMRL2;
    scml2::reg<uint> *CW_RHSIFLRXFRMRL2;
    scml2::reg<uint> *CW_RHSIFTXRXCR   ;
    scml2::reg<uint> *CW_RHSIFICCR     ;
    scml2::reg<uint> *CW_RHSIFCCR      ;
    scml2::reg<uint> *CW_RHSIFTXCMPST  ;
    scml2::reg<uint> *CW_RHSIFTXCMPSC  ;
    scml2::reg<uint> *CW_RHSIFTXCMPIE  ;
    scml2::reg<uint> *CW_RHSIFTXERRST  ;
    scml2::reg<uint> *CW_RHSIFTXERRSC  ;
    scml2::reg<uint> *CW_RHSIFTXERRIE  ;
    scml2::reg<uint> *CW_RHSIFRXCMPST  ;
    scml2::reg<uint> *CW_RHSIFRXCMPSC  ;
    scml2::reg<uint> *CW_RHSIFRXCMPIE  ;
    scml2::reg<uint> *CW_RHSIFRXERRST  ;
    scml2::reg<uint> *CW_RHSIFRXERRSC  ;
    scml2::reg<uint> *CW_RHSIFRXERRIE  ;
    scml2::reg<uint> *CW_RHSIFRXICST   ;
    scml2::reg<uint> *CW_RHSIFRXICSC   ;
    scml2::reg<uint> *CW_RHSIFRXICIE   ;
    #endif

    uint RHSIFMDCR_CTSEN;
    uint RHSIFMDCR_CTSV;
    uint RHSIFMDCR_CLKSEL;
    uint RHSIFMDCR_MST ;
    uint RHSIFSMCR_SLP ;
    uint RHSIFPCR_PLLSTBY;
    uint RHSIFSPCR_FMBR;
    uint RHSIFSPCR_TXSP;
    uint RHSIFSPCR_RXSP;
    uint RHSIFTMDCR_CKTM;
    uint RHSIFTMDCR_CKTMSEL;
    uint RHSIFTMDCR_TXLPBK;
    uint RHSIFTMDCR_RXLPBK;
    uint RHSIFL1SR_RCTS;
    uint RHSIFL1SR_TFFUL;
    uint RHSIFL1SR_TFEMP;
    uint RHSIFL1SR_RFFUL;
    uint RHSIFL1SR_RFEMP;
    uint RHSIFLTXFRMRL1_TL1E;
    uint RHSIFLTXFRMRL1_TL1P;
    uint RHSIFLTXFRMRL1_TL1H;
    uint RHSIFLRXFRMRL1_RL1E;
    uint RHSIFLRXFRMRL1_RL1P;
    uint RHSIFLRXFRMRL1_RL1H;
    uint RHSIFLTXFRMRL2_T2L2H;
    uint RHSIFLTXFRMRL2_T2L1H;
    uint RHSIFLRXFRMRL2_R2L2H;
    uint RHSIFLRXFRMRL2_R2L1H;
    uint RHSIFTXRXCR_TXEN;
    uint RHSIFTXRXCR_RXEN;
    uint RHSIFICCR_ITRG;
    uint RHSIFICCR_PLD ;
    uint RHSIFCCR_CTRG ;
    uint RHSIFCCR_CTS  ;
    uint RHSIFCCR_PLD  ;
    uint RHSIFTXCMPST_TCL2;
    uint RHSIFTXCMPST_TCCT;
    uint RHSIFTXCMPST_TCIC;
    uint RHSIFTXCMPSC_TCCL2;
    uint RHSIFTXCMPSC_TCCCT;
    uint RHSIFTXCMPSC_TCCIC;
    uint RHSIFTXCMPIE_TCEL2;
    uint RHSIFTXCMPIE_TCECT;
    uint RHSIFTXCMPIE_TCEIC;
    uint RHSIFTXERRST_TERSZ;
    uint RHSIFTXERRST_TERSZI5;
    uint RHSIFTXERRST_TERSZI4;
    uint RHSIFTXERRST_TERCTF;
    uint RHSIFTXERRST_TERCTE;
    uint RHSIFTXERRST_TERCTD;
    uint RHSIFTXERRST_TERCTC;
    uint RHSIFTXERRST_TERCTB;
    uint RHSIFTXERRST_TERCTA;
    uint RHSIFTXERRST_TERCT9;
    uint RHSIFTXERRST_TERCT8;
    uint RHSIFTXERRST_TERCT2;
    uint RHSIFTXERRST_TERCT1;
    uint RHSIFTXERRSC_TERCSZ;
    uint RHSIFTXERRSC_TERCSZI5;
    uint RHSIFTXERRSC_TERCSZI4;
    uint RHSIFTXERRSC_TERCCTF;
    uint RHSIFTXERRSC_TERCCTE;
    uint RHSIFTXERRSC_TERCCTD;
    uint RHSIFTXERRSC_TERCCTC;
    uint RHSIFTXERRSC_TERCCTB;
    uint RHSIFTXERRSC_TERCCTA;
    uint RHSIFTXERRSC_TERCCT9;
    uint RHSIFTXERRSC_TERCCT8;
    uint RHSIFTXERRSC_TERCCT2;
    uint RHSIFTXERRSC_TERCCT1;
    uint RHSIFTXERRIE_TERESZ;
    uint RHSIFTXERRIE_TERESZI5;
    uint RHSIFTXERRIE_TERESZI4;
    uint RHSIFTXERRIE_TERECTF;
    uint RHSIFTXERRIE_TERECTE;
    uint RHSIFTXERRIE_TERECTD;
    uint RHSIFTXERRIE_TERECTC;
    uint RHSIFTXERRIE_TERECTB;
    uint RHSIFTXERRIE_TERECTA;
    uint RHSIFTXERRIE_TERECT9;
    uint RHSIFTXERRIE_TERECT8;
    uint RHSIFTXERRIE_TERECT2;
    uint RHSIFTXERRIE_TERECT1;
    uint RHSIFRXCMPST_RCL2;
    uint RHSIFRXCMPST_RCCT;
    uint RHSIFRXCMPST_RCIC;
    uint RHSIFRXCMPSC_RCCL2;
    uint RHSIFRXCMPSC_RCCCT;
    uint RHSIFRXCMPSC_RCCIC;
    uint RHSIFRXCMPIE_RCEL2;
    uint RHSIFRXCMPIE_RCECT;
    uint RHSIFRXCMPIE_RCEIC;
    uint RHSIFRXERRST_RERSZ;
    uint RHSIFRXERRST_RERSZI5;
    uint RHSIFRXERRST_RERSZI4;
    uint RHSIFRXERRST_RERCTF;
    uint RHSIFRXERRST_RERCTE;
    uint RHSIFRXERRST_RERCTD;
    uint RHSIFRXERRST_RERCTC;
    uint RHSIFRXERRST_RERCTB;
    uint RHSIFRXERRST_RERCTA;
    uint RHSIFRXERRST_RERCT9;
    uint RHSIFRXERRST_RERCT8;
    uint RHSIFRXERRST_RERCT2;
    uint RHSIFRXERRST_RERCT1;
    uint RHSIFRXERRST_RERIPV;
    uint RHSIFRXERRSC_RERCSZ;
    uint RHSIFRXERRSC_RERCSZI5;
    uint RHSIFRXERRSC_RERCSZI4;
    uint RHSIFRXERRSC_RERCCTF;
    uint RHSIFRXERRSC_RERCCTE;
    uint RHSIFRXERRSC_RERCCTD;
    uint RHSIFRXERRSC_RERCCTC;
    uint RHSIFRXERRSC_RERCCTB;
    uint RHSIFRXERRSC_RERCCTA;
    uint RHSIFRXERRSC_RERCCT9;
    uint RHSIFRXERRSC_RERCCT8;
    uint RHSIFRXERRSC_RERCCT2;
    uint RHSIFRXERRSC_RERCCT1;
    uint RHSIFRXERRSC_RERCIPV;
    uint RHSIFRXERRIE_RERESZ;
    uint RHSIFRXERRIE_RERESZI5;
    uint RHSIFRXERRIE_RERESZI4;
    uint RHSIFRXERRIE_RERECTF;
    uint RHSIFRXERRIE_RERECTE;
    uint RHSIFRXERRIE_RERECTD;
    uint RHSIFRXERRIE_RERECTC;
    uint RHSIFRXERRIE_RERECTB;
    uint RHSIFRXERRIE_RERECTA;
    uint RHSIFRXERRIE_RERECT9;
    uint RHSIFRXERRIE_RERECT8;
    uint RHSIFRXERRIE_RERECT2;
    uint RHSIFRXERRIE_RERECT1;
    uint RHSIFRXERRIE_REREIPV;
    uint RHSIFRXICST_RIPA;
    uint RHSIFRXICST_RITOL;
    uint RHSIFRXICST_RITOF;
    uint RHSIFRXICST_RITON;
    uint RHSIFRXICST_RIDT;
    uint RHSIFRXICST_RIET;
    uint RHSIFRXICST_RIFT;
    uint RHSIFRXICST_RIST;
    uint RHSIFRXICST_RIFR;
    uint RHSIFRXICST_RISR;
    uint RHSIFRXICST_RIPSTP;
    uint RHSIFRXICST_RIPSRT;
    uint RHSIFRXICST_RIPG;
    uint RHSIFRXICSC_RICPA;
    uint RHSIFRXICSC_RICTOL;
    uint RHSIFRXICSC_RICTOF;
    uint RHSIFRXICSC_RICTON;
    uint RHSIFRXICSC_RICDT;
    uint RHSIFRXICSC_RICET;
    uint RHSIFRXICSC_RICFT;
    uint RHSIFRXICSC_RICST;
    uint RHSIFRXICSC_RICFR;
    uint RHSIFRXICSC_RICSR;
    uint RHSIFRXICSC_RICPSTP;
    uint RHSIFRXICSC_RICPSRT;
    uint RHSIFRXICSC_RICPG;
    uint RHSIFRXICIE_RIEPA;
    uint RHSIFRXICIE_RIETOL;
    uint RHSIFRXICIE_RIETOF;
    uint RHSIFRXICIE_RIETON;
    uint RHSIFRXICIE_RIEDT;
    uint RHSIFRXICIE_RIEET;
    uint RHSIFRXICIE_RIEFT;
    uint RHSIFRXICIE_RIEST;
    uint RHSIFRXICIE_RIEFR;
    uint RHSIFRXICIE_RIESR;
    uint RHSIFRXICIE_RIEPSTP;
    uint RHSIFRXICIE_RIEPSRT;
    uint RHSIFRXICIE_RIEPG;

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_RHSIFMDCR_CTSEN(RegCBstr str) = 0;
    virtual void cb_RHSIFSPCR_FMBR(RegCBstr str) = 0;
    virtual void cb_RHSIFTMDCR_RXLPBK(RegCBstr str) = 0;
    virtual void cb_RHSIFICCR_ITRG(RegCBstr str) = 0;
    virtual void cb_RHSIFCCR_CTRG(RegCBstr str) = 0;
    virtual void cb_RHSIFTXCMPSC_TCCL2(RegCBstr str) = 0;
    virtual void cb_RHSIFTXERRSC_TERCSZ(RegCBstr str) = 0;
    virtual void cb_RHSIFRXCMPSC_RCCL2(RegCBstr str) = 0;
    virtual void cb_RHSIFRXERRSC_RERCSZ(RegCBstr str) = 0;
    virtual void cb_RHSIFRXICSC_RICPA(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Chsifl10_all_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Chsifl10_all_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);

    #ifdef USR_CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    void cw_instantiate_reg(scml2::reg<uint> * reg, std::string reg_name, int offset);
    #endif
};
#endif //__HSIFL10_ALL_REG_DEF_H__
