// -----------------------------------------------------------------------------
// $Id$
//
// Copyright(c) 2010-2013 Renesas Electronics Corporation
// Copyright(c) 2010-2013 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.59 2014/05/19 02:28:17 sontran
//    regif_h.skl 1.29 2014/05/09 02:57:13 sontran
//
// Input file : bist_info.txt
////////////////////////////////////////////////////////////////////////////////
// # -----------------------------------------------------------------------------
// # $Id: bist_info.txt,v 1.0 2013/08/13 01:50:14 binhnguyen
// #
// # Copyright(c) 2013 Renesas Electronics Corporation
// # Copyright(c) 2013 Renesas Design Vietnam Co., Ltd.
// # RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// # This program must be used solely for the purpose for which
// # it was furnished by Renesas Electronics Corporation. No part of this
// # program may be reproduced or disclosed to others, in any
// # form, without the prior written permission of Renesas Electronics
// # Corporation.
// # -----------------------------------------------------------------------------
// 
// %MODULE bist
//     #              name     offset_size
//     %%REG_INSTANCE reg_def  6
// 
// %REG_CHANNEL   reg_def
//   %%TITLE  name         reg_name     wsize  rsize    length  offset  factor_start  factor_end  factor_index  init        access  support  callback
//   %%REG    LBISTREF1    LBISTREF1    32     8|16|32  32      0x0000  -             -           -             0x000A5A5A  R       TRUE     -
//   %%REG    LBISTREF2    LBISTREF2    32     8|16|32  32      0x0004  -             -           -             0x0005A5A5  R       TRUE     -
//   %%REG    MBISTREF1    MBISTREF1    32     8|16|32  32      0x0008  -             -           -             0x000AA55A  R       TRUE     -
//   %%REG    MBISTREF2    MBISTREF2    32     8|16|32  32      0x000C  -             -           -             0x00055AA5  R       TRUE     -
//   %%REG    LBISTSIG1    LBISTSIG1    32     8|16|32  32      0x0010  -             -           -             0x0005A5A5  R       TRUE     -
//   %%REG    LBISTSIG2    LBISTSIG2    32     8|16|32  32      0x0014  -             -           -             0x000A5A5A  R       TRUE     -
//   %%REG    MBISTSIG1    MBISTSIG1    32     8|16|32  32      0x0018  -             -           -             0x00055AA5  R       TRUE     -
//   %%REG    MBISTSIG2    MBISTSIG2    32     8|16|32  32      0x001C  -             -           -             0x000AA55A  R       TRUE     -
//   %%REG    MBISTFTAGL1  MBISTFTAGL1  32     8|16|32  32      0x0020  -             -           -             0xFFFFFFFF  R       TRUE     -
//   %%REG    MBISTFTAGH1  MBISTFTAGH1  32     8|16|32  32      0x0024  -             -           -             0xFFFFFFFF  R       TRUE     -
//   %%REG    MBISTFTAGL2  MBISTFTAGL2  32     8|16|32  32      0x0028  -             -           -             0xFFFFFFFF  R       TRUE     -
//   %%REG    MBISTFTAGH2  MBISTFTAGH2  32     8|16|32  32      0x002C  -             -           -             0xFFFFFFFF  R       TRUE     -
//   %%REG    BSEQ0ST      BSEQ0ST      32     8|16|32  32      0x0030  -             -           -             0x00000001  R       TRUE     -
//   %%REG    BSEQ0STB     BSEQ0STB     32     8|16|32  32      0x0034  -             -           -             0x00000002  R       TRUE     -
//   %%REG    BISTST       BISTST       32     8|16|32  32      0x0038  -             -           -             0x0000000F  R       TRUE     -
// 
// 
// %REG_NAME  LBISTREF1
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    LBISTREF1   19      0       0xA5A5A   R        -         -
// 
// %REG_NAME  LBISTREF2
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    LBISTREF2   19      0       0x5A5A5   R        -         -
// 
// %REG_NAME  MBISTREF1
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    MBISTREF1   19      0       0xAA55A   R        -         -
// 
// %REG_NAME  MBISTREF2
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    MBISTREF2   19      0       0x55AA5   R        -         -
// 
// %REG_NAME  LBISTSIG1
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    LBISTSIG1   19      0       0x5A5A5   R        -         -
// 
// %REG_NAME  LBISTSIG2
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    LBISTSIG2   19      0       0xA5A5A   R        -         -
// 
// %REG_NAME  MBISTSIG1
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    MBISTSIG1   19      0       0x55AA5   R        -         -
// 
// %REG_NAME  MBISTSIG2
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    MBISTSIG2   19      0       0xAA55A   R        -         -
// 
// %REG_NAME  MBISTFTAGL1
//    %%TITLE  name            upper   lower   init      access   support   callback
//    %%BIT    MBISTFTAGL131   31      31      1         R        -         -
//    %%BIT    MBISTFTAGL130   30      30      1         R        -         -
//    %%BIT    MBISTFTAGL129   29      29      1         R        -         -
//    %%BIT    MBISTFTAGL128   28      28      1         R        -         -
//    %%BIT    MBISTFTAGL127   27      27      1         R        -         -
//    %%BIT    MBISTFTAGL126   26      26      1         R        -         -
//    %%BIT    MBISTFTAGL125   25      25      1         R        -         -
//    %%BIT    MBISTFTAGL124   24      24      1         R        -         -
//    %%BIT    MBISTFTAGL123   23      23      1         R        -         -
//    %%BIT    MBISTFTAGL122   22      22      1         R        -         -
//    %%BIT    MBISTFTAGL121   21      21      1         R        -         -
//    %%BIT    MBISTFTAGL120   20      20      1         R        -         -
//    %%BIT    MBISTFTAGL119   19      19      1         R        -         -
//    %%BIT    MBISTFTAGL118   18      18      1         R        -         -
//    %%BIT    MBISTFTAGL117   17      17      1         R        -         -
//    %%BIT    MBISTFTAGL116   16      16      1         R        -         -
//    %%BIT    MBISTFTAGL115   15      15      1         R        -         -
//    %%BIT    MBISTFTAGL114   14      14      1         R        -         -
//    %%BIT    MBISTFTAGL113   13      13      1         R        -         -
//    %%BIT    MBISTFTAGL112   12      12      1         R        -         -
//    %%BIT    MBISTFTAGL111   11      11      1         R        -         -
//    %%BIT    MBISTFTAGL110   10      10      1         R        -         -
//    %%BIT    MBISTFTAGL109    9       9      1         R        -         -
//    %%BIT    MBISTFTAGL108    8       8      1         R        -         -
//    %%BIT    MBISTFTAGL107    7       7      1         R        -         -
//    %%BIT    MBISTFTAGL106    6       6      1         R        -         -
//    %%BIT    MBISTFTAGL105    5       5      1         R        -         -
//    %%BIT    MBISTFTAGL104    4       4      1         R        -         -
//    %%BIT    MBISTFTAGL103    3       3      1         R        -         -
//    %%BIT    MBISTFTAGL102    2       2      1         R        -         -
//    %%BIT    MBISTFTAGL101    1       1      1         R        -         -
//    %%BIT    MBISTFTAGL100    0       0      1         R        -         -
// 
// %REG_NAME  MBISTFTAGH1
//    %%TITLE  name            upper   lower   init      access   support   callback
//    %%BIT    MBISTFTAGH131   31      31      1         R        -         -
//    %%BIT    MBISTFTAGH130   30      30      1         R        -         -
//    %%BIT    MBISTFTAGH129   29      29      1         R        -         -
//    %%BIT    MBISTFTAGH128   28      28      1         R        -         -
//    %%BIT    MBISTFTAGH127   27      27      1         R        -         -
//    %%BIT    MBISTFTAGH126   26      26      1         R        -         -
//    %%BIT    MBISTFTAGH125   25      25      1         R        -         -
//    %%BIT    MBISTFTAGH124   24      24      1         R        -         -
//    %%BIT    MBISTFTAGH123   23      23      1         R        -         -
//    %%BIT    MBISTFTAGH122   22      22      1         R        -         -
//    %%BIT    MBISTFTAGH121   21      21      1         R        -         -
//    %%BIT    MBISTFTAGH120   20      20      1         R        -         -
//    %%BIT    MBISTFTAGH119   19      19      1         R        -         -
//    %%BIT    MBISTFTAGH118   18      18      1         R        -         -
//    %%BIT    MBISTFTAGH117   17      17      1         R        -         -
//    %%BIT    MBISTFTAGH116   16      16      1         R        -         -
//    %%BIT    MBISTFTAGH115   15      15      1         R        -         -
//    %%BIT    MBISTFTAGH114   14      14      1         R        -         -
//    %%BIT    MBISTFTAGH113   13      13      1         R        -         -
//    %%BIT    MBISTFTAGH112   12      12      1         R        -         -
//    %%BIT    MBISTFTAGH111   11      11      1         R        -         -
//    %%BIT    MBISTFTAGH110   10      10      1         R        -         -
//    %%BIT    MBISTFTAGH109    9       9      1         R        -         -
//    %%BIT    MBISTFTAGH108    8       8      1         R        -         -
//    %%BIT    MBISTFTAGH107    7       7      1         R        -         -
//    %%BIT    MBISTFTAGH106    6       6      1         R        -         -
//    %%BIT    MBISTFTAGH105    5       5      1         R        -         -
//    %%BIT    MBISTFTAGH104    4       4      1         R        -         -
//    %%BIT    MBISTFTAGH103    3       3      1         R        -         -
//    %%BIT    MBISTFTAGH102    2       2      1         R        -         -
//    %%BIT    MBISTFTAGH101    1       1      1         R        -         -
//    %%BIT    MBISTFTAGH100    0       0      1         R        -         -
// 
// %REG_NAME  MBISTFTAGL2
//    %%TITLE  name            upper   lower   init      access   support   callback
//    %%BIT    MBISTFTAGL231   31      31      1         R        -         -
//    %%BIT    MBISTFTAGL230   30      30      1         R        -         -
//    %%BIT    MBISTFTAGL229   29      29      1         R        -         -
//    %%BIT    MBISTFTAGL228   28      28      1         R        -         -
//    %%BIT    MBISTFTAGL227   27      27      1         R        -         -
//    %%BIT    MBISTFTAGL226   26      26      1         R        -         -
//    %%BIT    MBISTFTAGL225   25      25      1         R        -         -
//    %%BIT    MBISTFTAGL224   24      24      1         R        -         -
//    %%BIT    MBISTFTAGL223   23      23      1         R        -         -
//    %%BIT    MBISTFTAGL222   22      22      1         R        -         -
//    %%BIT    MBISTFTAGL221   21      21      1         R        -         -
//    %%BIT    MBISTFTAGL220   20      20      1         R        -         -
//    %%BIT    MBISTFTAGL219   19      19      1         R        -         -
//    %%BIT    MBISTFTAGL218   18      18      1         R        -         -
//    %%BIT    MBISTFTAGL217   17      17      1         R        -         -
//    %%BIT    MBISTFTAGL216   16      16      1         R        -         -
//    %%BIT    MBISTFTAGL215   15      15      1         R        -         -
//    %%BIT    MBISTFTAGL214   14      14      1         R        -         -
//    %%BIT    MBISTFTAGL213   13      13      1         R        -         -
//    %%BIT    MBISTFTAGL212   12      12      1         R        -         -
//    %%BIT    MBISTFTAGL211   11      11      1         R        -         -
//    %%BIT    MBISTFTAGL210   10      10      1         R        -         -
//    %%BIT    MBISTFTAGL209    9       9      1         R        -         -
//    %%BIT    MBISTFTAGL208    8       8      1         R        -         -
//    %%BIT    MBISTFTAGL207    7       7      1         R        -         -
//    %%BIT    MBISTFTAGL206    6       6      1         R        -         -
//    %%BIT    MBISTFTAGL205    5       5      1         R        -         -
//    %%BIT    MBISTFTAGL204    4       4      1         R        -         -
//    %%BIT    MBISTFTAGL203    3       3      1         R        -         -
//    %%BIT    MBISTFTAGL202    2       2      1         R        -         -
//    %%BIT    MBISTFTAGL201    1       1      1         R        -         -
//    %%BIT    MBISTFTAGL200    0       0      1         R        -         -
// 
// %REG_NAME  MBISTFTAGH2
//    %%TITLE  name            upper   lower   init      access   support   callback
//    %%BIT    MBISTFTAGH231   31      31      1         R        -         -
//    %%BIT    MBISTFTAGH230   30      30      1         R        -         -
//    %%BIT    MBISTFTAGH229   29      29      1         R        -         -
//    %%BIT    MBISTFTAGH228   28      28      1         R        -         -
//    %%BIT    MBISTFTAGH227   27      27      1         R        -         -
//    %%BIT    MBISTFTAGH226   26      26      1         R        -         -
//    %%BIT    MBISTFTAGH225   25      25      1         R        -         -
//    %%BIT    MBISTFTAGH224   24      24      1         R        -         -
//    %%BIT    MBISTFTAGH223   23      23      1         R        -         -
//    %%BIT    MBISTFTAGH222   22      22      1         R        -         -
//    %%BIT    MBISTFTAGH221   21      21      1         R        -         -
//    %%BIT    MBISTFTAGH220   20      20      1         R        -         -
//    %%BIT    MBISTFTAGH219   19      19      1         R        -         -
//    %%BIT    MBISTFTAGH218   18      18      1         R        -         -
//    %%BIT    MBISTFTAGH217   17      17      1         R        -         -
//    %%BIT    MBISTFTAGH216   16      16      1         R        -         -
//    %%BIT    MBISTFTAGH215   15      15      1         R        -         -
//    %%BIT    MBISTFTAGH214   14      14      1         R        -         -
//    %%BIT    MBISTFTAGH213   13      13      1         R        -         -
//    %%BIT    MBISTFTAGH212   12      12      1         R        -         -
//    %%BIT    MBISTFTAGH211   11      11      1         R        -         -
//    %%BIT    MBISTFTAGH210   10      10      1         R        -         -
//    %%BIT    MBISTFTAGH209    9       9      1         R        -         -
//    %%BIT    MBISTFTAGH208    8       8      1         R        -         -
//    %%BIT    MBISTFTAGH207    7       7      1         R        -         -
//    %%BIT    MBISTFTAGH206    6       6      1         R        -         -
//    %%BIT    MBISTFTAGH205    5       5      1         R        -         -
//    %%BIT    MBISTFTAGH204    4       4      1         R        -         -
//    %%BIT    MBISTFTAGH203    3       3      1         R        -         -
//    %%BIT    MBISTFTAGH202    2       2      1         R        -         -
//    %%BIT    MBISTFTAGH201    1       1      1         R        -         -
//    %%BIT    MBISTFTAGH200    0       0      1         R        -         -
// 
// %REG_NAME  BSEQ0ST
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    BISTEND     1       1       0         R        -         -
//    %%BIT    CMPERR      0       0       1         R        -         -
// 
// %REG_NAME  BSEQ0STB
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    BISTENDB    1       1       1         R        -         -
//    %%BIT    CMPERRB     0       0       0         R        -         -
// 
// %REG_NAME  BISTST
//    %%TITLE  name        upper   lower   init      access   support   callback
//    %%BIT    MBIST2ST    3       3       1         R        -         -
//    %%BIT    MBIST1ST    2       2       1         R        -         -
//    %%BIT    LBIST2ST    1       1       1         R        -         -
//    %%BIT    LBIST1ST    0       0       1         R        -         -
// 
// 
// %CMD_BASEID  tgt reg
// %CMD_NODUMP_API CommandCB DumpProfile ClearProfile EnableInsertInput EnableDumpResult
// 
// %CMD_RW BISTProcessingTime  <time: double=20>             @ The time from receiving the start_bist flag to sending the end_bist flag.
// 
// %CMD_ACTION SetCLKfreq  <clk_name: std::string> <clk_freq: double> : void   @ Set clock frequency for pclk port
// 
////////////////////////////////////////////////////////////////////////////////
/// @file bist_regif.h
/// @brief Register IF class of model BIST
/// $Id$
/// $Date$
/// $Revison$
/// $Author$
////////////////////////////////////////////////////////////////////////////////
#ifndef __BIST_REGIF_H__
#define __BIST_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#ifdef REGIF_NOT_USE_SYSTEMC
#include <cassert>
#else
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef CWR_SYSTEMC
#include "scml.h"
#endif

/// Register IF class of BIST model
class Cbist_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel = channel;
            this-> is_wr   = is_wr;
            this-> size    = size;
            this-> pre_data= pre_data;
            this-> data    = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel = _channel;
            this->length  = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block = _block;
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Cbist_regif(std::string name, uint buswidth);
    ~Cbist_regif();

protected:
    vpcl::re_register *LBISTREF1  ;
    vpcl::re_register *LBISTREF2  ;
    vpcl::re_register *MBISTREF1  ;
    vpcl::re_register *MBISTREF2  ;
    vpcl::re_register *LBISTSIG1  ;
    vpcl::re_register *LBISTSIG2  ;
    vpcl::re_register *MBISTSIG1  ;
    vpcl::re_register *MBISTSIG2  ;
    vpcl::re_register *MBISTFTAGL1;
    vpcl::re_register *MBISTFTAGH1;
    vpcl::re_register *MBISTFTAGL2;
    vpcl::re_register *MBISTFTAGH2;
    vpcl::re_register *BSEQ0ST    ;
    vpcl::re_register *BSEQ0STB   ;
    vpcl::re_register *BISTST     ;

    #ifdef CWR_SYSTEMC
    scml2::memory<uint> cwmem;
    scml2::reg<uint> *CW_LBISTREF1  ;
    scml2::reg<uint> *CW_LBISTREF2  ;
    scml2::reg<uint> *CW_MBISTREF1  ;
    scml2::reg<uint> *CW_MBISTREF2  ;
    scml2::reg<uint> *CW_LBISTSIG1  ;
    scml2::reg<uint> *CW_LBISTSIG2  ;
    scml2::reg<uint> *CW_MBISTSIG1  ;
    scml2::reg<uint> *CW_MBISTSIG2  ;
    scml2::reg<uint> *CW_MBISTFTAGL1;
    scml2::reg<uint> *CW_MBISTFTAGH1;
    scml2::reg<uint> *CW_MBISTFTAGL2;
    scml2::reg<uint> *CW_MBISTFTAGH2;
    scml2::reg<uint> *CW_BSEQ0ST    ;
    scml2::reg<uint> *CW_BSEQ0STB   ;
    scml2::reg<uint> *CW_BISTST     ;
    #endif

    uint LBISTREF1_LBISTREF1;
    uint LBISTREF2_LBISTREF2;
    uint MBISTREF1_MBISTREF1;
    uint MBISTREF2_MBISTREF2;
    uint LBISTSIG1_LBISTSIG1;
    uint LBISTSIG2_LBISTSIG2;
    uint MBISTSIG1_MBISTSIG1;
    uint MBISTSIG2_MBISTSIG2;
    uint MBISTFTAGL1_MBISTFTAGL131;
    uint MBISTFTAGL1_MBISTFTAGL130;
    uint MBISTFTAGL1_MBISTFTAGL129;
    uint MBISTFTAGL1_MBISTFTAGL128;
    uint MBISTFTAGL1_MBISTFTAGL127;
    uint MBISTFTAGL1_MBISTFTAGL126;
    uint MBISTFTAGL1_MBISTFTAGL125;
    uint MBISTFTAGL1_MBISTFTAGL124;
    uint MBISTFTAGL1_MBISTFTAGL123;
    uint MBISTFTAGL1_MBISTFTAGL122;
    uint MBISTFTAGL1_MBISTFTAGL121;
    uint MBISTFTAGL1_MBISTFTAGL120;
    uint MBISTFTAGL1_MBISTFTAGL119;
    uint MBISTFTAGL1_MBISTFTAGL118;
    uint MBISTFTAGL1_MBISTFTAGL117;
    uint MBISTFTAGL1_MBISTFTAGL116;
    uint MBISTFTAGL1_MBISTFTAGL115;
    uint MBISTFTAGL1_MBISTFTAGL114;
    uint MBISTFTAGL1_MBISTFTAGL113;
    uint MBISTFTAGL1_MBISTFTAGL112;
    uint MBISTFTAGL1_MBISTFTAGL111;
    uint MBISTFTAGL1_MBISTFTAGL110;
    uint MBISTFTAGL1_MBISTFTAGL109;
    uint MBISTFTAGL1_MBISTFTAGL108;
    uint MBISTFTAGL1_MBISTFTAGL107;
    uint MBISTFTAGL1_MBISTFTAGL106;
    uint MBISTFTAGL1_MBISTFTAGL105;
    uint MBISTFTAGL1_MBISTFTAGL104;
    uint MBISTFTAGL1_MBISTFTAGL103;
    uint MBISTFTAGL1_MBISTFTAGL102;
    uint MBISTFTAGL1_MBISTFTAGL101;
    uint MBISTFTAGL1_MBISTFTAGL100;
    uint MBISTFTAGH1_MBISTFTAGH131;
    uint MBISTFTAGH1_MBISTFTAGH130;
    uint MBISTFTAGH1_MBISTFTAGH129;
    uint MBISTFTAGH1_MBISTFTAGH128;
    uint MBISTFTAGH1_MBISTFTAGH127;
    uint MBISTFTAGH1_MBISTFTAGH126;
    uint MBISTFTAGH1_MBISTFTAGH125;
    uint MBISTFTAGH1_MBISTFTAGH124;
    uint MBISTFTAGH1_MBISTFTAGH123;
    uint MBISTFTAGH1_MBISTFTAGH122;
    uint MBISTFTAGH1_MBISTFTAGH121;
    uint MBISTFTAGH1_MBISTFTAGH120;
    uint MBISTFTAGH1_MBISTFTAGH119;
    uint MBISTFTAGH1_MBISTFTAGH118;
    uint MBISTFTAGH1_MBISTFTAGH117;
    uint MBISTFTAGH1_MBISTFTAGH116;
    uint MBISTFTAGH1_MBISTFTAGH115;
    uint MBISTFTAGH1_MBISTFTAGH114;
    uint MBISTFTAGH1_MBISTFTAGH113;
    uint MBISTFTAGH1_MBISTFTAGH112;
    uint MBISTFTAGH1_MBISTFTAGH111;
    uint MBISTFTAGH1_MBISTFTAGH110;
    uint MBISTFTAGH1_MBISTFTAGH109;
    uint MBISTFTAGH1_MBISTFTAGH108;
    uint MBISTFTAGH1_MBISTFTAGH107;
    uint MBISTFTAGH1_MBISTFTAGH106;
    uint MBISTFTAGH1_MBISTFTAGH105;
    uint MBISTFTAGH1_MBISTFTAGH104;
    uint MBISTFTAGH1_MBISTFTAGH103;
    uint MBISTFTAGH1_MBISTFTAGH102;
    uint MBISTFTAGH1_MBISTFTAGH101;
    uint MBISTFTAGH1_MBISTFTAGH100;
    uint MBISTFTAGL2_MBISTFTAGL231;
    uint MBISTFTAGL2_MBISTFTAGL230;
    uint MBISTFTAGL2_MBISTFTAGL229;
    uint MBISTFTAGL2_MBISTFTAGL228;
    uint MBISTFTAGL2_MBISTFTAGL227;
    uint MBISTFTAGL2_MBISTFTAGL226;
    uint MBISTFTAGL2_MBISTFTAGL225;
    uint MBISTFTAGL2_MBISTFTAGL224;
    uint MBISTFTAGL2_MBISTFTAGL223;
    uint MBISTFTAGL2_MBISTFTAGL222;
    uint MBISTFTAGL2_MBISTFTAGL221;
    uint MBISTFTAGL2_MBISTFTAGL220;
    uint MBISTFTAGL2_MBISTFTAGL219;
    uint MBISTFTAGL2_MBISTFTAGL218;
    uint MBISTFTAGL2_MBISTFTAGL217;
    uint MBISTFTAGL2_MBISTFTAGL216;
    uint MBISTFTAGL2_MBISTFTAGL215;
    uint MBISTFTAGL2_MBISTFTAGL214;
    uint MBISTFTAGL2_MBISTFTAGL213;
    uint MBISTFTAGL2_MBISTFTAGL212;
    uint MBISTFTAGL2_MBISTFTAGL211;
    uint MBISTFTAGL2_MBISTFTAGL210;
    uint MBISTFTAGL2_MBISTFTAGL209;
    uint MBISTFTAGL2_MBISTFTAGL208;
    uint MBISTFTAGL2_MBISTFTAGL207;
    uint MBISTFTAGL2_MBISTFTAGL206;
    uint MBISTFTAGL2_MBISTFTAGL205;
    uint MBISTFTAGL2_MBISTFTAGL204;
    uint MBISTFTAGL2_MBISTFTAGL203;
    uint MBISTFTAGL2_MBISTFTAGL202;
    uint MBISTFTAGL2_MBISTFTAGL201;
    uint MBISTFTAGL2_MBISTFTAGL200;
    uint MBISTFTAGH2_MBISTFTAGH231;
    uint MBISTFTAGH2_MBISTFTAGH230;
    uint MBISTFTAGH2_MBISTFTAGH229;
    uint MBISTFTAGH2_MBISTFTAGH228;
    uint MBISTFTAGH2_MBISTFTAGH227;
    uint MBISTFTAGH2_MBISTFTAGH226;
    uint MBISTFTAGH2_MBISTFTAGH225;
    uint MBISTFTAGH2_MBISTFTAGH224;
    uint MBISTFTAGH2_MBISTFTAGH223;
    uint MBISTFTAGH2_MBISTFTAGH222;
    uint MBISTFTAGH2_MBISTFTAGH221;
    uint MBISTFTAGH2_MBISTFTAGH220;
    uint MBISTFTAGH2_MBISTFTAGH219;
    uint MBISTFTAGH2_MBISTFTAGH218;
    uint MBISTFTAGH2_MBISTFTAGH217;
    uint MBISTFTAGH2_MBISTFTAGH216;
    uint MBISTFTAGH2_MBISTFTAGH215;
    uint MBISTFTAGH2_MBISTFTAGH214;
    uint MBISTFTAGH2_MBISTFTAGH213;
    uint MBISTFTAGH2_MBISTFTAGH212;
    uint MBISTFTAGH2_MBISTFTAGH211;
    uint MBISTFTAGH2_MBISTFTAGH210;
    uint MBISTFTAGH2_MBISTFTAGH209;
    uint MBISTFTAGH2_MBISTFTAGH208;
    uint MBISTFTAGH2_MBISTFTAGH207;
    uint MBISTFTAGH2_MBISTFTAGH206;
    uint MBISTFTAGH2_MBISTFTAGH205;
    uint MBISTFTAGH2_MBISTFTAGH204;
    uint MBISTFTAGH2_MBISTFTAGH203;
    uint MBISTFTAGH2_MBISTFTAGH202;
    uint MBISTFTAGH2_MBISTFTAGH201;
    uint MBISTFTAGH2_MBISTFTAGH200;
    uint BSEQ0ST_BISTEND;
    uint BSEQ0ST_CMPERR;
    uint BSEQ0STB_BISTENDB;
    uint BSEQ0STB_CMPERRB;
    uint BISTST_MBIST2ST;
    uint BISTST_MBIST1ST;
    uint BISTST_LBIST2ST;
    uint BISTST_LBIST1ST;

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);


    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Cbist_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Cbist_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);

    #ifdef CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    void cw_instantiate_reg(scml2::reg<uint> * reg, std::string reg_name, int offset);
    #endif
};
#endif //__BIST_REG_DEF_H__
