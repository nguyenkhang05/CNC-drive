// -----------------------------------------------------------------------------
// $Id$
//
// Copyright(c) 2010-2014 Renesas Electronics Corporation
// Copyright(c) 2010-2014 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py 1.9 2013/12/04 09:51:36 sontran
//    gen_regif_class.py 1.62 2014/11/28 10:17:23 ducduong
//    regif_h.skl 1.32 2014/11/28 10:17:23 ducduong
//
// Input file : sarad113x_regif.txt
////////////////////////////////////////////////////////////////////////////////
// # -----------------------------------------------------------------------------
// # $Id$
// #
// # Copyright(c) 2015 Renesas Electronics Corporation
// # Copyright(c) 2015 Renesas Design Vietnam Co., Ltd.
// # RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// # This program must be used solely for the purpose for which
// # it was furnished by Renesas Electronics Corporation. No part of this
// # program may be reproduced or disclosed to others, in any
// # form, without the prior written permission of Renesas Electronics
// # Corporation.
// # -----------------------------------------------------------------------------
// 
// %MODULE sarad113x
//     #              name     offset_size  
//     %%REG_INSTANCE reg_def  11           
// 
// %REG_CHANNEL   reg_def
//     %%TITLE  name        access  init        offset  length  size        factor_start  factor_end  factor_index  factor_step  support  
//     %%REG    VCR         R|W     0x00000000  0x000   32      8|16|32     0             49          -             0x4          TRUE     
//     %%REG    TSNVCR      R|W     0x00000025  0x0F0   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PWDVCR      R|W     0x00000000  0x0F4   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    DR          R       0x00000000  0x100   32      16|32       0             24          -             0x4          TRUE     
//     %%REG    PWDTSNDR    R       0x00000000  0x178   32      16|32       -             -           -             -            TRUE     
//     %%REG    DIR         R       0x00000000  0x200   32      32          0             49          -             0x4          TRUE     
//     %%REG    TSNDIR      R       0x00250000  0x2F0   32      32          -             -           -             -            TRUE     
//     %%REG    PWDDIR      R       0x00000000  0x2F4   32      32          -             -           -             -            TRUE     
//     %%REG    ADHALTR     R|W     0x00000000  0x300   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    ADCR        R|W     0x00000000  0x304   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SGSTR       R       0x00000000  0x308   32      16|32       -             -           -             -            TRUE     
//     %%REG    MPXCURR     R       0x00000000  0x30C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    TSNCR       R|W     0x00000000  0x310   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THSMPSTCR   R|W     0x00000000  0x314   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THCR        R|W     0x00000000  0x318   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THAHLDSTCR  R|W     0x00000000  0x31C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THBHLDSTCR  R|W     0x00000000  0x320   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THACR       R|W     0x00000000  0x324   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THBCR       R|W     0x00000000  0x328   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THER        R|W     0x00000000  0x32C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    THGSR       R|W     0x00000000  0x330   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SFTCR       R|W     0x00000000  0x334   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    ULLMTBR     R|W     0xFFF00000  0x338   32      8|16|32     0             2           -             0x4          TRUE     
//     %%REG    ECR         R|W     0x00000000  0x344   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    ULER        R       0x00000000  0x348   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    OWER        R       0x00000000  0x34C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    DGCTL0      R|W     0x00000000  0x350   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    DGCTL1      R|W     0x00000000  0x354   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PDCTL1      R|W     0x00000000  0x358   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PDCTL2      R|W     0x00000000  0x35C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SMPCR       R|W     0x00000018  0x380   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    TSNSMPCR    R|W     0x000000f0  0x384   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    EMUCR       R|W     0x00000000  0x388   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SGPRCR      R|W     0x00043210  0x38C   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    TRMCR       R|W     0x00000000  0x3C0   32      32          -             -           -             -            FALSE    
//     %%REG    ADTSTRA     R|W     0x00000000  0x3C4   32      32          -             -           -             -            FALSE    
//     %%REG    ADTSTRB     R|W     0x00000000  0x3C8   32      32          -             -           -             -            FALSE    
//     %%REG    ADTSTRC     R|W     0x00000000  0x3CC   32      32          -             -           -             -            FALSE    
//     %%REG    SGSTCR      R|W     0x00000000  0x440   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    TSNSGSTCR   R|W     0x00000000  0x400   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PWDSGSTCR   R|W     0x00000000  0x500   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SGCR        R|W     0x00000000  0x448   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    TSNSGCR     R|W     0x00000000  0x408   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PWDSGCR     R|W     0x00000000  0x508   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SGSEFCR     R|W     0x00000000  0x458   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    TSNSGSEFCR  R|W     0x00000000  0x418   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    PWDSGSEFCR  R|W     0x00000000  0x518   32      8|16|32     -             -           -             -            TRUE     
//     %%REG    SGVCSP      R|W     0x00000000  0x44C   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    SGVCEP      R|W     0x00000000  0x450   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    SGMCYCR     R|W     0x00000000  0x454   32      8|16|32     1             3           -             0x40         TRUE     
//     %%REG    SGTSEL      R|W     0x00000000  0x45C   32      16|32       1             3           -             0x40         TRUE     
// 
// 
// %REG_NAME  VCR         
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MPXE        15     15     0           W|R     -        -         
//     %%BIT    MPXV        14     12     0           W|R     -        -         
//     %%BIT    CNVCLS      9      9      0           W|R     -        -         
//     %%BIT    ULS         7      6      0           W|R     -        -         
//     %%BIT    ADIE        8      8      0           W|R     -        -         
//     %%BIT    GCTRL       5      0      0           W|R     -        W         
// 
// %REG_NAME  TSNVCR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ULS         7      6      0           W|R     -        W         
//     %%BIT    TSNGCTRL    5      0      0x25        R       -        -         
// 
// %REG_NAME  PWDVCR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MPXE        15     15     0           R       -        -         
//     %%BIT    MPXV        14     12     0           R       -        -         
//     %%BIT    ULS         7      6      0           R       -        -         
//     %%BIT    GCTRL       5      0      0           R       -        -         
// 
// %REG_NAME  DR          
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    DR1         31     16     0           R       -        -         
//     %%BIT    DR0         15     0      0           R       -        R         
// 
// %REG_NAME  PWDTSNDR    
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PWDDR       31     16     0           R       -        -         
//     %%BIT    TSNDR       15     0      0           R       -        R         
// 
// %REG_NAME  DIR         
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MPXE        31     31     0           R       -        -         
//     %%BIT    MPXV        30     28     0           R       -        -         
//     %%BIT    WFLG        25     25     0           R       -        -         
//     %%BIT    ID          21     16     0           R       -        -         
//     %%BIT    DR          15     0      0           R       -        R         
// 
// %REG_NAME  TSNDIR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    WFLG        25     25     0           R       -        -         
//     %%BIT    ID          21     16     0x25        R       -        -         
//     %%BIT    TSNDR       15     0      0           R       -        R         
// 
// %REG_NAME  PWDDIR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MPXE        31     31     0           R       -        -         
//     %%BIT    MPXV        30     28     0           R       -        -         
//     %%BIT    WFLG        25     25     0           R       -        -         
//     %%BIT    ID          21     16     0           R       -        -         
//     %%BIT    PWDDR       15     0      0           R       -        R         
// 
// %REG_NAME  ADHALTR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    HALT        0      0      0           W|R     -        W         
// 
// %REG_NAME  ADCR        
//     %%TITLE  name        upper  lower  init        access  support  callback  value         
//     %%BIT    DGON        7      7      0           W|R     -        -         -             
//     %%BIT    TSNSELFDIAG 6      6      0           W|R     -        -         -             
//     %%BIT    CRAC        5      5      0           W|R     -        -         -             
//     %%BIT    CTYP        4      4      0           W|R     -        -         -             
//     %%BIT    SUSMTD      1      0      0           W|R     -        W         b00,b01,b10   
// 
// %REG_NAME  SGSTR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SHACT       14     14     0           R       -        -         
//     %%BIT    SGACT       13     8      0           R       -        -         
//     %%BIT    SEF         4      0      0           R       -        -         
// 
// %REG_NAME  MPXCURR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MPXCUR      2      0      0           R       -        -         
// 
// %REG_NAME  TSNCR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TSNEN       0      0      0           W|R     -        W         
// 
// %REG_NAME  THSMPSTCR   
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SMPST       0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THCR        
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ASMPMSK     0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THAHLDSTCR  
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    HLDST       0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THBHLDSTCR  
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    HLDST       0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THACR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    HLDCTE      5      5      0           W|R     TRUE     -         
//     %%BIT    HLDTE       4      4      0           W|R     TRUE     -         
//     %%BIT    SGS         1      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THBCR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    HLDCTE      5      5      0           W|R     TRUE     -         
//     %%BIT    HLDTE       4      4      0           W|R     TRUE     -         
//     %%BIT    SGS         1      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THER        
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TH5E        5      5      0           W|R     TRUE     -         
//     %%BIT    TH4E        4      4      0           W|R     TRUE     -         
//     %%BIT    TH3E        3      3      0           W|R     TRUE     -         
//     %%BIT    TH2E        2      2      0           W|R     TRUE     -         
//     %%BIT    TH1E        1      1      0           W|R     TRUE     -         
//     %%BIT    TH0E        0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  THGSR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TH5GS       5      5      0           W|R     TRUE     -         
//     %%BIT    TH4GS       4      4      0           W|R     TRUE     -         
//     %%BIT    TH3GS       3      3      0           W|R     TRUE     -         
//     %%BIT    TH2GS       2      2      0           W|R     TRUE     -         
//     %%BIT    TH1GS       1      1      0           W|R     TRUE     -         
//     %%BIT    TH0GS       0      0      0           W|R     TRUE     W         
// 
// %REG_NAME  SFTCR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    RDCLRE      4      4      0           W|R     -        -         
//     %%BIT    ULEIE       3      3      0           W|R     -        -         
//     %%BIT    OWEIE       2      2      0           W|R     -        W         
// 
// %REG_NAME  ULLMTBR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ULMTB       31     20     4095        -       -        W         
//     %%BIT    LLMTB       15     4      0           -       -        -         
// 
// %REG_NAME  ECR         
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ULEC        3      3      0           W|R     -        W         
//     %%BIT    OWEC        2      2      0           W|R     -        -         
// 
// %REG_NAME  ULER        
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    UE          15     15     0           R       -        -         
//     %%BIT    LE          14     14     0           R       -        -         
//     %%BIT    ULSG        13     12     0           R       -        -         
//     %%BIT    MPXE        11     11     0           R       -        -         
//     %%BIT    MPXV        10     8      0           R       -        -         
//     %%BIT    ULE         7      7      0           R       -        -         
//     %%BIT    ULECAP      5      0      0           R       -        -         
// 
// %REG_NAME  OWER        
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    OWE         7      7      0           R       -        -         
//     %%BIT    OWECAP      5      0      0           R       -        -         
// 
// %REG_NAME  DGCTL0      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PSEL2       2      2      0           W|R     -        -         
//     %%BIT    PSEL1       1      1      0           W|R     -        -         
//     %%BIT    PSEL0       0      0      0           W|R     -        W         
// 
// %REG_NAME  DGCTL1      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    CDG15       15     15     0           W|R     -        -         
//     %%BIT    CDG14       14     14     0           W|R     -        -         
//     %%BIT    CDG13       13     13     0           W|R     -        -         
//     %%BIT    CDG12       12     12     0           W|R     -        -         
//     %%BIT    CDG11       11     11     0           W|R     -        -         
//     %%BIT    CDG10       10     10     0           W|R     -        -         
//     %%BIT    CDG09       9      9      0           W|R     -        -         
//     %%BIT    CDG08       8      8      0           W|R     -        -         
//     %%BIT    CDG07       7      7      0           W|R     -        -         
//     %%BIT    CDG06       6      6      0           W|R     -        -         
//     %%BIT    CDG05       5      5      0           W|R     -        -         
//     %%BIT    CDG04       4      4      0           W|R     -        -         
//     %%BIT    CDG03       3      3      0           W|R     -        -         
//     %%BIT    CDG02       2      2      0           W|R     -        -         
//     %%BIT    CDG01       1      1      0           W|R     -        -         
//     %%BIT    CDG00       0      0      0           W|R     -        W         
// 
// %REG_NAME  PDCTL1      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PDNA15      15     15     0           W|R     -        -         
//     %%BIT    PDNA14      14     14     0           W|R     -        -         
//     %%BIT    PDNA13      13     13     0           W|R     -        -         
//     %%BIT    PDNA12      12     12     0           W|R     -        -         
//     %%BIT    PDNA11      11     11     0           W|R     -        -         
//     %%BIT    PDNA10      10     10     0           W|R     -        -         
//     %%BIT    PDNA09      9      9      0           W|R     -        -         
//     %%BIT    PDNA08      8      8      0           W|R     -        -         
//     %%BIT    PDNA07      7      7      0           W|R     -        -         
//     %%BIT    PDNA06      6      6      0           W|R     -        -         
//     %%BIT    PDNA05      5      5      0           W|R     -        -         
//     %%BIT    PDNA04      4      4      0           W|R     -        -         
//     %%BIT    PDNA03      3      3      0           W|R     -        -         
//     %%BIT    PDNA02      2      2      0           W|R     -        -         
//     %%BIT    PDNA01      1      1      0           W|R     -        -         
//     %%BIT    PDNA00      0      0      0           W|R     -        W         
// 
// %REG_NAME  PDCTL2      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PDNB19      19     19     0           W|R     -        -         
//     %%BIT    PDNB18      18     18     0           W|R     -        -         
//     %%BIT    PDNB17      17     17     0           W|R     -        -         
//     %%BIT    PDNB16      16     16     0           W|R     -        -         
//     %%BIT    PDNB15      15     15     0           W|R     -        -         
//     %%BIT    PDNB14      14     14     0           W|R     -        -         
//     %%BIT    PDNB13      13     13     0           W|R     -        -         
//     %%BIT    PDNB12      12     12     0           W|R     -        -         
//     %%BIT    PDNB11      11     11     0           W|R     -        -         
//     %%BIT    PDNB10      10     10     0           W|R     -        -         
//     %%BIT    PDNB09      9      9      0           W|R     -        -         
//     %%BIT    PDNB08      8      8      0           W|R     -        -         
//     %%BIT    PDNB07      7      7      0           W|R     -        -         
//     %%BIT    PDNB06      6      6      0           W|R     -        -         
//     %%BIT    PDNB05      5      5      0           W|R     -        -         
//     %%BIT    PDNB04      4      4      0           W|R     -        -         
//     %%BIT    PDNB03      3      3      0           W|R     -        -         
//     %%BIT    PDNB02      2      2      0           W|R     -        -         
//     %%BIT    PDNB01      1      1      0           W|R     -        -         
//     %%BIT    PDNB00      0      0      0           W|R     -        W         
// 
// %REG_NAME  SMPCR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SMPT        7      0      0x18        W|R     -        W         
// 
// %REG_NAME  TSNSMPCR    
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TSNSMPT     7      0      0xF0        W|R     -        W         
// 
// %REG_NAME  EMUCR       
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SVSDIS      7      7      0           W|R     -        W         
// 
// %REG_NAME  SGPRCR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SGPR4       18     16     4           W|R     -        -         
//     %%BIT    SGPR3       14     12     3           W|R     -        -         
//     %%BIT    SGPR2       10     8      2           W|R     -        -         
//     %%BIT    SGPR1       6      4      1           W|R     -        -         
//     %%BIT    SGPR0       2      0      0           W|R     -        W         
// 
// %REG_NAME  TRMCR
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TRMS        31     31     0           W|R     FALSE    -         
//     %%BIT    TRMDGSTBY   27     27     0           W|R     FALSE    -         
//     %%BIT    TRMTSNTUNE  15     14     0           W|R     FALSE    -         
//     %%BIT    TRMTTUNE    13     12     0           W|R     FALSE    -         
//     %%BIT    TRMBTUNE    11     10     0           W|R     FALSE    -         
//     %%BIT    TRMATUNE    9      8      0           W|R     FALSE    -         
//     %%BIT    TRMTSN      7      6      0           R       FALSE    -         
//     %%BIT    TRMT        5      4      0           R       FALSE    -         
//     %%BIT    TRMB        3      2      0           R       FALSE    -         
//     %%BIT    TRMA        1      0      0           R       FALSE    -         
// 
// %REG_NAME  ADTSTRA
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ADTST       7      0      0           W|R     FALSE    -         
// 
// %REG_NAME  ADTSTRB
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    ADVAL       13     0      0           W|R     FALSE    -         
// 
// %REG_NAME  ADTSTRC
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    CKSTP       13     13     0           W|R     FALSE    -         
//     %%BIT    SYNCERR     12     12     0           R       FALSE    -         
//     %%BIT    ADMD8       8      8      0           W|R     FALSE    -         
//     %%BIT    ADMD7       7      7      0           W|R     FALSE    -         
//     %%BIT    ADMD6       6      6      0           W|R     FALSE    -         
//     %%BIT    ADMD5       5      5      0           W|R     FALSE    -         
//     %%BIT    ADMD4       4      4      0           W|R     FALSE    -         
//     %%BIT    ADMD3       3      3      0           R       FALSE    -         
//     %%BIT    ADMD        2      0      0           W|R     FALSE    -         
// 
// %REG_NAME  SGSTCR      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SGSTn       0      0      0           W|R     -        W         
// 
// %REG_NAME  TSNSGSTCR   
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TSNSGST     0      0      0           W|R     -        W         
// 
// %REG_NAME  PWDSGSTCR   
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PWDSGST     0      0      0           W|R     -        W         
// 
// %REG_NAME  SGCR        
//     %%TITLE  name        upper  lower  init        access  support  callback  value
//     %%BIT    SCANMD      5      5      0           W|R     -        -         -
//     %%BIT    ADIE        4      4      0           W|R     -        W         -
//     %%BIT    SCT         3      2      0           W|R     -        -         b00,b01,b10   
//     %%BIT    TRGMD       0      0      0           W|R     -        -         -
// 
// %REG_NAME  TSNSGCR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TSNTRGMD    0      0      0           W|R     -        W         
// 
// %REG_NAME  PWDSGCR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PWDTRGMD    0      0      0           W|R     -        W         
// 
// %REG_NAME  SGSEFCR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    SEFCn       0      0      0           W|R     -        W         
// 
// %REG_NAME  TSNSGSEFCR  
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TSNSEFC     0      0      0           W|R     -        W         
// 
// %REG_NAME  PWDSGSEFCR  
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    PWDSEFC     0      0      0           W|R     -        W         
// 
// %REG_NAME  SGVCSP      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    VCSP        5      0      0           W|R     -        W         
// 
// %REG_NAME  SGVCEP      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    VCEP        5      0      0           W|R     -        W         
// 
// %REG_NAME  SGMCYCR     
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    MCYC        7      0      0           W|R     -        W         
// 
// %REG_NAME  SGTSEL      
//     %%TITLE  name        upper  lower  init        access  support  callback  
//     %%BIT    TxSEL15     15     15     0           W|R     -        -         
//     %%BIT    TxSEL14     14     14     0           W|R     -        -         
//     %%BIT    TxSEL13     13     13     0           W|R     -        -         
//     %%BIT    TxSEL12     12     12     0           W|R     -        -         
//     %%BIT    TxSEL11     11     11     0           W|R     -        -         
//     %%BIT    TxSEL10     10     10     0           W|R     -        -         
//     %%BIT    TxSEL09     9      9      0           W|R     -        -         
//     %%BIT    TxSEL08     8      8      0           W|R     -        -         
//     %%BIT    TxSEL07     7      7      0           W|R     -        -         
//     %%BIT    TxSEL06     6      6      0           W|R     -        -         
//     %%BIT    TxSEL05     5      5      0           W|R     -        -         
//     %%BIT    TxSEL04     4      4      0           W|R     -        -         
//     %%BIT    TxSEL03     3      3      0           W|R     -        -         
//     %%BIT    TxSEL02     2      2      0           W|R     -        -         
//     %%BIT    TxSEL01     1      1      0           W|R     -        -         
//     %%BIT    TxSEL00     0      0      0           W|R     -        W|R         
////////////////////////////////////////////////////////////////////////////////
/// @file sarad113x_regif.h
/// @brief Register IF class of model SARAD113x
/// $Id$
/// $Date$
/// $Revison$
/// $Author$
////////////////////////////////////////////////////////////////////////////////
#ifndef __SARAD113x_REGIF_H__
#define __SARAD113x_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#include <cassert>
#ifndef REGIF_NOT_USE_SYSTEMC
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef CWR_SYSTEMC
#include "scml2.h"
#endif

/// Register IF class of SARAD113x model
class Csarad113x_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;
#ifdef CWR_SYSTEMC
    typedef uint REG_TYPE;
#endif

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index
    enum eRegIndex {
        emNUM_VCR        = 50,
        emNUM_DR         = 25,
        emNUM_DIR        = 50,
        emNUM_ULLMTBR    = 3,
        emNUM_SGSTCR     = 3,
        emNUM_SGCR       = 3,
        emNUM_SGSEFCR    = 3,
        emNUM_SGVCSP     = 3,
        emNUM_SGVCEP     = 3,
        emNUM_SGMCYCR    = 3,
        emNUM_SGTSEL     = 3
    }; ///< Enumeration for register factor index

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel  = channel;
            this-> is_wr    = is_wr;
            this-> size     = size;
            this-> pre_data = pre_data;
            this-> data     = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
#ifdef CWR_SYSTEMC
        scml2::memory<REG_TYPE> *mcwmem;
        scml2::reg<REG_TYPE> *my_cw_p;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false, scml2::memory<REG_TYPE> *_cwmem=NULL) {
            this->my_cw_p = NULL;
            if (_cwmem != NULL) {
                mcwmem = _cwmem;
            } else {
                assert(_prev != NULL && _prev->mcwmem != NULL) ;
                mcwmem = _prev->mcwmem;
            }
            this->my_cw_p = new scml2::reg<REG_TYPE> (_my_p->name(), *mcwmem , _my_p->addr());
#else
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
#endif
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel   = _channel;
            this->length    = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block     = _block;
        }
        ~SRegList() {
#ifdef CWR_SYSTEMC
            delete my_cw_p;
#endif
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;

public:
    Csarad113x_regif(std::string name, uint buswidth);
    ~Csarad113x_regif();

protected:
    vpcl::re_register *VCR       [50];
    vpcl::re_register *TSNVCR    ;
    vpcl::re_register *PWDVCR    ;
    vpcl::re_register *DR        [25];
    vpcl::re_register *PWDTSNDR  ;
    vpcl::re_register *DIR       [50];
    vpcl::re_register *TSNDIR    ;
    vpcl::re_register *PWDDIR    ;
    vpcl::re_register *ADHALTR   ;
    vpcl::re_register *ADCR      ;
    vpcl::re_register *SGSTR     ;
    vpcl::re_register *MPXCURR   ;
    vpcl::re_register *TSNCR     ;
    vpcl::re_register *THSMPSTCR ;
    vpcl::re_register *THCR      ;
    vpcl::re_register *THAHLDSTCR;
    vpcl::re_register *THBHLDSTCR;
    vpcl::re_register *THACR     ;
    vpcl::re_register *THBCR     ;
    vpcl::re_register *THER      ;
    vpcl::re_register *THGSR     ;
    vpcl::re_register *SFTCR     ;
    vpcl::re_register *ULLMTBR   [3];
    vpcl::re_register *ECR       ;
    vpcl::re_register *ULER      ;
    vpcl::re_register *OWER      ;
    vpcl::re_register *DGCTL0    ;
    vpcl::re_register *DGCTL1    ;
    vpcl::re_register *PDCTL1    ;
    vpcl::re_register *PDCTL2    ;
    vpcl::re_register *SMPCR     ;
    vpcl::re_register *TSNSMPCR  ;
    vpcl::re_register *EMUCR     ;
    vpcl::re_register *SGPRCR    ;
    vpcl::re_register *TRMCR     ;
    vpcl::re_register *ADTSTRA   ;
    vpcl::re_register *ADTSTRB   ;
    vpcl::re_register *ADTSTRC   ;
    vpcl::re_register *SGSTCR    [4];
    vpcl::re_register *TSNSGSTCR ;
    vpcl::re_register *PWDSGSTCR ;
    vpcl::re_register *SGCR      [4];
    vpcl::re_register *TSNSGCR   ;
    vpcl::re_register *PWDSGCR   ;
    vpcl::re_register *SGSEFCR   [4];
    vpcl::re_register *TSNSGSEFCR;
    vpcl::re_register *PWDSGSEFCR;
    vpcl::re_register *SGVCSP    [4];
    vpcl::re_register *SGVCEP    [4];
    vpcl::re_register *SGMCYCR   [4];
    vpcl::re_register *SGTSEL    [4];

    #ifdef CWR_SYSTEMC
    scml2::memory<REG_TYPE> cwmem;
    #endif

    uint VCR_MPXE  [50];
    uint VCR_MPXV  [50];
    uint VCR_CNVCLS[50];
    uint VCR_ULS   [50];
    uint VCR_ADIE  [50];
    uint VCR_GCTRL [50];
    uint TSNVCR_ULS;
    uint TSNVCR_TSNGCTRL;
    uint PWDVCR_MPXE;
    uint PWDVCR_MPXV;
    uint PWDVCR_ULS;
    uint PWDVCR_GCTRL;
    uint DR_DR1    [25];
    uint DR_DR0    [25];
    uint PWDTSNDR_PWDDR;
    uint PWDTSNDR_TSNDR;
    uint DIR_MPXE  [50];
    uint DIR_MPXV  [50];
    uint DIR_WFLG  [50];
    uint DIR_ID    [50];
    uint DIR_DR    [50];
    uint TSNDIR_WFLG;
    uint TSNDIR_ID ;
    uint TSNDIR_TSNDR;
    uint PWDDIR_MPXE;
    uint PWDDIR_MPXV;
    uint PWDDIR_WFLG;
    uint PWDDIR_ID ;
    uint PWDDIR_PWDDR;
    uint ADHALTR_HALT;
    uint ADCR_DGON ;
    uint ADCR_TSNSELFDIAG;
    uint ADCR_CRAC ;
    uint ADCR_CTYP ;
    uint ADCR_SUSMTD;
    uint SGSTR_SHACT;
    uint SGSTR_SGACT;
    uint SGSTR_SEF ;
    uint MPXCURR_MPXCUR;
    uint TSNCR_TSNEN;
    uint THSMPSTCR_SMPST;
    uint THCR_ASMPMSK;
    uint THAHLDSTCR_HLDST;
    uint THBHLDSTCR_HLDST;
    uint THACR_HLDCTE;
    uint THACR_HLDTE;
    uint THACR_SGS ;
    uint THBCR_HLDCTE;
    uint THBCR_HLDTE;
    uint THBCR_SGS ;
    uint THER_TH5E ;
    uint THER_TH4E ;
    uint THER_TH3E ;
    uint THER_TH2E ;
    uint THER_TH1E ;
    uint THER_TH0E ;
    uint THGSR_TH5GS;
    uint THGSR_TH4GS;
    uint THGSR_TH3GS;
    uint THGSR_TH2GS;
    uint THGSR_TH1GS;
    uint THGSR_TH0GS;
    uint SFTCR_RDCLRE;
    uint SFTCR_ULEIE;
    uint SFTCR_OWEIE;
    uint ULLMTBR_ULMTB[3];
    uint ULLMTBR_LLMTB[3];
    uint ECR_ULEC  ;
    uint ECR_OWEC  ;
    uint ULER_UE   ;
    uint ULER_LE   ;
    uint ULER_ULSG ;
    uint ULER_MPXE ;
    uint ULER_MPXV ;
    uint ULER_ULE  ;
    uint ULER_ULECAP;
    uint OWER_OWE  ;
    uint OWER_OWECAP;
    uint DGCTL0_PSEL2;
    uint DGCTL0_PSEL1;
    uint DGCTL0_PSEL0;
    uint DGCTL1_CDG15;
    uint DGCTL1_CDG14;
    uint DGCTL1_CDG13;
    uint DGCTL1_CDG12;
    uint DGCTL1_CDG11;
    uint DGCTL1_CDG10;
    uint DGCTL1_CDG09;
    uint DGCTL1_CDG08;
    uint DGCTL1_CDG07;
    uint DGCTL1_CDG06;
    uint DGCTL1_CDG05;
    uint DGCTL1_CDG04;
    uint DGCTL1_CDG03;
    uint DGCTL1_CDG02;
    uint DGCTL1_CDG01;
    uint DGCTL1_CDG00;
    uint PDCTL1_PDNA15;
    uint PDCTL1_PDNA14;
    uint PDCTL1_PDNA13;
    uint PDCTL1_PDNA12;
    uint PDCTL1_PDNA11;
    uint PDCTL1_PDNA10;
    uint PDCTL1_PDNA09;
    uint PDCTL1_PDNA08;
    uint PDCTL1_PDNA07;
    uint PDCTL1_PDNA06;
    uint PDCTL1_PDNA05;
    uint PDCTL1_PDNA04;
    uint PDCTL1_PDNA03;
    uint PDCTL1_PDNA02;
    uint PDCTL1_PDNA01;
    uint PDCTL1_PDNA00;
    uint PDCTL2_PDNB19;
    uint PDCTL2_PDNB18;
    uint PDCTL2_PDNB17;
    uint PDCTL2_PDNB16;
    uint PDCTL2_PDNB15;
    uint PDCTL2_PDNB14;
    uint PDCTL2_PDNB13;
    uint PDCTL2_PDNB12;
    uint PDCTL2_PDNB11;
    uint PDCTL2_PDNB10;
    uint PDCTL2_PDNB09;
    uint PDCTL2_PDNB08;
    uint PDCTL2_PDNB07;
    uint PDCTL2_PDNB06;
    uint PDCTL2_PDNB05;
    uint PDCTL2_PDNB04;
    uint PDCTL2_PDNB03;
    uint PDCTL2_PDNB02;
    uint PDCTL2_PDNB01;
    uint PDCTL2_PDNB00;
    uint SMPCR_SMPT;
    uint TSNSMPCR_TSNSMPT;
    uint EMUCR_SVSDIS;
    uint SGPRCR_SGPR4;
    uint SGPRCR_SGPR3;
    uint SGPRCR_SGPR2;
    uint SGPRCR_SGPR1;
    uint SGPRCR_SGPR0;
    uint TRMCR_TRMS;
    uint TRMCR_TRMDGSTBY;
    uint TRMCR_TRMTSNTUNE;
    uint TRMCR_TRMTTUNE;
    uint TRMCR_TRMBTUNE;
    uint TRMCR_TRMATUNE;
    uint TRMCR_TRMTSN;
    uint TRMCR_TRMT;
    uint TRMCR_TRMB;
    uint TRMCR_TRMA;
    uint ADTSTRA_ADTST;
    uint ADTSTRB_ADVAL;
    uint ADTSTRC_CKSTP;
    uint ADTSTRC_SYNCERR;
    uint ADTSTRC_ADMD8;
    uint ADTSTRC_ADMD7;
    uint ADTSTRC_ADMD6;
    uint ADTSTRC_ADMD5;
    uint ADTSTRC_ADMD4;
    uint ADTSTRC_ADMD3;
    uint ADTSTRC_ADMD;
    uint SGSTCR_SGSTn[4];
    uint TSNSGSTCR_TSNSGST;
    uint PWDSGSTCR_PWDSGST;
    uint SGCR_SCANMD[4];
    uint SGCR_ADIE [4];
    uint SGCR_SCT  [4];
    uint SGCR_TRGMD[4];
    uint TSNSGCR_TSNTRGMD;
    uint PWDSGCR_PWDTRGMD;
    uint SGSEFCR_SEFCn[4];
    uint TSNSGSEFCR_TSNSEFC;
    uint PWDSGSEFCR_PWDSEFC;
    uint SGVCSP_VCSP[4];
    uint SGVCEP_VCEP[4];
    uint SGMCYCR_MCYC[4];
    uint SGTSEL_TxSEL15[4];
    uint SGTSEL_TxSEL14[4];
    uint SGTSEL_TxSEL13[4];
    uint SGTSEL_TxSEL12[4];
    uint SGTSEL_TxSEL11[4];
    uint SGTSEL_TxSEL10[4];
    uint SGTSEL_TxSEL09[4];
    uint SGTSEL_TxSEL08[4];
    uint SGTSEL_TxSEL07[4];
    uint SGTSEL_TxSEL06[4];
    uint SGTSEL_TxSEL05[4];
    uint SGTSEL_TxSEL04[4];
    uint SGTSEL_TxSEL03[4];
    uint SGTSEL_TxSEL02[4];
    uint SGTSEL_TxSEL01[4];
    uint SGTSEL_TxSEL00[4];

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_VCR_GCTRL(RegCBstr str) = 0;
    virtual void cb_TSNVCR_ULS(RegCBstr str) = 0;
    virtual void cb_DR_DR0(RegCBstr str) = 0;
    virtual void cb_PWDTSNDR_TSNDR(RegCBstr str) = 0;
    virtual void cb_DIR_DR(RegCBstr str) = 0;
    virtual void cb_TSNDIR_TSNDR(RegCBstr str) = 0;
    virtual void cb_PWDDIR_PWDDR(RegCBstr str) = 0;
    virtual void cb_ADHALTR_HALT(RegCBstr str) = 0;
    virtual void cb_ADCR_SUSMTD(RegCBstr str) = 0;
    virtual void cb_TSNCR_TSNEN(RegCBstr str) = 0;
    virtual void cb_THSMPSTCR_SMPST(RegCBstr str) = 0;
    virtual void cb_THCR_ASMPMSK(RegCBstr str) = 0;
    virtual void cb_THAHLDSTCR_HLDST(RegCBstr str) = 0;
    virtual void cb_THBHLDSTCR_HLDST(RegCBstr str) = 0;
    virtual void cb_THACR_SGS(RegCBstr str) = 0;
    virtual void cb_THBCR_SGS(RegCBstr str) = 0;
    virtual void cb_THER_TH0E(RegCBstr str) = 0;
    virtual void cb_THGSR_TH0GS(RegCBstr str) = 0;
    virtual void cb_SFTCR_OWEIE(RegCBstr str) = 0;
    virtual void cb_ULLMTBR_ULMTB(RegCBstr str) = 0;
    virtual void cb_ECR_ULEC(RegCBstr str) = 0;
    virtual void cb_DGCTL0_PSEL0(RegCBstr str) = 0;
    virtual void cb_DGCTL1_CDG00(RegCBstr str) = 0;
    virtual void cb_PDCTL1_PDNA00(RegCBstr str) = 0;
    virtual void cb_PDCTL2_PDNB00(RegCBstr str) = 0;
    virtual void cb_SMPCR_SMPT(RegCBstr str) = 0;
    virtual void cb_TSNSMPCR_TSNSMPT(RegCBstr str) = 0;
    virtual void cb_EMUCR_SVSDIS(RegCBstr str) = 0;
    virtual void cb_SGPRCR_SGPR0(RegCBstr str) = 0;
    virtual void cb_SGSTCR_SGSTn(RegCBstr str) = 0;
    virtual void cb_TSNSGSTCR_TSNSGST(RegCBstr str) = 0;
    virtual void cb_PWDSGSTCR_PWDSGST(RegCBstr str) = 0;
    virtual void cb_SGCR_ADIE(RegCBstr str) = 0;
    virtual void cb_TSNSGCR_TSNTRGMD(RegCBstr str) = 0;
    virtual void cb_PWDSGCR_PWDTRGMD(RegCBstr str) = 0;
    virtual void cb_SGSEFCR_SEFCn(RegCBstr str) = 0;
    virtual void cb_TSNSGSEFCR_TSNSEFC(RegCBstr str) = 0;
    virtual void cb_PWDSGSEFCR_PWDSEFC(RegCBstr str) = 0;
    virtual void cb_SGVCSP_VCSP(RegCBstr str) = 0;
    virtual void cb_SGVCEP_VCEP(RegCBstr str) = 0;
    virtual void cb_SGMCYCR_MCYC(RegCBstr str) = 0;
    virtual void cb_SGTSEL_TxSEL00(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    bool mAPBAccessMode;
    bool mDumpBitInfo;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Csarad113x_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Csarad113x_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;
    uint mFactorIndexSGSTCR[emNUM_SGSTCR];
    uint mFactorIndexSGCR[emNUM_SGCR];
    uint mFactorIndexSGSEFCR[emNUM_SGSEFCR];
    uint mFactorIndexSGVCSP[emNUM_SGVCSP];
    uint mFactorIndexSGVCEP[emNUM_SGVCEP];
    uint mFactorIndexSGMCYCR[emNUM_SGMCYCR];
    uint mFactorIndexSGTSEL[emNUM_SGTSEL];

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr, bool is_wr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip, bool is_data, uint acc_size);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);
    bool ChkAddrWithFactorIndex(cuint num, cuint factor_index[], cuint len);

    #ifdef CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    virtual void cw_set_callback_reg(scml2::reg<REG_TYPE> * reg, int offset);
    void cw_set_all_callback_reg(void);
    #endif
};
#endif //__SARAD113x_REG_DEF_H__
