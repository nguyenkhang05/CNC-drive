// -----------------------------------------------------------------------------
// $Id$
//
// Copyright(c) 2010-2014 Renesas Electronics Corporation
// Copyright(c) 2010-2014 Renesas Design Vietnam Co., Ltd.
// RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// This program must be used solely for the purpose for which
// it was furnished by Renesas Electronics Corporation. No part of this
// program may be reproduced or disclosed to others, in any
// form, without the prior written permission of Renesas Electronics
// Corporation.
// -----------------------------------------------------------------------------
// This file is generated by Register I/F generator
//    gen_regif.py
//    gen_regif_class.py
//    regif_h.skl
//
// Input file : Input/adc_info.txt
////////////////////////////////////////////////////////////////////////////////
// # -----------------------------------------------------------------------------
// # $Id$
// #
// # Copyright(c) 2012-2015 Renesas System Design Co., Ltd.
// # Copyright(c) 2012-2015 Renesas Design Vietnam Co., Ltd.
// # RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY.
// # This program must be used solely for the purpose for which
// # it was furnished by Renesas Electronics Corporation. No part of this
// # program may be reproduced or disclosed to others, in any
// # form, without the prior written permission of Renesas Electronics
// # Corporation.
// # -----------------------------------------------------------------------------
// 
// %MODULE adc
//     #              name     offset_size  
//     %%REG_INSTANCE reg_def  11           
// 
// %REG_CHANNEL   reg_def
//   %%TITLE name         reg_name     wsize     rsize     length  offset  factor_start  factor_end  factor_index  factor_step  init         access  support  callback
// 
//   %%REG   VCR          VCR          8|16|32   8|16|32   32      0x000      0            47            -            0x4        0           W|R      TRUE      -
//   %%REG   DR           DR           8|16|32   8|16|32   32      0x100      0            23            -            0x4        0           R        TRUE      -
//   %%REG   DIR          DIR          8|16|32   8|16|32   32      0x200      0            47            -            0x4        0           R        TRUE      -
//   %%REG   ADHALTR      ADHALTR      8|16|32   8|16|32   8       0x380      -            -             -            -          0           W|R      TRUE      -
//   %%REG   ADCR1        ADCR1        8|16|32   8|16|32   8       0x384      -            -             -            -          0           D        TRUE      -
//   %%REG   MPXCURCR     MPXCURCR     8|16      8|16      8       0x388      -            -             -            -          0           W|R      TRUE      -
//   %%REG   MPXINTER     MPXINTER     8|16      8|16      8       0x38A      -            -             -            -          0           D        TRUE      -
//   %%REG   MPXCURR      MPXCURR      8|16|32   8|16|32   32      0x38C      -            -             -            -          0           R        TRUE      -
//   %%REG   MPXOWR       MPXOWR       8|16|32   8|16|32   8       0x390      -            -             -            -          0           D        TRUE      -
//   %%REG   MPXCMDR      MPXCMDR      8|16|32   8|16|32   8       0x394      -            -             -            -          0           W|R      TRUE      -
//   %%REG   ADCR2        ADCR2        8|16|32   8|16|32   8       0x398      -            -             -            -          0           D        TRUE      -
//   %%REG   DFASENTSGER  DFASENTSGER  8|16|32   8|16|32   16      0x39C      -            -             -            -          0           D        TRUE      -
//   %%REG   ADENDP       ADENDP       8|16|32   8|16|32   8       0x3A0      0            4             -            0x4        0           D        TRUE      -
// 
//   %%REG   THSMPSTCR    THSMPSTCR    8|16|32   8|16|32   8       0x400      -            -             -            -          0           D        TRUE      -
//   %%REG   THSTPCR      THSTPCR      8|16|32   8|16|32   8       0x404      -            -             -            -          0           D        TRUE      -
//   %%REG   THCR         THCR         8|16|32   8|16|32   8       0x408      -            -             -            -          0           D        TRUE      -
//   %%REG   THAHLDSTCR   THAHLDSTCR   8|16|32   8|16|32   8       0x410      -            -             -            -          0           D        TRUE      -
//   %%REG   THBHLDSTCR   THBHLDSTCR   8|16|32   8|16|32   8       0x414      -            -             -            -          0           D        TRUE      -
//   %%REG   THACR        THACR        8|16|32   8|16|32   8       0x420      -            -             -            -          0           D        TRUE      -
//   %%REG   THBCR        THBCR        8|16|32   8|16|32   8       0x424      -            -             -            -          0           D        TRUE      -
//   %%REG   THER         THER         8|16|32   8|16|32   8       0x430      -            -             -            -          0           D        TRUE      -
//   %%REG   THGSR        THGSR        8|16|32   8|16|32   16      0x434      -            -             -            -          0           D        TRUE      -
//   %%REG   THOMSR       THOMSR       32        8|16|32   32      0x440      -            -             -            -          0           D        FALSE     -
// 
//   %%REG   SFTCR        SFTCR        8|16|32   8|16|32   8       0x3C0      -            -             -            -          0           D        TRUE      -
//   %%REG   TDCR         TDCR         8|16|32   8|16|32   8       0x3C4      -            -             -            -          0           D        TRUE      -
//   %%REG   ODCR         ODCR         8|16|32   8|16|32   32      0x3C8      -            -             -            -          0           D        TRUE      -
//   %%REG   ULLMTBR      ULLMTBR      8|16|32   8|16|32   32      0x3CC      0            2             -            0x4        0x7FFE0000  D        TRUE      -
//   %%REG   ECR          ECR          8|16|32   8|16|32   8       0x3D8      -            -             -            -          0           W|R      TRUE      -
//   %%REG   ULER         ULER         8|16|32   8|16|32   8       0x3DC      -            -             -            -          0           D        TRUE      -
//   %%REG   OWER         OWER         8|16|32   8|16|32   8       0x3E0      -            -             -            -          0           R        TRUE      -
//   %%REG   PER          PER          8|16|32   8|16|32   8       0x3E4      -            -             -            -          0           R        TRUE      -
//   %%REG   IDER         IDER         8|16|32   8|16|32   8       0x3E8      -            -             -            -          0           R        TRUE      -
//   %%REG   SYNCER       SYNCER       8|16|32   8|16|32   8       0x3EC      -            -             -            -          0           R        FALSE     -
// 
//   %%REG   SMPCR        SMPCR        8|16|32   8|16|32   16      0x340      -            -             -            -          0           D        TRUE      - 
//   %%REG   TRMCR        TRMCR        8|16|32   8|16|32   16      0x360      -            -             -            -          0           W|R      FALSE     - 
//   %%REG   ADTSTRA      ADTSTRA      8|16|32   8|16|32   16      0x364      -            -             -            -          0           W|R      FALSE     - 
//   %%REG   ADTSTRB      ADTSTRB      8|16|32   8|16|32   16      0x368      -            -             -            -          0           W|R      FALSE     - 
//   %%REG   ADTSTRC      ADTSTRC      8|16|32   8|16|32   16      0x36C      -            -             -            -          0           W|R      FALSE     - 
// 
//   %%REG   SGSTCR       SGSTCR       8|16|32   8|16|32   8       0x480      0            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGSTPCR      SGSTPCR      8|16|32   8|16|32   8       0x484      0            4             -           0x80        0           D        TRUE      -
//   %%REG   ADTSTCR      ADTSTCR      8|16|32   8|16|32   8       0x608      3            4             -           0x80        0           W|R      TRUE      -
//   %%REG   ADTENDCR     ADTENDCR     8|16|32   8|16|32   8       0x60C      3            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGCR         SGCR         8|16|32   8|16|32   8       0x490      0            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGVCSP       SGVCSP       8|16|32   8|16|32   8       0x494      0            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGVCEP       SGVCEP       8|16|32   8|16|32   8       0x498      0            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGMCYCR      SGMCYCR      8|16|32   8|16|32   8       0x49C      0            4             -           0x80        0           W|R      TRUE      -
//   %%REG   SGVCPR       SGVCPR       8|16      8|16      16      0x4A0      0            4             -           0x80        0           D        TRUE      -
//   %%REG   SGVCOWR      SGVCOWR      8|16      8|16      16      0x4B4      0            4             -           0x80        0           D        TRUE      -
//   %%REG   SGSR         SGSR         8|16|32   8|16|32   8       0x4A4      0            4             -           0x80        0           R        TRUE      -
//   %%REG   ADTIPR       ADTIPR       8|16|32   8|16|32   32      0x628      3            4             -           0x80        0           W|R      TRUE      -
//   %%REG   ADTPRR       ADTPRR       8|16|32   8|16|32   32      0x62C      3            4             -           0x80        0x001FFFFF  W|R      TRUE      -
//   %%REG   ULLMSR       ULLMSR       8|16|32   8|16|32   8       0x4B0      0            4             -           0x80        0           D        TRUE      -
//   %%REG   VCULLMTBR    VCULLMTBR    32        8|16|32   32      0x700      0            6             -            0x4        0           D        TRUE      -
//   %%REG   VCLMINTER1   VCLMINTER1   8|16|32   8|16|32   32      0x730      -            -             -            -          0           D        TRUE      -
//   %%REG   VCLMINTER2   VCLMINTER2   8|16|32   8|16|32   32      0x734      -            -             -            -          0           D        TRUE      -
//   %%REG   VCLMSR1      VCLMSR1      8|16|32   8|16|32   32      0x738      -            -             -            -          0           D        TRUE      -
//   %%REG   VCLMSR2      VCLMSR2      8|16|32   8|16|32   32      0x73C      -            -             -            -          0           D        TRUE      -
//   %%REG   VCLMSCR1     VCLMSCR1     8|16|32   8|16|32   32      0x740      -            -             -            -          0           D        TRUE      -
//   %%REG   VCLMSCR2     VCLMSCR2     8|16|32   8|16|32   32      0x744      -            -             -            -          0           D        TRUE      -
//   %%REG   ADOPDIG      ADOPDIG      8|16|32   8|16|32   32      0x748      -            -             -            -          0           W|R      TRUE      -
// 
// %REG_NAME  VCR
//    %%TITLE     name       upper   lower     init    access      support     callback    value    
//    %%BIT       VCULME     31      31        0       W|R          -            -           -
//    %%BIT       VCLLME     30      30        0       W|R          -            -           -
//    %%BIT       VCULLMTBS  26      24        0       W|R          -            -           -
//    %%BIT       PUE        17      17        0       W|R          -            -           -
//    %%BIT       PDE        16      16        0       W|R          -            -           -  
//    %%BIT       CNVCLS     15      13        0       W|R          -            -           "b000,b001,b011,b100,b101,b110"
//    %%BIT       DFENT      12      12        0       W|R          -            -           - 
//    %%BIT       DFTAG      11      8         0       W|R          -            -           - 
//    %%BIT       ADIE       7       7         0       W|R          -            -           - 
//    %%BIT       GCTRL      5       0         0       W|R          -            W           - 
// 
// %REG_NAME  DR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       DR1        31      16        0       R           -           -
//    %%BIT       DR0        15      0         0       R           -           -
// 
// %REG_NAME  DIR       
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       IDEF        26      26       0       R           -           -         
//    %%BIT       WFLG        25      25       0       R           -           -         
//    %%BIT       PRTY        24      24       0       R           -           -
//    %%BIT       ID          20      16       0       R           -           -
//    %%BIT       DRn         15      0        0       R           -           -
// 
// %REG_NAME  ADHALTR
//    %%TITLE     name       upper   lower     init    access      support     callback   
//    %%BIT       HALT        0        0        0      W|R         -            W
// 
// %REG_NAME  ADCR1
//    %%TITLE     name       upper   lower     init    access      support     callback    value    
//    %%BIT       SUSMTD      1        0        0      D          -            W              "b00,b01,b10"
// 
// %REG_NAME  MPXCURCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       MSKCFMT     3        0        0      W|R         -           W
// 
// %REG_NAME  MPXINTER
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ADMPXIE     0        0        0      D           -           W
// 
// %REG_NAME  MPXCURR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       MSKC       31      16        0       R           -           -
//    %%BIT       MPXCMD     15      8         0       R           -           -
//    %%BIT       MPXCUR     4       0         0       R           -           -
// 
// %REG_NAME  MPXOWR
//    %%TITLE     name       upper   lower     init    access      support     callback    value
//    %%BIT       MPXOW      3       0         0       D           -           W           "b0000,b0001,b0010,b0011,b0100,b0101,b0110,b0111,b1000,b1001,b1010"
// 
// %REG_NAME  MPXCMDR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       MPXCMD     7       0         0       W|R         -           W
// 
// %REG_NAME  ADCR2
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       DFMT       5       4         0       D           -           W
//    %%BIT       ADDNT      0       0         0       D           -           -
// 
// %REG_NAME  DFASENTSGER
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       DFENTSG4E  12      12        0       D           FALSE       W
//    %%BIT       DFENTSG3E  11      11        0       D           FALSE       -
//    %%BIT       DFENTSG2E  10      10        0       D           FALSE       -
//    %%BIT       DFENTSG1E  9       9         0       D           FALSE       -
//    %%BIT       DFENTSG0E  8       8         0       D           FALSE       -
//    %%BIT       ASENTSG4E  4       4         0       D           TRUE        -
//    %%BIT       ASENTSG3E  3       3         0       D           TRUE        -
//    %%BIT       ASENTSG2E  2       2         0       D           TRUE        -
//    %%BIT       ASENTSG1E  1       1         0       D           TRUE        -
//    %%BIT       ASENTSG0E  0       0         0       D           TRUE        -
// 
// %REG_NAME  ADENDP
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ENDP       5       0         0       D           -           W
// 
// %REG_NAME  THSMPSTCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SMPST       0       0        0       D           TRUE        W
// 
// %REG_NAME  THSTPCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       THSTP        0       0        0      D           TRUE        W
// 
// %REG_NAME  THCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ASMPMSK      0       0        0      D           TRUE        W
// 
// %REG_NAME  THAHLDSTCR  
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       HLDST      0       0        0        D           TRUE        W
// 
// %REG_NAME  THBHLDSTCR  
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       HLDST      0       0        0        D           TRUE        W
// 
// %REG_NAME  THACR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       HLDCTE     5       5         0       D           TRUE        -
//    %%BIT       HLDTE      4       4         0       D           TRUE        -
//    %%BIT       SGS        1       0         0       D           TRUE        W
// 
// %REG_NAME  THBCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       HLDCTE     5       5         0       D           TRUE        -
//    %%BIT       HLDTE      4       4         0       D           TRUE        -
//    %%BIT       SGS        1       0         0       D           TRUE        W
// 
// %REG_NAME  THER
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       TH5E       5       5         0       D           TRUE        -
//    %%BIT       TH4E       4       4         0       D           TRUE        -
//    %%BIT       TH3E       3       3         0       D           TRUE        -
//    %%BIT       TH2E       2       2         0       D           TRUE        -
//    %%BIT       TH1E       1       1         0       D           TRUE        -
//    %%BIT       TH0E       0       0         0       D           TRUE        W
// 
// %REG_NAME  THGSR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       TH5GS       10      10        0      D           TRUE        -
//    %%BIT       TH4GS       8       8         0      D           TRUE        -
//    %%BIT       TH3GS       6       6         0      D           TRUE        -
//    %%BIT       TH2GS       4       4         0      D           TRUE        -
//    %%BIT       TH1GS       2       2         0      D           TRUE        -
//    %%BIT       TH0GS       0       0         0      D           TRUE        W
// 
// %REG_NAME  THOMSR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       KEY         31      16        0      D           FALSE       -
//    %%BIT       THOMS       0       0         0      D           FALSE       -
// 
// %REG_NAME  SFTCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SYNCEIE    5       5         0       D           FALSE       -
//    %%BIT       RDCLRE     4       4         0       D           -           -
//    %%BIT       ULEIE      3       3         0       D           -           W
//    %%BIT       OWEIE      2       2         0       D           -           -
//    %%BIT       PEIE       1       1         0       D           -           -
//    %%BIT       IDEIE      0       0         0       D           -           -
// 
// %REG_NAME  TDCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       TDE        7        7        0       D           -           W
//    %%BIT       TDLV       1        0        0       D           -           - 
// 
// %REG_NAME  ODCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ODDE       31      31        0       D           -           W
//    %%BIT       DSCE       15      15        0       D           FALSE       -
//    %%BIT       ODE        7       7         0       D           FALSE       -
//    %%BIT       ODPW       5       0         0       D           FALSE       -
// 
// %REG_NAME  ULLMTBR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ULMTB      31      16        32766   D           -           W
//    %%BIT       LLMTB      15      0         0       D           -           -
// 
// %REG_NAME  ECR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SYNCEC     5        5        0       W|R         FALSE       -
//    %%BIT       ULEC       3        3        0       W|R         -           W
//    %%BIT       OWEC       2        2        0       W|R         -           -
//    %%BIT       PEC        1        1        0       W|R         -           -
//    %%BIT       IDEC       0        0        0       W|R         -           -
// 
// %REG_NAME  ULER      
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ULE        7       7         0       D           -           -
//    %%BIT       ULECAP     5       0         0       D           -           -
// 
// %REG_NAME  OWER      
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       OWE        7       7         0       R           -           -
//    %%BIT       OWECAP     5       0         0       R           -           -
// 
// %REG_NAME  PER       
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT        PE        7       7         0       R           -           -
//    %%BIT        PECAP     5       0         0       R           -           -
// 
// %REG_NAME  IDER      
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       IDE         7       7        0       R           -           -
//    %%BIT       IDECAP      5       0        0       R           -           -
// 
// %REG_NAME  SYNCER
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SYNCE       7       7        0       R           FALSE        -
// 
// %REG_NAME SMPCR   
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       BUFAMPD    15      15        0       D            FALSE       -
//    %%BIT       SMPT13_14  14      13        0       D            -           -
//    %%BIT       SMPTS      12      12        0       D            -           -
//    %%BIT       SMPT8_11   11      8         0       D            -           -
//    %%BIT       SMPT       7       0         0       D            -           W
// 
// %REG_NAME TRMCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       TRMS       15      15        0       W|R            FALSE         -
//    %%BIT       TRMTTUNE   13      12        0       W|R            FALSE         -
//    %%BIT       TRMBTUNE   11      10        0       W|R            FALSE         -
//    %%BIT       TRMATUNE   9       8         0       W|R            FALSE         -
//    %%BIT       TRMT       5       4         0       R              FALSE         -
//    %%BIT       TRMB       3       2         0       R              FALSE         -
//    %%BIT       TRMA       1       0         0       R              FALSE         -
// 
// %REG_NAME ADTSTRA 
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ADTST      8       0        0        W|R            FALSE         -
//    
// %REG_NAME ADTSTRB 
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ADVAL      13      0        0        W|R            FALSE         -
// 
// %REG_NAME ADTSTRC 
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       CKSTP      13      13        0       W|R           FALSE         -
//    %%BIT       ADMD       8       0         0       W|R           FALSE         -
// 
// %REG_NAME SGSTCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SGST       0       0         0       W|R         -           W
// 
// %REG_NAME SGSTPCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       SGSTP       0       0         0      D           -           W
// 
// %REG_NAME  ADTSTCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ADTST      0       0         0       W|R         -           W
// 
// %REG_NAME  ADTENDCR  
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       ADTEND     0       0         0       W|R         -           W
// 
// %REG_NAME  SGCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT      ADTSTARTE   7        7          0       W|R           -           -
//    %%BIT      ADSTARTE    6        6          0       W|R           -           -
//    %%BIT      SCANMD      5        5          0       W|R           -           -
//    %%BIT      ADIE        4        4          0       W|R           -           W
//    %%BIT      TRGMD       1        0          0       W|R           -           -
// 
// %REG_NAME  SGVCSP
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       VCSP       5       0           0       W|R           -           W
// 
// %REG_NAME  SGVCEP
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT      VCEP        5       0           0       W|R           -           W
// 
// %REG_NAME  SGMCYCR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       MCYC       7       0           0       W|R          -           W
// 
// %REG_NAME  SGVCPR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       VCEP       13      8           0       D            -           -
//    %%BIT       VCSP       5       0           0       D            -           W
// 
// %REG_NAME  SGVCOWR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT       VCOW       11      0           0       D            -           W
// 
// %REG_NAME  SGSR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT      ADTACT      2       2           0       R           -           -
//    %%BIT      SGACT       1       1           0       R           -           -
// 
// %REG_NAME  ADTIPR
//    %%TITLE     name       upper   lower     init    access      support     callback    
//    %%BIT      ADTIP       20      0           0       W|R           -           W
// 
// %REG_NAME  ADTPRR
//     %%TITLE     name       upper   lower     init    access      support     callback    
//     %%BIT      ADTPR        20     0         2097151  W|R           -           W
// 
// %REG_NAME  ULLMSR
//     %%TITLE     name       upper   lower     init    access      support     callback    
//     %%BIT      ULS          1       0         0       D             -           W
// 
// %REG_NAME  VCULLMTBR
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       VCULMTB    31      16         32766   D           -           W
//    %%BIT       VCLLMTB    15      0          0       D           -           -
// 
// %REG_NAME  VCLMINTER1
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       ADUL31IE   31      31         0       W|R         -           -       
//    %%BIT       ADUL30IE   30      30         0       W|R         -           -
//    %%BIT       ADUL29IE   29      29         0       W|R         -           -
//    %%BIT       ADUL28IE   28      28         0       W|R         -           -
//    %%BIT       ADUL27IE   27      27         0       W|R         -           -
//    %%BIT       ADUL26IE   26      26         0       W|R         -           -
//    %%BIT       ADUL25IE   25      25         0       W|R         -           -
//    %%BIT       ADUL24IE   24      24         0       W|R         -           -
//    %%BIT       ADUL23IE   23      23         0       W|R         -           -
//    %%BIT       ADUL22IE   22      22         0       W|R         -           -
//    %%BIT       ADUL21IE   21      21         0       W|R         -           -
//    %%BIT       ADUL20IE   20      20         0       W|R         -           -
//    %%BIT       ADUL19IE   19      19         0       W|R         -           -
//    %%BIT       ADUL18IE   18      18         0       W|R         -           -
//    %%BIT       ADUL17IE   17      17         0       W|R         -           -
//    %%BIT       ADUL16IE   16      16         0       W|R         -           -
//    %%BIT       ADUL15IE   15      15         0       W|R         -           -
//    %%BIT       ADUL14IE   14      14         0       W|R         -           -
//    %%BIT       ADUL13IE   13      13         0       W|R         -           -
//    %%BIT       ADUL12IE   12      12         0       W|R         -           -
//    %%BIT       ADUL11IE   11      11         0       W|R         -           -
//    %%BIT       ADUL10IE   10      10         0       W|R         -           -
//    %%BIT       ADUL09IE   9       9          0       W|R         -           -
//    %%BIT       ADUL08IE   8       8          0       W|R         -           -
//    %%BIT       ADUL07IE   7       7          0       W|R         -           -
//    %%BIT       ADUL06IE   6       6          0       W|R         -           -
//    %%BIT       ADUL05IE   5       5          0       W|R         -           -
//    %%BIT       ADUL04IE   4       4          0       W|R         -           -
//    %%BIT       ADUL03IE   3       3          0       W|R         -           -
//    %%BIT       ADUL02IE   2       2          0       W|R         -           -
//    %%BIT       ADUL01IE   1       1          0       W|R         -           -
//    %%BIT       ADUL00IE   0       0          0       W|R         -           W
// 
// %REG_NAME  VCLMINTER2
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       ADUL47IE   15      15         0       W|R         -           -
//    %%BIT       ADUL46IE   14      14         0       W|R         -           -
//    %%BIT       ADUL45IE   13      13         0       W|R         -           -
//    %%BIT       ADUL44IE   12      12         0       W|R         -           -
//    %%BIT       ADUL43IE   11      11         0       W|R         -           -
//    %%BIT       ADUL42IE   10      10         0       W|R         -           -
//    %%BIT       ADUL41IE   9       9          0       W|R         -           -
//    %%BIT       ADUL40IE   8       8          0       W|R         -           -
//    %%BIT       ADUL39IE   7       7          0       W|R         -           -
//    %%BIT       ADUL38IE   6       6          0       W|R         -           -
//    %%BIT       ADUL37IE   5       5          0       W|R         -           -
//    %%BIT       ADUL36IE   4       4          0       W|R         -           -
//    %%BIT       ADUL35IE   3       3          0       W|R         -           -
//    %%BIT       ADUL34IE   2       2          0       W|R         -           -
//    %%BIT       ADUL33IE   1       1          0       W|R         -           -
//    %%BIT       ADUL32IE   0       0          0       W|R         -           W
// 
// %REG_NAME  VCLMSR1
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       VC31LMS    31      31         0       D           -           -       
//    %%BIT       VC30LMS    30      30         0       D           -           -
//    %%BIT       VC29LMS    29      29         0       D           -           -
//    %%BIT       VC28LMS    28      28         0       D           -           -
//    %%BIT       VC27LMS    27      27         0       D           -           -
//    %%BIT       VC26LMS    26      26         0       D           -           -
//    %%BIT       VC25LMS    25      25         0       D           -           -
//    %%BIT       VC24LMS    24      24         0       D           -           -
//    %%BIT       VC23LMS    23      23         0       D           -           -
//    %%BIT       VC22LMS    22      22         0       D           -           -
//    %%BIT       VC21LMS    21      21         0       D           -           -
//    %%BIT       VC20LMS    20      20         0       D           -           -
//    %%BIT       VC19LMS    19      19         0       D           -           -
//    %%BIT       VC18LMS    18      18         0       D           -           -
//    %%BIT       VC17LMS    17      17         0       D           -           -
//    %%BIT       VC16LMS    16      16         0       D           -           -
//    %%BIT       VC15LMS    15      15         0       D           -           -
//    %%BIT       VC14LMS    14      14         0       D           -           -
//    %%BIT       VC13LMS    13      13         0       D           -           -
//    %%BIT       VC12LMS    12      12         0       D           -           -
//    %%BIT       VC11LMS    11      11         0       D           -           -
//    %%BIT       VC10LMS    10      10         0       D           -           -
//    %%BIT       VC09LMS    9       9          0       D           -           -
//    %%BIT       VC08LMS    8       8          0       D           -           -
//    %%BIT       VC07LMS    7       7          0       D           -           -
//    %%BIT       VC06LMS    6       6          0       D           -           -
//    %%BIT       VC05LMS    5       5          0       D           -           -
//    %%BIT       VC04LMS    4       4          0       D           -           -
//    %%BIT       VC03LMS    3       3          0       D           -           -
//    %%BIT       VC02LMS    2       2          0       D           -           -
//    %%BIT       VC01LMS    1       1          0       D           -           -
//    %%BIT       VC00LMS    0       0          0       D           -           -
// 
// %REG_NAME  VCLMSR2
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       VC47LMS    15      15         0       D           -           -
//    %%BIT       VC46LMS    14      14         0       D           -           -
//    %%BIT       VC45LMS    13      13         0       D           -           -
//    %%BIT       VC44LMS    12      12         0       D           -           -
//    %%BIT       VC43LMS    11      11         0       D           -           -
//    %%BIT       VC42LMS    10      10         0       D           -           -
//    %%BIT       VC41LMS    9       9          0       D           -           -
//    %%BIT       VC40LMS    8       8          0       D           -           -
//    %%BIT       VC39LMS    7       7          0       D           -           -
//    %%BIT       VC38LMS    6       6          0       D           -           -
//    %%BIT       VC37LMS    5       5          0       D           -           -
//    %%BIT       VC36LMS    4       4          0       D           -           -
//    %%BIT       VC35LMS    3       3          0       D           -           -
//    %%BIT       VC34LMS    2       2          0       D           -           -
//    %%BIT       VC33LMS    1       1          0       D           -           -
//    %%BIT       VC32LMS    0       0          0       D           -           -
// 
// %REG_NAME  VCLMSCR1
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       VC31LMSC   31      31         0       D           -           -       
//    %%BIT       VC30LMSC   30      30         0       D           -           -
//    %%BIT       VC29LMSC   29      29         0       D           -           -
//    %%BIT       VC28LMSC   28      28         0       D           -           -
//    %%BIT       VC27LMSC   27      27         0       D           -           -
//    %%BIT       VC26LMSC   26      26         0       D           -           -
//    %%BIT       VC25LMSC   25      25         0       D           -           -
//    %%BIT       VC24LMSC   24      24         0       D           -           -
//    %%BIT       VC23LMSC   23      23         0       D           -           -
//    %%BIT       VC22LMSC   22      22         0       D           -           -
//    %%BIT       VC21LMSC   21      21         0       D           -           -
//    %%BIT       VC20LMSC   20      20         0       D           -           -
//    %%BIT       VC19LMSC   19      19         0       D           -           -
//    %%BIT       VC18LMSC   18      18         0       D           -           -
//    %%BIT       VC17LMSC   17      17         0       D           -           -
//    %%BIT       VC16LMSC   16      16         0       D           -           -
//    %%BIT       VC15LMSC   15      15         0       D           -           -
//    %%BIT       VC14LMSC   14      14         0       D           -           -
//    %%BIT       VC13LMSC   13      13         0       D           -           -
//    %%BIT       VC12LMSC   12      12         0       D           -           -
//    %%BIT       VC11LMSC   11      11         0       D           -           -
//    %%BIT       VC10LMSC   10      10         0       D           -           -
//    %%BIT       VC09LMSC   9       9          0       D           -           -
//    %%BIT       VC08LMSC   8       8          0       D           -           -
//    %%BIT       VC07LMSC   7       7          0       D           -           -
//    %%BIT       VC06LMSC   6       6          0       D           -           -
//    %%BIT       VC05LMSC   5       5          0       D           -           -
//    %%BIT       VC04LMSC   4       4          0       D           -           -
//    %%BIT       VC03LMSC   3       3          0       D           -           -
//    %%BIT       VC02LMSC   2       2          0       D           -           -
//    %%BIT       VC01LMSC   1       1          0       D           -           -
//    %%BIT       VC00LMSC   0       0          0       D           -           W
// 
// %REG_NAME  VCLMSCR2
//    %%TITLE     name       upper   lower      init    access      support     callback    
//    %%BIT       VC47LMSC   15      15         0       D           -           -
//    %%BIT       VC46LMSC   14      14         0       D           -           -
//    %%BIT       VC45LMSC   13      13         0       D           -           -
//    %%BIT       VC44LMSC   12      12         0       D           -           -
//    %%BIT       VC43LMSC   11      11         0       D           -           -
//    %%BIT       VC42LMSC   10      10         0       D           -           -
//    %%BIT       VC41LMSC   9       9          0       D           -           -
//    %%BIT       VC40LMSC   8       8          0       D           -           -
//    %%BIT       VC39LMSC   7       7          0       D           -           -
//    %%BIT       VC38LMSC   6       6          0       D           -           -
//    %%BIT       VC37LMSC   5       5          0       D           -           -
//    %%BIT       VC36LMSC   4       4          0       D           -           -
//    %%BIT       VC35LMSC   3       3          0       D           -           -
//    %%BIT       VC34LMSC   2       2          0       D           -           -
//    %%BIT       VC33LMSC   1       1          0       D           -           -
//    %%BIT       VC32LMSC   0       0          0       D           -           W
// 
// %REG_NAME  ADOPDIG
//     %%TITLE     name       upper   lower     init    access      support     callback    
//     %%BIT       ADOPDIGn0   0       0         0       W|R           -           W
//     %%BIT       ADOPDIGn1   1       1         0       W|R           -           -
//     %%BIT       ADOPDIGn2   2       2         0       W|R           -           -
//     %%BIT       ADOPDIGn3   3       3         0       W|R           -           -
//     %%BIT       ADOPDIGn4   4       4         0       W|R           -           -
//     %%BIT       ADOPDIGn5   5       5         0       W|R           -           -
//     %%BIT       ADOPDIGn6   6       6         0       W|R           -           -
//     %%BIT       ADOPDIGn7   7       7         0       W|R           -           -
//     %%BIT       ADOPDIGn8   8       8         0       W|R           -           -
//     %%BIT       ADOPDIGn9   9       9         0       W|R           -           -
//     %%BIT       ADOPDIGn10  10      10        0       W|R           -           -
//     %%BIT       ADOPDIGn11  11      11        0       W|R           -           -
// 
// 
// %CMD_BASEID  reg
// %CMD_NODUMP_API EnableInsertInput EnableDumpResult CommandCB AssertReset DumpProfile ClearProfile
////////////////////////////////////////////////////////////////////////////////
/// @file adc_regif.h
/// @brief Register IF class of model ADC
/// $Id$
/// $Date$
/// $Revison$
/// $Author$
////////////////////////////////////////////////////////////////////////////////
#ifndef __ADC_REGIF_H__
#define __ADC_REGIF_H__
#include <string>
#include <map>
#include <list>
#include <cstdarg>
#include <cerrno>
#include <iomanip>
#include <sstream>
#include <cassert>
#ifndef REGIF_NOT_USE_SYSTEMC
#include "systemc.h"
#endif
#include "re_register.h"
#ifdef CWR_SYSTEMC
#include "scml2.h"
#endif

/// Register IF class of ADC model
class Cadc_regif
: public vpcl::reg_super
{
protected:
    typedef const unsigned int cuint;
    typedef unsigned int uint;
#ifdef CWR_SYSTEMC
    typedef uint REG_TYPE;
#endif

    enum eRegGroup {
        emNum_of_gr
    }; ///< Enumeration for register group index
    enum eRegIndex {
        emNUM_VCR         = 48,
        emNUM_DR          = 24,
        emNUM_DIR         = 48,
        emNUM_ADENDP      = 5,
        emNUM_ULLMTBR     = 3,
        emNUM_SGSTCR      = 5,
        emNUM_SGSTPCR     = 5,
        emNUM_ADTSTCR     = 2,
        emNUM_ADTENDCR    = 2,
        emNUM_SGCR        = 5,
        emNUM_SGVCSP      = 5,
        emNUM_SGVCEP      = 5,
        emNUM_SGMCYCR     = 5,
        emNUM_SGVCPR      = 5,
        emNUM_SGVCOWR     = 5,
        emNUM_SGSR        = 5,
        emNUM_ADTIPR      = 2,
        emNUM_ADTPRR      = 2,
        emNUM_ULLMSR      = 5,
        emNUM_VCULLMTBR   = 7
    }; ///< Enumeration for register factor index
#ifdef USE_WEB_SIM
    enum eRegValIDConstant {
        emBitNum       = 0,
        emRegIDNum     = 0,
        emNumOfChannel = 1
    };
#endif

    struct RegCBstr {
        uint channel;
        bool is_wr;
        uint size;
        uint pre_data;
        uint data;
        RegCBstr (uint channel, bool is_wr, uint size, uint pre_data, uint data)
        {
            this-> channel  = channel;
            this-> is_wr    = is_wr;
            this-> size     = size;
            this-> pre_data = pre_data;
            this-> data     = data;
        }
    };
    struct SRegList {
        vpcl::re_register *my_p;
        SRegList *prev;
        uint channel;
        uint length;
        std::string wacc_size;
        std::string racc_size;
        bool block;
#ifdef CWR_SYSTEMC
        scml2::memory<REG_TYPE> *mcwmem;
        scml2::reg<REG_TYPE> *my_cw_p;
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false, scml2::memory<REG_TYPE> *_cwmem=NULL) {
            this->my_cw_p = NULL;
            if (_cwmem != NULL) {
                mcwmem = _cwmem;
            } else {
                assert(_prev != NULL && _prev->mcwmem != NULL) ;
                mcwmem = _prev->mcwmem;
            }
            this->my_cw_p = new scml2::reg<REG_TYPE> (_my_p->name(), *mcwmem , _my_p->addr());
#else
        SRegList( vpcl::re_register *_my_p, SRegList *_prev, uint _channel, uint _length, std::string _wacc_size, std::string _racc_size, bool _block = false) {
#endif
            this->my_p = NULL;
            if (_my_p != NULL) {
                this->my_p = _my_p;
            }
            this->prev = NULL;
            if (_prev != NULL) {
                this->prev = _prev;
            }
            this->channel   = _channel;
            this->length    = _length;
            this->wacc_size = _wacc_size;
            this->racc_size = _racc_size;
            this->block     = _block;
        }
        ~SRegList() {
#ifdef CWR_SYSTEMC
            delete my_cw_p;
#endif
        }
    } *mRegList, *mCurReg, **mRegArray;

    uint *mRegMap;
    uint mTotalRegNum;
#ifdef USE_WEB_SIM
    struct strRegValueID {
        int  BitVal[emBitNum];
        std::string RegValueID;
        strRegValueID(void) {
            for (unsigned int i = 0; i < emBitNum; i++) {
                BitVal[i] = 0;
            }
            RegValueID = "";
        }
        strRegValueID(int bitval[emBitNum], std::string reg_value_id) {
            for (unsigned int i = 0; i < emBitNum; i++) {
                this->BitVal[i] = bitval[i];
            }
            this->RegValueID = reg_value_id;
        }
    };
    
    vpcl::bit_info* mBitInfoPtr[emBitNum];
    uint mTargetRegVal[emBitNum];
    strRegValueID mRegValueIDLib[emRegIDNum];
    
    void InitializeRegValueID();
    void CalcTargetRegVal(void);
    void IssueRegValueID();

    typedef void (Cadc_regif::* ptrRegValueIDFunc) (std::string);
    ptrRegValueIDFunc mNotifyRegValueIDAPI;
    virtual void NotifyRegValueID(const std::string reg_val_id) = 0;
#endif

public:
    Cadc_regif(std::string name, uint buswidth);
    ~Cadc_regif();

protected:
    vpcl::re_register *VCR        [48];
    vpcl::re_register *DR         [24];
    vpcl::re_register *DIR        [48];
    vpcl::re_register *ADHALTR    ;
    vpcl::re_register *ADCR1      ;
    vpcl::re_register *MPXCURCR   ;
    vpcl::re_register *MPXINTER   ;
    vpcl::re_register *MPXCURR    ;
    vpcl::re_register *MPXOWR     ;
    vpcl::re_register *MPXCMDR    ;
    vpcl::re_register *ADCR2      ;
    vpcl::re_register *DFASENTSGER;
    vpcl::re_register *ADENDP     [5];
    vpcl::re_register *THSMPSTCR  ;
    vpcl::re_register *THSTPCR    ;
    vpcl::re_register *THCR       ;
    vpcl::re_register *THAHLDSTCR ;
    vpcl::re_register *THBHLDSTCR ;
    vpcl::re_register *THACR      ;
    vpcl::re_register *THBCR      ;
    vpcl::re_register *THER       ;
    vpcl::re_register *THGSR      ;
    vpcl::re_register *THOMSR     ;
    vpcl::re_register *SFTCR      ;
    vpcl::re_register *TDCR       ;
    vpcl::re_register *ODCR       ;
    vpcl::re_register *ULLMTBR    [3];
    vpcl::re_register *ECR        ;
    vpcl::re_register *ULER       ;
    vpcl::re_register *OWER       ;
    vpcl::re_register *PER        ;
    vpcl::re_register *IDER       ;
    vpcl::re_register *SYNCER     ;
    vpcl::re_register *SMPCR      ;
    vpcl::re_register *TRMCR      ;
    vpcl::re_register *ADTSTRA    ;
    vpcl::re_register *ADTSTRB    ;
    vpcl::re_register *ADTSTRC    ;
    vpcl::re_register *SGSTCR     [5];
    vpcl::re_register *SGSTPCR    [5];
    vpcl::re_register *ADTSTCR    [5];
    vpcl::re_register *ADTENDCR   [5];
    vpcl::re_register *SGCR       [5];
    vpcl::re_register *SGVCSP     [5];
    vpcl::re_register *SGVCEP     [5];
    vpcl::re_register *SGMCYCR    [5];
    vpcl::re_register *SGVCPR     [5];
    vpcl::re_register *SGVCOWR    [5];
    vpcl::re_register *SGSR       [5];
    vpcl::re_register *ADTIPR     [5];
    vpcl::re_register *ADTPRR     [5];
    vpcl::re_register *ULLMSR     [5];
    vpcl::re_register *VCULLMTBR  [7];
    vpcl::re_register *VCLMINTER1 ;
    vpcl::re_register *VCLMINTER2 ;
    vpcl::re_register *VCLMSR1    ;
    vpcl::re_register *VCLMSR2    ;
    vpcl::re_register *VCLMSCR1   ;
    vpcl::re_register *VCLMSCR2   ;
    vpcl::re_register *ADOPDIG    ;

    #ifdef CWR_SYSTEMC
    scml2::memory<REG_TYPE> cwmem;
    #endif

    uint VCR_VCULME  [48];
    uint VCR_VCLLME  [48];
    uint VCR_VCULLMTBS[48];
    uint VCR_PUE     [48];
    uint VCR_PDE     [48];
    uint VCR_CNVCLS  [48];
    uint VCR_DFENT   [48];
    uint VCR_DFTAG   [48];
    uint VCR_ADIE    [48];
    uint VCR_GCTRL   [48];
    uint DR_DR1      [24];
    uint DR_DR0      [24];
    uint DIR_IDEF    [48];
    uint DIR_WFLG    [48];
    uint DIR_PRTY    [48];
    uint DIR_ID      [48];
    uint DIR_DRn     [48];
    uint ADHALTR_HALT;
    uint ADCR1_SUSMTD;
    uint MPXCURCR_MSKCFMT;
    uint MPXINTER_ADMPXIE;
    uint MPXCURR_MSKC;
    uint MPXCURR_MPXCMD;
    uint MPXCURR_MPXCUR;
    uint MPXOWR_MPXOW;
    uint MPXCMDR_MPXCMD;
    uint ADCR2_DFMT  ;
    uint ADCR2_ADDNT ;
    uint DFASENTSGER_DFENTSG4E;
    uint DFASENTSGER_DFENTSG3E;
    uint DFASENTSGER_DFENTSG2E;
    uint DFASENTSGER_DFENTSG1E;
    uint DFASENTSGER_DFENTSG0E;
    uint DFASENTSGER_ASENTSG4E;
    uint DFASENTSGER_ASENTSG3E;
    uint DFASENTSGER_ASENTSG2E;
    uint DFASENTSGER_ASENTSG1E;
    uint DFASENTSGER_ASENTSG0E;
    uint ADENDP_ENDP [5];
    uint THSMPSTCR_SMPST;
    uint THSTPCR_THSTP;
    uint THCR_ASMPMSK;
    uint THAHLDSTCR_HLDST;
    uint THBHLDSTCR_HLDST;
    uint THACR_HLDCTE;
    uint THACR_HLDTE ;
    uint THACR_SGS   ;
    uint THBCR_HLDCTE;
    uint THBCR_HLDTE ;
    uint THBCR_SGS   ;
    uint THER_TH5E   ;
    uint THER_TH4E   ;
    uint THER_TH3E   ;
    uint THER_TH2E   ;
    uint THER_TH1E   ;
    uint THER_TH0E   ;
    uint THGSR_TH5GS ;
    uint THGSR_TH4GS ;
    uint THGSR_TH3GS ;
    uint THGSR_TH2GS ;
    uint THGSR_TH1GS ;
    uint THGSR_TH0GS ;
    uint THOMSR_KEY  ;
    uint THOMSR_THOMS;
    uint SFTCR_SYNCEIE;
    uint SFTCR_RDCLRE;
    uint SFTCR_ULEIE ;
    uint SFTCR_OWEIE ;
    uint SFTCR_PEIE  ;
    uint SFTCR_IDEIE ;
    uint TDCR_TDE    ;
    uint TDCR_TDLV   ;
    uint ODCR_ODDE   ;
    uint ODCR_DSCE   ;
    uint ODCR_ODE    ;
    uint ODCR_ODPW   ;
    uint ULLMTBR_ULMTB[3];
    uint ULLMTBR_LLMTB[3];
    uint ECR_SYNCEC  ;
    uint ECR_ULEC    ;
    uint ECR_OWEC    ;
    uint ECR_PEC     ;
    uint ECR_IDEC    ;
    uint ULER_ULE    ;
    uint ULER_ULECAP ;
    uint OWER_OWE    ;
    uint OWER_OWECAP ;
    uint PER_PE      ;
    uint PER_PECAP   ;
    uint IDER_IDE    ;
    uint IDER_IDECAP ;
    uint SYNCER_SYNCE;
    uint SMPCR_BUFAMPD;
    uint SMPCR_SMPT13_14;
    uint SMPCR_SMPTS ;
    uint SMPCR_SMPT8_11;
    uint SMPCR_SMPT  ;
    uint TRMCR_TRMS  ;
    uint TRMCR_TRMTTUNE;
    uint TRMCR_TRMBTUNE;
    uint TRMCR_TRMATUNE;
    uint TRMCR_TRMT  ;
    uint TRMCR_TRMB  ;
    uint TRMCR_TRMA  ;
    uint ADTSTRA_ADTST;
    uint ADTSTRB_ADVAL;
    uint ADTSTRC_CKSTP;
    uint ADTSTRC_ADMD;
    uint SGSTCR_SGST [5];
    uint SGSTPCR_SGSTP[5];
    uint ADTSTCR_ADTST[5];
    uint ADTENDCR_ADTEND[5];
    uint SGCR_ADTSTARTE[5];
    uint SGCR_ADSTARTE[5];
    uint SGCR_SCANMD [5];
    uint SGCR_ADIE   [5];
    uint SGCR_TRGMD  [5];
    uint SGVCSP_VCSP [5];
    uint SGVCEP_VCEP [5];
    uint SGMCYCR_MCYC[5];
    uint SGVCPR_VCEP [5];
    uint SGVCPR_VCSP [5];
    uint SGVCOWR_VCOW[5];
    uint SGSR_ADTACT [5];
    uint SGSR_SGACT  [5];
    uint ADTIPR_ADTIP[5];
    uint ADTPRR_ADTPR[5];
    uint ULLMSR_ULS  [5];
    uint VCULLMTBR_VCULMTB[7];
    uint VCULLMTBR_VCLLMTB[7];
    uint VCLMINTER1_ADUL31IE;
    uint VCLMINTER1_ADUL30IE;
    uint VCLMINTER1_ADUL29IE;
    uint VCLMINTER1_ADUL28IE;
    uint VCLMINTER1_ADUL27IE;
    uint VCLMINTER1_ADUL26IE;
    uint VCLMINTER1_ADUL25IE;
    uint VCLMINTER1_ADUL24IE;
    uint VCLMINTER1_ADUL23IE;
    uint VCLMINTER1_ADUL22IE;
    uint VCLMINTER1_ADUL21IE;
    uint VCLMINTER1_ADUL20IE;
    uint VCLMINTER1_ADUL19IE;
    uint VCLMINTER1_ADUL18IE;
    uint VCLMINTER1_ADUL17IE;
    uint VCLMINTER1_ADUL16IE;
    uint VCLMINTER1_ADUL15IE;
    uint VCLMINTER1_ADUL14IE;
    uint VCLMINTER1_ADUL13IE;
    uint VCLMINTER1_ADUL12IE;
    uint VCLMINTER1_ADUL11IE;
    uint VCLMINTER1_ADUL10IE;
    uint VCLMINTER1_ADUL09IE;
    uint VCLMINTER1_ADUL08IE;
    uint VCLMINTER1_ADUL07IE;
    uint VCLMINTER1_ADUL06IE;
    uint VCLMINTER1_ADUL05IE;
    uint VCLMINTER1_ADUL04IE;
    uint VCLMINTER1_ADUL03IE;
    uint VCLMINTER1_ADUL02IE;
    uint VCLMINTER1_ADUL01IE;
    uint VCLMINTER1_ADUL00IE;
    uint VCLMINTER2_ADUL47IE;
    uint VCLMINTER2_ADUL46IE;
    uint VCLMINTER2_ADUL45IE;
    uint VCLMINTER2_ADUL44IE;
    uint VCLMINTER2_ADUL43IE;
    uint VCLMINTER2_ADUL42IE;
    uint VCLMINTER2_ADUL41IE;
    uint VCLMINTER2_ADUL40IE;
    uint VCLMINTER2_ADUL39IE;
    uint VCLMINTER2_ADUL38IE;
    uint VCLMINTER2_ADUL37IE;
    uint VCLMINTER2_ADUL36IE;
    uint VCLMINTER2_ADUL35IE;
    uint VCLMINTER2_ADUL34IE;
    uint VCLMINTER2_ADUL33IE;
    uint VCLMINTER2_ADUL32IE;
    uint VCLMSR1_VC31LMS;
    uint VCLMSR1_VC30LMS;
    uint VCLMSR1_VC29LMS;
    uint VCLMSR1_VC28LMS;
    uint VCLMSR1_VC27LMS;
    uint VCLMSR1_VC26LMS;
    uint VCLMSR1_VC25LMS;
    uint VCLMSR1_VC24LMS;
    uint VCLMSR1_VC23LMS;
    uint VCLMSR1_VC22LMS;
    uint VCLMSR1_VC21LMS;
    uint VCLMSR1_VC20LMS;
    uint VCLMSR1_VC19LMS;
    uint VCLMSR1_VC18LMS;
    uint VCLMSR1_VC17LMS;
    uint VCLMSR1_VC16LMS;
    uint VCLMSR1_VC15LMS;
    uint VCLMSR1_VC14LMS;
    uint VCLMSR1_VC13LMS;
    uint VCLMSR1_VC12LMS;
    uint VCLMSR1_VC11LMS;
    uint VCLMSR1_VC10LMS;
    uint VCLMSR1_VC09LMS;
    uint VCLMSR1_VC08LMS;
    uint VCLMSR1_VC07LMS;
    uint VCLMSR1_VC06LMS;
    uint VCLMSR1_VC05LMS;
    uint VCLMSR1_VC04LMS;
    uint VCLMSR1_VC03LMS;
    uint VCLMSR1_VC02LMS;
    uint VCLMSR1_VC01LMS;
    uint VCLMSR1_VC00LMS;
    uint VCLMSR2_VC47LMS;
    uint VCLMSR2_VC46LMS;
    uint VCLMSR2_VC45LMS;
    uint VCLMSR2_VC44LMS;
    uint VCLMSR2_VC43LMS;
    uint VCLMSR2_VC42LMS;
    uint VCLMSR2_VC41LMS;
    uint VCLMSR2_VC40LMS;
    uint VCLMSR2_VC39LMS;
    uint VCLMSR2_VC38LMS;
    uint VCLMSR2_VC37LMS;
    uint VCLMSR2_VC36LMS;
    uint VCLMSR2_VC35LMS;
    uint VCLMSR2_VC34LMS;
    uint VCLMSR2_VC33LMS;
    uint VCLMSR2_VC32LMS;
    uint VCLMSCR1_VC31LMSC;
    uint VCLMSCR1_VC30LMSC;
    uint VCLMSCR1_VC29LMSC;
    uint VCLMSCR1_VC28LMSC;
    uint VCLMSCR1_VC27LMSC;
    uint VCLMSCR1_VC26LMSC;
    uint VCLMSCR1_VC25LMSC;
    uint VCLMSCR1_VC24LMSC;
    uint VCLMSCR1_VC23LMSC;
    uint VCLMSCR1_VC22LMSC;
    uint VCLMSCR1_VC21LMSC;
    uint VCLMSCR1_VC20LMSC;
    uint VCLMSCR1_VC19LMSC;
    uint VCLMSCR1_VC18LMSC;
    uint VCLMSCR1_VC17LMSC;
    uint VCLMSCR1_VC16LMSC;
    uint VCLMSCR1_VC15LMSC;
    uint VCLMSCR1_VC14LMSC;
    uint VCLMSCR1_VC13LMSC;
    uint VCLMSCR1_VC12LMSC;
    uint VCLMSCR1_VC11LMSC;
    uint VCLMSCR1_VC10LMSC;
    uint VCLMSCR1_VC09LMSC;
    uint VCLMSCR1_VC08LMSC;
    uint VCLMSCR1_VC07LMSC;
    uint VCLMSCR1_VC06LMSC;
    uint VCLMSCR1_VC05LMSC;
    uint VCLMSCR1_VC04LMSC;
    uint VCLMSCR1_VC03LMSC;
    uint VCLMSCR1_VC02LMSC;
    uint VCLMSCR1_VC01LMSC;
    uint VCLMSCR1_VC00LMSC;
    uint VCLMSCR2_VC47LMSC;
    uint VCLMSCR2_VC46LMSC;
    uint VCLMSCR2_VC45LMSC;
    uint VCLMSCR2_VC44LMSC;
    uint VCLMSCR2_VC43LMSC;
    uint VCLMSCR2_VC42LMSC;
    uint VCLMSCR2_VC41LMSC;
    uint VCLMSCR2_VC40LMSC;
    uint VCLMSCR2_VC39LMSC;
    uint VCLMSCR2_VC38LMSC;
    uint VCLMSCR2_VC37LMSC;
    uint VCLMSCR2_VC36LMSC;
    uint VCLMSCR2_VC35LMSC;
    uint VCLMSCR2_VC34LMSC;
    uint VCLMSCR2_VC33LMSC;
    uint VCLMSCR2_VC32LMSC;
    uint ADOPDIG_ADOPDIGn0;
    uint ADOPDIG_ADOPDIGn1;
    uint ADOPDIG_ADOPDIGn2;
    uint ADOPDIG_ADOPDIGn3;
    uint ADOPDIG_ADOPDIGn4;
    uint ADOPDIG_ADOPDIGn5;
    uint ADOPDIG_ADOPDIGn6;
    uint ADOPDIG_ADOPDIGn7;
    uint ADOPDIG_ADOPDIGn8;
    uint ADOPDIG_ADOPDIGn9;
    uint ADOPDIG_ADOPDIGn10;
    uint ADOPDIG_ADOPDIGn11;

    void EnableReset(const bool is_active);
    uint bit_select(cuint val, cuint start, cuint end);
    bool reg_wr(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd(cuint addr, unsigned char *p_data, cuint size);
    bool reg_wr_dbg(cuint addr, const unsigned char *p_data, cuint size);
    bool reg_rd_dbg(cuint addr, unsigned char *p_data, cuint size);
    std::string reg_handle_command(const std::vector<std::string>& args);
    int get_reg_index(cuint addr);
    vpcl::re_register *first_reg_object();
    vpcl::re_register *next_reg_object();

    void wr_cb(cuint addr, uint data);
    uint rd_cb(cuint addr);

    virtual void cb_VCR_GCTRL(RegCBstr str) = 0;
    virtual void cb_ADHALTR_HALT(RegCBstr str) = 0;
    virtual void cb_ADCR1_SUSMTD(RegCBstr str) = 0;
    virtual void cb_MPXCURCR_MSKCFMT(RegCBstr str) = 0;
    virtual void cb_MPXINTER_ADMPXIE(RegCBstr str) = 0;
    virtual void cb_MPXOWR_MPXOW(RegCBstr str) = 0;
    virtual void cb_MPXCMDR_MPXCMD(RegCBstr str) = 0;
    virtual void cb_ADCR2_DFMT(RegCBstr str) = 0;
    virtual void cb_DFASENTSGER_DFENTSG4E(RegCBstr str) = 0;
    virtual void cb_ADENDP_ENDP(RegCBstr str) = 0;
    virtual void cb_THSMPSTCR_SMPST(RegCBstr str) = 0;
    virtual void cb_THSTPCR_THSTP(RegCBstr str) = 0;
    virtual void cb_THCR_ASMPMSK(RegCBstr str) = 0;
    virtual void cb_THAHLDSTCR_HLDST(RegCBstr str) = 0;
    virtual void cb_THBHLDSTCR_HLDST(RegCBstr str) = 0;
    virtual void cb_THACR_SGS(RegCBstr str) = 0;
    virtual void cb_THBCR_SGS(RegCBstr str) = 0;
    virtual void cb_THER_TH0E(RegCBstr str) = 0;
    virtual void cb_THGSR_TH0GS(RegCBstr str) = 0;
    virtual void cb_SFTCR_ULEIE(RegCBstr str) = 0;
    virtual void cb_TDCR_TDE(RegCBstr str) = 0;
    virtual void cb_ODCR_ODDE(RegCBstr str) = 0;
    virtual void cb_ULLMTBR_ULMTB(RegCBstr str) = 0;
    virtual void cb_ECR_ULEC(RegCBstr str) = 0;
    virtual void cb_SMPCR_SMPT(RegCBstr str) = 0;
    virtual void cb_SGSTCR_SGST(RegCBstr str) = 0;
    virtual void cb_SGSTPCR_SGSTP(RegCBstr str) = 0;
    virtual void cb_ADTSTCR_ADTST(RegCBstr str) = 0;
    virtual void cb_ADTENDCR_ADTEND(RegCBstr str) = 0;
    virtual void cb_SGCR_ADIE(RegCBstr str) = 0;
    virtual void cb_SGVCSP_VCSP(RegCBstr str) = 0;
    virtual void cb_SGVCEP_VCEP(RegCBstr str) = 0;
    virtual void cb_SGMCYCR_MCYC(RegCBstr str) = 0;
    virtual void cb_SGVCPR_VCSP(RegCBstr str) = 0;
    virtual void cb_SGVCOWR_VCOW(RegCBstr str) = 0;
    virtual void cb_ADTIPR_ADTIP(RegCBstr str) = 0;
    virtual void cb_ADTPRR_ADTPR(RegCBstr str) = 0;
    virtual void cb_ULLMSR_ULS(RegCBstr str) = 0;
    virtual void cb_VCULLMTBR_VCULMTB(RegCBstr str) = 0;
    virtual void cb_VCLMINTER1_ADUL00IE(RegCBstr str) = 0;
    virtual void cb_VCLMINTER2_ADUL32IE(RegCBstr str) = 0;
    virtual void cb_VCLMSCR1_VC00LMSC(RegCBstr str) = 0;
    virtual void cb_VCLMSCR2_VC32LMSC(RegCBstr str) = 0;
    virtual void cb_ADOPDIG_ADOPDIGn0(RegCBstr str) = 0;

    void set_instance_name(std::string InstName);

    uint mBusByteWidth;
    uint mBusWidth;
    bool mIsReset;
    bool mDumpRegisterRW;
    bool mAPBAccessMode;
    bool mDumpBitInfo;
    std::map<std::string, bool> mMessageLevel;
    std::map<std::string, std::map<std::string, void (Cadc_regif::*) (RegCBstr)> > mWrCbAPI;
    std::map<std::string, std::map<std::string, void (Cadc_regif::*) (RegCBstr)> > mRdCbAPI;
    std::string mFileName;
    std::string mInstName;
    int mLineNum;
    uint mFactorIndexADTSTCR[emNUM_ADTSTCR];
    uint mFactorIndexADTENDCR[emNUM_ADTENDCR];
    uint mFactorIndexADTIPR[emNUM_ADTIPR];
    uint mFactorIndexADTPRR[emNUM_ADTPRR];

    bool reg_wr_process(cuint addr, const unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_rd_process(cuint addr, unsigned char *p_data, cuint size, bool IsDbgFunc);
    bool reg_wr_func(cuint addr, const unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    bool reg_rd_func(cuint addr, unsigned char *p_data, cuint size, cuint reg_index, bool IsDbgFunc);
    void _re_printf(const std::string msg_level, const char *format, ...);
    void get_fileline(std::string filename, int line_number);
    void CommandInit();
    bool ChkSize(std::string expect_size, cuint detect_size, cuint addr, bool is_wr);
    std::vector<std::string> Str2Vec(std::string str, const char sep);
    std::string Num2HexStr(cuint num, cuint num_length, bool space_strip, bool is_data, uint acc_size);
    void DumpRegMsg(const std::string operation, const std::string RegName, const std::string BitName, cuint size, cuint addr, cuint wr_data, cuint pre_data, cuint data, cuint reg_length);
    std::string AccessRegCommand(const std::vector<std::string>& args, vpcl::re_register *Register, bool &BlockReg);
    void InitLocalVal();
    void UpdateLocalVal(cuint addr);
    void UpdateRegVal(cuint addr);
    bool ChkAddrWithFactorIndex(cuint num, cuint factor_index[], cuint len);

    #ifdef CWR_SYSTEMC
    uint cw_rd_cb(tlm::tlm_generic_payload& trans, int tag);
    uint cw_wr_cb(tlm::tlm_generic_payload& trans, int tag);
    virtual void cw_set_callback_reg(scml2::reg<REG_TYPE> * reg, int offset);
    void cw_set_all_callback_reg(void);
    #endif
};
#endif //__ADC_REG_DEF_H__
